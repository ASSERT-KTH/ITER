bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(startValue,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(startValue,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  CalendarUtils.getIntValue(startValue,  endValue);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
2	[BUG]  [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  CalendarUtils.getIntValue(field);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
3	[BUG]  [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(field,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(field,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  CalendarUtils.getIntValue(field,  endValue);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
4	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
5	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  end.add(field,  second);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  end.add(field,  second);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  startValue  -  startValue;  end.add(field,  second);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
6	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
7	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  +  startValue;  end.add(field,  seconds);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  +  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  startValue  +  startValue;  end.add(field,  seconds);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
8	[BUG]  [BUGGY]  int  startValue  =  start.get(field,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  start.get(field,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  start.get(field,  endValue);	      int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	14	None	replace
9	[BUG]  [BUGGY]  int  startValue  =  start.get(field  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  start.get(field  -  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  start.get(field  -  1);	      int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	14	None	replace
10	[BUG]  [BUGGY]  int  startValue  =  start.get(field  +  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  start.get(field  +  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  start.get(field  +  1);	      int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	14	None	replace
11	[BUG]  [BUGGY]  int  startValue  =  end.get(field,  difference);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field,  difference);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field,  difference);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
12	[BUG]  [BUGGY]  int  startValue  =  end.get(field  +  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field  +  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field  +  1);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
13	[BUG]  [BUGGY]  int  startValue  =  end.get(field  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field  -  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field  -  1);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
14	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  endValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  endValue  -  startValue;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	7	None	replace
15	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  +  1;  [CE]  cannot  find  symbol  newdiff  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  startValue  -  endValue  +  1;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  startValue  -  endValue  +  1;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	7	None	replace
16	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  -  1;  [CE]  cannot  find  symbol  newdiff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  startValue  -  endValue  -  1;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  startValue  -  endValue  -  1;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	7	None	replace
17	[BUG]  [BUGGY]  int  seconds  =  startValue  /  startValue;  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  startValue  /  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  startValue  /  startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	10	None	replace
18	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
19	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
20	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    Int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	9	1	add
22	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	9	1	add
23	[BUG]  [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(endValue,  field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  CalendarUtils.getIntValue(endValue,  field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  CalendarUtils.getIntValue(endValue,  field);	      int    startValue    =    CalendarUtils.getIntValue(startValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	16	None	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  difference;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	int  newdiff  =  startValue  /  difference;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
25	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  difference;  [FE]  ComparisonFailure  [FE]        ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  difference;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue  /  difference;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  *  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	int  newdiff  =  startValue  *  endValue;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
27	[BUG]  [BUGGY]  int  newdiff  =  startValue  *  endValue;  [FE]  ComparisonFailure  [FE]          ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  *  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue  *  endValue;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ComparisonFailure  	4	1	replace
28	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue;  int  newdiff  =  startValue  /  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue;  int  newdiff  =  startValue  /  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    /    endValue;    int  newdiff  =  startValue  /  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
29	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue;  Int  newdiff  =  startValue  /  endValue;  [CE]  cannot  find  symbol  [FE]      ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue;  Int  newdiff  =  startValue  /  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    /    endValue;    Int  newdiff  =  startValue  /  endValue;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
30	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue;  int  newdiff  =  startValue  /  endValue);  [CE]  ';'  expected  [FE]        ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue;  int  newdiff  =  startValue  /  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    /    endValue;    int  newdiff  =  startValue  /  endValue);	  	non-compiled	[CE]  ';'  expected	3	None	add
31	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue;  Object  newdiff  =  startValue  /  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue;  Object  newdiff  =  startValue  /  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    /    endValue;    Object  newdiff  =  startValue  /  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
32	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  -  1;  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  -  1;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.currentTimeMillis()  -  1;	      int    startValue    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	18	None	replace
33	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  +  1;  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  +  1;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.currentTimeMillis()  +  1;	      int    startValue    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	18	None	replace
34	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  /  2;  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  /  2;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.currentTimeMillis()  /  2;	      int    startValue    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	18	None	replace
35	[BUG]  [BUGGY]  int  newdiff  =  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue.get(field);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue.get(field);	      	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
36	[BUG]  [BUGGY]  int  newdiff  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  endValue.get(field);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  endValue.get(field);	      	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
37	[BUG]  [BUGGY]  int  newdiff  =  getAndRemove(startValue,  endValue);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  getAndRemove(startValue,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  getAndRemove(startValue,  endValue);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
38	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
39	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  endValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
40	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  Int  seconds  =  startValue  -  endValue;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  Int  seconds  =  startValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    Int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	        int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;	  	compilable	  [FE]  ComparisonFailure  	6	1	add
42	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;	  	compilable	  [FE]  ComparisonFailure  	6	1	add
43	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.getIntValue(startValue);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
44	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.getIntValue(field);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
45	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(startValue,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.getIntValue(startValue,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.getIntValue(startValue,  endValue);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
46	[BUG]  [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(startValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  DateTimeUtils.getIntValue(startValue);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
47	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue  -  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue  -  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    int  newdiff  =  startValue  -  endValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
48	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  Integer  newdiff  =  startValue  -  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  Integer  newdiff  =  startValue  -  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    Integer  newdiff  =  startValue  -  endValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
49	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  endValue  -  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  endValue  -  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    int  newdiff  =  endValue  -  endValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
50	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue  +  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue  +  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    int  newdiff  =  startValue  +  endValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
51	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  endValue  -  startValue;  end.add(field,  seconds);	      int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    	non-compiled	[CE]  cannot  find  symbol  newdiff	13	None	replace
52	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);  [CE]  cannot  find  symbol  newdiff  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);	      int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    	non-compiled	[CE]  cannot  find  symbol  newdiff	13	None	replace
53	[BUG]  [BUGGY]  int  seconds  =  field  -  startValue;  end.add(field,  seconds);  [CE]  cannot  find  symbol  newdiff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  field  -  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  field  -  startValue;  end.add(field,  seconds);	      int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    	non-compiled	[CE]  cannot  find  symbol  newdiff	13	None	replace
54	[BUG]  [BUGGY]  int  seconds  =  fieldValue  -  startValue;  end.add(field,  seconds);  [CE]  cannot  find  symbol  fieldValue  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  fieldValue  -  startValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  fieldValue  -  startValue;  end.add(field,  seconds);	      int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    	non-compiled	[CE]  cannot  find  symbol  fieldValue	13	None	replace
55	[BUG]  [BUGGY]  int  startValue  =  get(field,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(field,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(field,  endValue);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
56	[BUG]  [BUGGY]  int  startValue  =  get(startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(startValue);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
57	[BUG]  [BUGGY]  int  startValue  =  get(field,  startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(field,  startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(field,  startValue);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
58	[BUG]  [BUGGY]  int  startValue  =  get(field,  end);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(field,  end);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(field,  end);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  2;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	int  newdiff  =  startValue  -  endValue  +  2;	  int    newdiff    =    startValue    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
60	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  2;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  2;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue  -  endValue  +  2;	  int    newdiff    =    startValue    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
61	[BUG]  [BUGGY]  DurationFormatUtils.remove(startValue,  endValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.remove(startValue,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.remove(startValue,  endValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
62	[BUG]  [BUGGY]  DurationFormatUtils.remove(endValue,  difference);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.remove(endValue,  difference);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.remove(endValue,  difference);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
63	[BUG]  [BUGGY]  DurationFormatUtils.remove(startValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.remove(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.remove(startValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
64	[BUG]  [BUGGY]  DurationFormatUtils.removeChild(startValue);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.removeChild(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.removeChild(startValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
65	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field,  endValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field,  endValue);	      int    startValue    =    Calendar.getInstance(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
66	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field,  difference);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field,  difference);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field,  difference);	      int    startValue    =    Calendar.getInstance(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
67	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field,  end);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field,  end);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field,  end);	      int    startValue    =    Calendar.getInstance(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
68	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(start,  field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(start,  field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(start,  field);	      int    startValue    =    Calendar.getInstance(field,    startValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	20	None	replace
69	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field,  endValue  -  startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field,  endValue  -  startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field,  endValue  -  startValue);	      int    startValue    =    Calendar.getInstance(field,    startValue);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	20	None	replace
70	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field  -  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field  -  1);	      int    startValue    =    Calendar.getInstance(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
71	[BUG]  [BUGGY]  int  newdiff  =  startValue.add(endValue);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue.add(endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue.add(endValue);	      	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
72	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  +  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  /  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	int  newdiff  =  startValue  -  endValue  /  1;	  int    newdiff    =    startValue    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
74	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  /  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue  -  endValue  /  1;	  int    newdiff    =    startValue    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
75	[BUG]  [BUGGY]  DurationFormatUtils.remove(endValue,  startValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.remove(endValue,  startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.remove(endValue,  startValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
76	[BUG]  [BUGGY]  DurationFormatUtils.remove(endValue,  field);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.remove(endValue,  field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.remove(endValue,  field);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
77	[BUG]  [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(startValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  CalendarUtils.getIntValue(startValue);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
78	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  Int  newdiff  =  startValue  -  endValue  +  1;  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  Int  newdiff  =  startValue  -  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    Int  newdiff  =  startValue  -  endValue  +  1;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
79	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue,  endValue  +  1;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  -  endValue  +  1;  int  newdiff  =  startValue,  endValue  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    -    endValue    +    1;    int  newdiff  =  startValue,  endValue  +  1;	  	non-compiled	[CE]  ';'  expected	1	None	add
80	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue  +  difference;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	int  newdiff  =  startValue  /  endValue  +  difference;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ArithmeticException  	4	1	replace
81	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue  +  difference;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue  +  difference;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  startValue  /  endValue  +  difference;	  int    newdiff    =    startValue    /    endValue;    	compilable	  [FE]  ArithmeticException  	4	1	replace
82	[BUG]  [BUGGY]  int  startValue  =  get(field  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(field  -  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(field  -  1);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
83	[BUG]  [BUGGY]  int  startValue  =  get(field  +  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  get(field  +  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  get(field  +  1);	      int    startValue    =    get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	replace
84	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  End.add(field,  seconds);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  startValue;  End.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  startValue  -  startValue;  End.add(field,  seconds);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
85	[BUG]  [BUGGY]  int  newdiff  =  startValue  /  endValue;  float  newdiff  =  startValue  /  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  startValue  /  endValue;  float  newdiff  =  startValue  /  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int    newdiff    =    startValue    /    endValue;    float  newdiff  =  startValue  /  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
86	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue  +  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
87	[BUG]  [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  -  startValue;  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  DateTimeUtils.currentTimeMillis()  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  DateTimeUtils.currentTimeMillis()  -  startValue;	      int    startValue    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	18	None	replace
88	[BUG]  [BUGGY]  int  startValue  =  end.get(field,  startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field,  startValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field,  startValue);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
89	[BUG]  [BUGGY]  int  seconds  =  field  -  endValue;  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  field  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  field  -  endValue;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	7	None	replace
90	[BUG]  [BUGGY]  DurationFormatUtils.removeLast(endValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.removeLast(endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.removeLast(endValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
91	[BUG]  [BUGGY]  DurationFormatUtils.removeMillis(endValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  DurationFormatUtils.removeMillis(endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	DurationFormatUtils.removeMillis(endValue);	      DurationFormatUtils.remove(endValue);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
92	[BUG]  [BUGGY]  int  endValue  =  Calendar.getInstance(field,  endValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  Calendar.getInstance(field,  endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  Calendar.getInstance(field,  endValue);	      int    startValue    =    Calendar.getInstance(field,    startValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	20	None	replace
93	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue.-  endValue;  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue.-  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue.-  endValue;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
94	[BUG]  [BUGGY]  int  newdiff  =  end.remove(field);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  end.remove(field);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  end.remove(field);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
95	[BUG]  [BUGGY]  int  newdiff  =  getAndMillis(endValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  getAndMillis(endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  getAndMillis(endValue);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
96	[BUG]  [BUGGY]  int  seconds  =  startValue  -  field;  end.add(field,  seconds);  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  startValue  -  field;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  startValue  -  field;  end.add(field,  seconds);	      int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    	non-compiled	[CE]  cannot  find  symbol  newdiff	13	None	replace
97	[BUG]  [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  DateTimeUtils.getIntValue(field);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
98	[BUG]  [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(endValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  DateTimeUtils.getIntValue(endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  DateTimeUtils.getIntValue(endValue);	      int    startValue    =    DateTimeUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	replace
99	[BUG]  [BUGGY]  int  startValue  =  Calendar.getInstance(field,  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  Calendar.getInstance(field,  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  Calendar.getInstance(field,  1);	      int    startValue    =    Calendar.getInstance(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
100	[BUG]  [BUGGY]  int  startValue  =  end.get(field,  0);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field,  0);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field,  0);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
101	[BUG]  [BUGGY]  int  startValue  =  end.get(field,  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  end.get(field,  1);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  end.get(field,  1);	      int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	replace
102	[BUG]  [BUGGY]  int  startValue  =  field.get(start);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  startValue  =  field.get(start);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  startValue  =  field.get(start);	      int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	14	None	replace
103	[BUG]  [BUGGY]  int  seconds  =  field  -  startValue;  [CE]  cannot  find  symbol  newdiff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  seconds  =  field  -  startValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  seconds  =  field  -  startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  newdiff	10	None	replace
104	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  end.add(field,  seconds);  int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    end.add(field,    seconds);    int  seconds  =  startValue  -  endValue;  end.add(field,  seconds);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	12	None	add
105	[BUG]  [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(field);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  CalendarUtils.getIntValue(field);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
106	[BUG]  [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(endValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  endValue  =  CalendarUtils.getIntValue(endValue);  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  endValue  =  CalendarUtils.getIntValue(endValue);	      int    startValue    =    CalendarUtils.getIntValue(endValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	replace
107	[BUG]  [BUGGY]  int  newdiff  =  value  /  endValue;  [CE]  cannot  find  symbol  value  [FE]    ArithmeticException    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]  int  newdiff  =  value  /  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	int  newdiff  =  value  /  endValue;	  int    newdiff    =    startValue    /    endValue;    	non-compiled	[CE]  cannot  find  symbol  value	4	None	replace
108	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
