bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    newdiff  =  Math.max(newdiff,  endValue);		compilable	  [FE]  ComparisonFailure  	14	1	add
2	[BUG]  [BUGGY]    newdiff  =  Math.max(newdiff,  endValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    newdiff  =  Math.max(newdiff,  endValue);		compilable	  [FE]  ComparisonFailure  	14	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    newdiff  =  Math.min(newdiff,  endValue  -  startValue);		compilable	  [FE]  ComparisonFailure  	14	1	add
4	[BUG]  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    newdiff  =  Math.min(newdiff,  endValue  -  startValue);		compilable	  [FE]  ComparisonFailure  	14	1	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    newdiff  =  Math.min(newdiff,  endValue  -  difference);		compilable	  [FE]  ComparisonFailure  	14	1	add
6	[BUG]  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    newdiff  =  Math.min(newdiff,  endValue  -  difference);		compilable	  [FE]  ComparisonFailure  	14	1	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -  1;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  1;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
8	[BUG]  [BUGGY]  return  newdiff  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -  1;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  1;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -  endValue;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  endValue;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
10	[BUG]  [BUGGY]  return  newdiff  -  endValue;  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -  endValue;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  endValue;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  +  1;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  +  1;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
12	[BUG]  [BUGGY]  return  newdiff  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  +  1;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  +  1;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  startValue;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
14	[BUG]  [BUGGY]  return  startValue;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  startValue;  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue;	return  newdiff;  	compilable	  [FE]  ComparisonFailure  	13	1	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  startValue  -  endValue;  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    int  seconds  =  startValue  -  endValue;		compilable	  [FE]  ComparisonFailure  	14	1	add
16	[BUG]  [BUGGY]    int  seconds  =  startValue  -  endValue;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  startValue  -  endValue;  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    int  seconds  =  startValue  -  endValue;		compilable	  [FE]  ComparisonFailure  	14	1	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  end.get(field);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    int  seconds  =  end.get(field);		compilable	  [FE]  ComparisonFailure  	14	1	add
18	[BUG]  [BUGGY]    int  seconds  =  end.get(field);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  end.get(field);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    int  seconds  =  end.get(field);		compilable	  [FE]  ComparisonFailure  	14	1	add
19	[BUG]  [BUGGY]    int  seconds  =  end.get(field,  difference  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  end.get(field,  difference  -  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    int  seconds  =  end.get(field,  difference  -  startValue);		non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	14	None	add
20	[BUG]  [BUGGY]    int  seconds  =  Math.min(end.get(field)-  startValue);  [CE]  no  suitable  method  found  for  min(int)  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  Math.min(end.get(field)-  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    int  seconds  =  Math.min(end.get(field)-  startValue);		non-compiled	[CE]  no  suitable  method  found  for  min(int)	14	None	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  startValue  -  startValue;  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	    int  seconds  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	14	1	add
22	[BUG]  [BUGGY]    int  seconds  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    int  seconds  =  startValue  -  startValue;  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    int  seconds  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	14	1	add
23	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);	return  newdiff;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	13	None	replace
24	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);	return  newdiff;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	13	None	replace
25	[BUG]  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  -1  *  difference);  }  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  -1  *  difference);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
26	[BUG]  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    if(diff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
27	[BUG]  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
28	[BUG]  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  newdiff);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  newdiff);  }  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	    if(diff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  0;  i--)  {  end.add(field,  newdiff);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
