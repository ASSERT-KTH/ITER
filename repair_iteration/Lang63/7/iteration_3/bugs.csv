bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  difference  +  1;	  return    newdiff    -    difference;    	compilable	  [FE]  ComparisonFailure  	102	1	replace
2	[BUG]  [BUGGY]  return  newdiff  -  difference  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  difference  +  1;	  return    newdiff    -    difference;    	compilable	  [FE]  ComparisonFailure  	102	1	replace
3	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	93	None	replace
4	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  startValue;  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	93	None	replace
5	[BUG]  [BUGGY]  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	93	None	replace
6	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  missing  return  statement  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	93	None	replace
7	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    int    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	65	None	replace
8	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  startValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  startValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  startValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    int    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	65	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  startValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
10	[BUG]  [BUGGY]  return  newdiff  -  startValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  -  newdiff  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
12	[BUG]  [BUGGY]  return  endValue  -  newdiff  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -  newdiff  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  endValue  +  2;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
14	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  2;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  endValue  +  2;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
15	[BUG]  [BUGGY]  Integer  newdiff  =  startValue.get(field,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  startValue.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  startValue.get(field,  difference);	  Integer    newdiff    =    startValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	136	None	replace
16	[BUG]  [BUGGY]  Integer  newdiff  =  field.get(startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  field.get(startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  field.get(startValue);	  Integer    newdiff    =    startValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	136	None	replace
17	[BUG]  [BUGGY]  int  milliseconds  =  end.get(field);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  end.get(field);	  return    newdiff    +    1;    int    milliseconds    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	111	None	replace
18	[BUG]  [BUGGY]  int  milliseconds  =  field.get(newdiff);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.get(newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.get(newdiff);	  return    newdiff    +    1;    int    milliseconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	111	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
20	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
21	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	68	None	add
22	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  change  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  cannot  find  symbol  change	68	None	add
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
24	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
26	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  -  1;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
28	[BUG]  [BUGGY]  return  endValue  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -  1;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  -  2;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
30	[BUG]  [BUGGY]  return  startValue  -  2;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  -  2;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
31	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }  else  {  return  0;  }  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    +    1;    int    seconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	45	None	replace
32	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }  [CE]  unreachable  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  ==  0)  {  return  newdiff  +  1;  int  seconds  =  end.get(field);  }	  return    newdiff    +    1;    int    seconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	45	None	replace
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  -  startValue;	  return    startValue    -    endValue;    	compilable	  [FE]  ComparisonFailure  	127	1	replace
34	[BUG]  [BUGGY]  return  endValue  -  startValue;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -  startValue;	  return    startValue    -    endValue;    	compilable	  [FE]  ComparisonFailure  	127	1	replace
35	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
36	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
37	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
38	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
39	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  baseValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  baseValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  baseValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  /  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
41	[BUG]  [BUGGY]  return  newdiff  /  1  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  2  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
43	[BUG]  [BUGGY]  return  newdiff  -  2  +  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  2  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
44	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  difference,  startValue);  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  difference,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  difference,  startValue);	  int    seconds    =    Math.min(end.get(field)-    difference,    startValue);    	non-compiled	[CE]  missing  return  statement	168	None	replace
45	[BUG]  [BUGGY]  int  seconds  =  Math.max(end.get(field)-  newdiff,  startValue);  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.max(end.get(field)-  newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.max(end.get(field)-  newdiff,  startValue);	  int    seconds    =    Math.min(end.get(field)-    difference,    startValue);    	non-compiled	[CE]  missing  return  statement	168	None	replace
46	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  endValue);  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  endValue);	  int    seconds    =    Math.min(end.get(field)-    difference,    startValue);    	non-compiled	[CE]  missing  return  statement	168	None	replace
47	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
48	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
49	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
50	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  endValue);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  endValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  endValue);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
51	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  endValue;	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	181	None	replace
52	[BUG]  [BUGGY]  int  milliseconds  =  startValue.getMillis();  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  startValue.getMillis();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue.getMillis();	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	181	None	replace
53	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  1,  difference);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  1,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  1,  difference);	  newdiff    =    Math.min(newdiff,    endValue    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	98	None	replace
54	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  +  1);	  newdiff    =    Math.min(newdiff,    endValue    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
55	[BUG]  [BUGGY]  int  seconds  =  Math.min(endValue.get(field)-  startValue);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(endValue.get(field)-  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(endValue.get(field)-  startValue);	  int    seconds    =    Math.min(startValue.get(field)-    endValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
56	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  newdiff);  [CE]  int  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue.get(field)-  newdiff);	  int    seconds    =    Math.min(startValue.get(field)-    endValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
57	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  difference);  [CE]  int  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue.get(field)-  difference);	  int    seconds    =    Math.min(startValue.get(field)-    endValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
58	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);	  return    newdiff    -(startValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  ')'  expected	87	None	replace
59	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  +  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  +  1);	  int    seconds    =    end.get(field    +    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	32	None	replace
60	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field  +  1);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field  +  1);	  int    seconds    =    end.get(field    +    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	32	None	replace
61	[BUG]  [BUGGY]  int  seconds  =  endValue  -  start.get(field);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  start.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  missing  return  statement	170	None	replace
62	[BUG]  [BUGGY]  int  seconds  =  startValue  -  end.get(field);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  end.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  missing  return  statement	170	None	replace
63	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	170	None	replace
64	[BUG]  [BUGGY]  int  seconds  =  endValue  -  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  field.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  field.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	170	None	replace
65	[BUG]  [BUGGY]  return  newdiff  +  2;  newdiff  +  2;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  newdiff  +  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    newdiff  +  2;	  	non-compiled	[CE]  not  a  statement	61	None	add
66	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  endValue;  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  unreachable  statement	61	None	add
67	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	61	None	add
68	[BUG]  [BUGGY]  return  newdiff  +  2;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	61	None	add
69	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  startValue;  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  unreachable  statement	61	None	add
70	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	41	None	replace
71	[BUG]  [BUGGY]  Context.reportCodeChange(this,  startValue);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.reportCodeChange(this,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.reportCodeChange(this,  startValue);	  Context.reportCodeChange();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	70	None	replace
72	[BUG]  [BUGGY]  Context.reportCodeChange(startValue,  newdiff);  [CE]  cannot  find  symbol  Context  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.reportCodeChange(startValue,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.reportCodeChange(startValue,  newdiff);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
73	[BUG]  [BUGGY]  Context.reportCodeChange(startValue);  [CE]  cannot  find  symbol  Context  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.reportCodeChange(startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.reportCodeChange(startValue);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
74	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  startValue,  difference);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
75	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  startValue,  newdiff);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
76	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  0);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  0);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  0);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
77	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  difference,  newdiff);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
78	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  this.milliseconds);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  this.milliseconds);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  this.milliseconds);	  newdiff    =    Math.min(newdiff,    endValue    -    change);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	167	None	replace
79	[BUG]  [BUGGY]  int  seconds  =  endValue  -  difference;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  difference;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  difference;	  int    seconds    =    difference    -    endValue;    	non-compiled	[CE]  missing  return  statement	177	None	replace
80	[BUG]  [BUGGY]  int  newdiff  =  end.get(field,  difference  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  end.get(field,  difference  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  end.get(field,  difference  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
81	[BUG]  [BUGGY]  int  newdiff  =  end.get(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  end.get(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
82	[BUG]  [BUGGY]  int  newdiff  =  endValue.get(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue.get(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
83	[BUG]  [BUGGY]  int  newdiff  =  end.get(field,  change  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  end.get(field,  change  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  end.get(field,  change  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
84	[BUG]  [BUGGY]  int  days  =  startValue  -  endValue;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  -  endValue;	  int    days    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	145	None	replace
85	[BUG]  [BUGGY]  int  days  =  newdiff  -  startValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  newdiff  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  newdiff  -  startValue;	  int    days    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	145	None	replace
86	[BUG]  [BUGGY]  int  days  =  difference  -  startValue;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  difference  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  difference  -  startValue;	  int    days    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	145	None	replace
87	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  1);	  newdiff    =    Math.max(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	160	None	replace
88	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  startValue);	  newdiff    =    Math.max(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	160	None	replace
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
90	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
92	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
93	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	116	None	add
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
95	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  /  2;	  return    newdiff    -    2;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
97	[BUG]  [BUGGY]  return  newdiff  /  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  2;	  return    newdiff    -    2;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  %  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  %  2;	  return    newdiff    -    2;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
99	[BUG]  [BUGGY]  return  newdiff  %  2;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  %  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  %  2;	  return    newdiff    -    2;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
100	[BUG]  [BUGGY]  int  seconds  =  start.get(field);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field);	          int    seconds    =    end.get(field);    int    seconds    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	71	None	replace
101	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  difference);  [CE]  no  suitable  method  found  for  min(int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  difference);	  int    seconds    =    Math.min(end.get(field)-    difference);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	140	None	replace
102	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  difference);  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  difference);	  int    seconds    =    Math.min(end.get(field)-    difference);    	non-compiled	[CE]  missing  return  statement	140	None	replace
103	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field,  newdiff)-  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field,  newdiff)-  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field,  newdiff)-  difference);	  int    seconds    =    Math.min(end.get(field)-    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	140	None	replace
104	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  startValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  startValue;	  return    newdiff    -    1;    int    newdiff    -    1;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	57	None	replace
105	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  startValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  startValue;	  return    newdiff    -    1;    int    newdiff    -    1;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	57	None	replace
106	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  endValue;	  return    newdiff    -    1;    int    newdiff    -    1;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	57	None	replace
107	[BUG]  [BUGGY]  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  end.get(field);	  return    newdiff    -    endValue;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	26	None	replace
108	[BUG]  [BUGGY]  int  newdiff  =  endValue.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue.get(field);	  return    newdiff    -    endValue;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	26	None	replace
109	[BUG]  [BUGGY]  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  endValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  endValue  =  start.get(field);	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	123	None	replace
110	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  0;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  missing  return  statement	123	None	replace
111	[BUG]  [BUGGY]  int  seconds  =  end.get(field);  int  minutes  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field);  int  minutes  =  endValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field);  int  minutes  =  endValue.get(field);	          int    seconds    =    end.get(field);    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
112	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field);  int  minutes  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field);  int  minutes  =  endValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field);  int  minutes  =  endValue.get(field);	          int    seconds    =    end.get(field);    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
113	[BUG]  [BUGGY]  int  seconds  =  start.get(field);  int  minutes  =  end.get(field);  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field);  int  minutes  =  end.get(field);	          int    seconds    =    end.get(field);    int    minutes    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	73	None	replace
114	[BUG]  [BUGGY]  int  milliseconds  =  startValue.getMilliseconds();  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  startValue.getMilliseconds();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue.getMilliseconds();	  int    milliseconds    =    endValue.getMilliseconds();    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
115	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMilliseconds()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.getMilliseconds()  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMilliseconds()  -  1;	  int    milliseconds    =    endValue.getMilliseconds();    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
116	[BUG]  [BUGGY]  int  milliseconds  =  field.getMilliseconds();  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.getMilliseconds();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.getMilliseconds();	  int    milliseconds    =    endValue.getMilliseconds();    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
117	[BUG]  [BUGGY]  int  seconds  =  endValue  -  getSeconds();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  getSeconds();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  getSeconds();	          int    seconds    =    startValue    -    endValue;    int    seconds    =    endValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
118	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
119	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  endValue  =  end.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
120	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  endValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  endValue  =  start.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
121	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  -  endValue;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  -  endValue;	  	non-compiled	[CE]  ';'  expected	126	None	add
122	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field,  newdiff  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
123	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  2);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  2);	  newdiff    =    Math.max(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	161	None	replace
124	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  /  1);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  /  1);	  newdiff    =    Math.max(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	161	None	replace
125	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  +  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.min(newdiff,    endValue    +    startValue);    	non-compiled	[CE]  missing  return  statement	176	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
127	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
128	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	50	None	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
130	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
132	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
134	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
135	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	47	None	replace
136	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
137	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  startValue;  end.add(  field,  newdiff  );  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  startValue;  end.add(  field,  newdiff  );  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  startValue;  end.add(  field,  newdiff  );	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
138	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
139	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
140	[BUG]  [BUGGY]  int  seconds  =  endValue  -  newdiff;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  newdiff;	  int    seconds    =    startValue    -    newdiff;    	non-compiled	[CE]  missing  return  statement	82	None	replace
141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
142	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
143	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
144	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
145	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
146	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
148	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
149	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    +    startValue);    int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	175	None	add
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
151	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
153	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
155	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
156	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	46	None	add
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
158	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
159	[BUG]  [BUGGY]  Integer  seconds  =  end.get(field);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  seconds  =  end.get(field);	  return    newdiff    -    1;    int    seconds    =    end.get(field);    	non-compiled	[CE]  incompatible  types	180	None	replace
160	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue  +  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue  +  1;	  int    seconds    =    startValue    -    endValue    +    1;    	non-compiled	[CE]  missing  return  statement	84	None	replace
161	[BUG]  [BUGGY]  int  seconds  =  difference  -  endValue  +  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  endValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  endValue  +  1;	  int    seconds    =    startValue    -    endValue    +    1;    	non-compiled	[CE]  missing  return  statement	84	None	replace
162	[BUG]  [BUGGY]  int  seconds  =  newdiff  -  endValue  +  1;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  newdiff  -  endValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  newdiff  -  endValue  +  1;	  int    seconds    =    startValue    -    endValue    +    1;    	non-compiled	[CE]  missing  return  statement	84	None	replace
163	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field,  newdiff  -  startValue);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field,  newdiff  -  startValue);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	157	None	replace
164	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff,  difference  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff,  difference  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff,  difference  -  startValue);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	157	None	replace
165	[BUG]  [BUGGY]  int  seconds  =  endValue  -  field;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  field;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  field;	  int    seconds    =    field    -    startValue;    	non-compiled	[CE]  missing  return  statement	159	None	replace
166	[BUG]  [BUGGY]  int  seconds  =  startValue  -  field;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  field;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  field;	  int    seconds    =    field    -    startValue;    	non-compiled	[CE]  missing  return  statement	159	None	replace
167	[BUG]  [BUGGY]  return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	151	None	replace
168	[BUG]  [BUGGY]  return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	151	None	replace
169	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  ')'  expected	151	None	replace
170	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  +  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  +  1);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	151	None	replace
171	[BUG]  [BUGGY]  newdiff  +=  1;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  1;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
172	[BUG]  [BUGGY]  newdiff  +=  2;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  2;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
173	[BUG]  [BUGGY]  newdiff  +=(endValue  -  startValue)/  2;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=(endValue  -  startValue)/  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=(endValue  -  startValue)/  2;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
174	[BUG]  [BUGGY]  newdiff  +=  Math.max(newdiff,  endValue);  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  Math.max(newdiff,  endValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  Math.max(newdiff,  endValue);	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
175	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	138	None	replace
176	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  difference);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	138	None	replace
177	[BUG]  [BUGGY]  int  seconds  =  field.get(endValue,  difference);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(endValue,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(endValue,  difference);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  int  cannot  be  dereferenced	138	None	replace
178	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference,  0);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference,  0);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference,  0);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	138	None	replace
179	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  endValue);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  +  endValue);	  newdiff    =    Math.min(newdiff,    endValue    +    startValue);    	non-compiled	[CE]  missing  return  statement	97	None	replace
180	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  change);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  change);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  change);	  newdiff    =    Math.min(newdiff,    endValue    +    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	97	None	replace
181	[BUG]  [BUGGY]  int  seconds  =  field.get(startValue);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(startValue);	  int    seconds    =    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
182	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field,  difference);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field,  difference);	  int    seconds    =    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
183	[BUG]  [BUGGY]  int  seconds  =  startValue  -  difference;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  difference;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  difference;	  int    seconds    =    difference    -    startValue;    	non-compiled	[CE]  missing  return  statement	128	None	replace
184	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  newdiff);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  newdiff);	  newdiff    =    Math.min(newdiff,    endValue    -    newdiff);    	non-compiled	[CE]  missing  return  statement	166	None	replace
185	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	69	None	replace
186	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
187	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  seconds  =  endValue  -  endValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
188	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
189	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  int  minutes  =  baseValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  int  minutes  =  baseValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  seconds  =  startValue  -  endValue;  int  minutes  =  baseValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
190	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  seconds  =  startValue  +  endValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
191	[BUG]  [BUGGY]  int  newdiff  =  Math.max(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Integer    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	113	None	replace
192	[BUG]  [BUGGY]  Integer  newdiff  =  Math.max(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Integer    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	113	None	replace
193	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Integer    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	113	None	replace
194	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  startValue,  difference);  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  startValue,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  startValue,  difference);	  int    seconds    =    Math.min(end.get(field)-    startValue,    difference);    	non-compiled	[CE]  missing  return  statement	142	None	replace
195	[BUG]  [BUGGY]  int  seconds  =  Math.max(end.get(field)-  newdiff,  difference);  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.max(end.get(field)-  newdiff,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.max(end.get(field)-  newdiff,  difference);	  int    seconds    =    Math.min(end.get(field)-    startValue,    difference);    	non-compiled	[CE]  missing  return  statement	142	None	replace
196	[BUG]  [BUGGY]  int  seconds  =  Math.max(end.get(field)-  startValue,  newdiff);  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.max(end.get(field)-  startValue,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.max(end.get(field)-  startValue,  newdiff);	  int    seconds    =    Math.min(end.get(field)-    startValue,    difference);    	non-compiled	[CE]  missing  return  statement	142	None	replace
197	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	66	None	replace
198	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	115	None	replace
199	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	115	None	replace
200	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue  +  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue  +  1);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	115	None	replace
201	[BUG]  [BUGGY]  int  milliseconds  =  difference  -  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  difference  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  difference  -  1;	  int    milliseconds    =    startValue    -    1;    	non-compiled	[CE]  missing  return  statement	132	None	replace
202	[BUG]  [BUGGY]  int  milliseconds  =  newdiff  -  1;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  newdiff  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  newdiff  -  1;	  int    milliseconds    =    startValue    -    1;    	non-compiled	[CE]  missing  return  statement	132	None	replace
203	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  -  1);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	86	None	replace
204	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  +  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY  +  1);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	86	None	replace
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
206	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
208	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
210	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
211	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
212	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
213	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    +    difference);    int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	164	None	add
214	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
215	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  -  1;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  -  1;	  	non-compiled	[CE]  ';'  expected	120	None	add
216	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field,  newdiff  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
217	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field,  difference  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field,  difference  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field,  difference  -  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
218	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field)-  1;  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field)-  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field)-  1;	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
219	[BUG]  [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  end.get(field);  int  minutes  =  end.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  end.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        end.get(field);        int    minutes    =    end.get(field);    int  seconds  =  end.get(field);  int  minutes  =  end.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	72	None	add
220	[BUG]  [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  start.get(field);  int  minutes  =  end.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  start.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        end.get(field);        int    minutes    =    end.get(field);    int  seconds  =  start.get(field);  int  minutes  =  end.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	72	None	add
221	[BUG]  [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  minutes  =  end.get(field);  int  minutes  =  end.get(field);  [CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  minutes  =  end.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        end.get(field);        int    minutes    =    end.get(field);    int  minutes  =  end.get(field);  int  minutes  =  end.get(field);	  	non-compiled	[CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	72	None	add
222	[BUG]  [BUGGY]  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Integer    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	118	None	replace
223	[BUG]  [BUGGY]  int  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.max(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Integer    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	118	None	replace
224	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	147	None	replace
225	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	147	None	replace
226	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  value;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  value;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  value;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	147	None	replace
227	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  field;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  field;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  field;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	147	None	replace
228	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    Newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	49	None	replace
229	[BUG]  [BUGGY]  return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	146	None	replace
230	[BUG]  [BUGGY]  return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	146	None	replace
231	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	146	None	replace
232	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  newdiff);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  ')'  expected	146	None	replace
233	[BUG]  [BUGGY]  newdiff  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  endValue  -  startValue;	  return    newdiff    -    endValue;    int    newdiff    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	28	None	replace
234	[BUG]  [BUGGY]  return  newdiff  -  2;  newdiff  -  2;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  newdiff  -  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    newdiff  -  2;	  	non-compiled	[CE]  not  a  statement	7	None	add
235	[BUG]  [BUGGY]  return  newdiff  -  2;  int  newdiff  -  2;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  newdiff  -  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  newdiff  -  2;	  	non-compiled	[CE]  ';'  expected	7	None	add
236	[BUG]  [BUGGY]  return  newdiff  -  2;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  2);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  2);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
237	[BUG]  [BUGGY]  return  newdiff  -  2;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  2);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  2);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
238	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  difference;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue  -  difference;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  difference;	  int    milliseconds    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	131	None	replace
239	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  newdiff;  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue  -  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  newdiff;	  int    milliseconds    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	131	None	replace
240	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  startValue  +  1;  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue  -  startValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  startValue  +  1;	  int    milliseconds    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	131	None	replace
241	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    endValue    -    startValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	60	None	replace
242	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  startValue;  end.add(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  startValue;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  startValue;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    endValue    -    startValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	60	None	replace
243	[BUG]  [BUGGY]  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    endValue    -    startValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  missing  return  statement	60	None	replace
244	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff);	  return    newdiff    -    1;    int    newdiff    =    endValue    -    startValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	60	None	replace
245	[BUG]  [BUGGY]  int  seconds  =  Math.min(newdiff,  end.get(field)-  startValue);  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(newdiff,  end.get(field)-  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(newdiff,  end.get(field)-  startValue);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  missing  return  statement	141	None	replace
246	[BUG]  [BUGGY]  int  seconds  =  Math.max(newdiff,  end.get(field)-  startValue);  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.max(newdiff,  end.get(field)-  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.max(newdiff,  end.get(field)-  startValue);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  missing  return  statement	141	None	replace
247	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  newdiff);  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue,  end.get(field)-  newdiff);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  missing  return  statement	141	None	replace
248	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  difference);  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue,  end.get(field)-  difference);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  missing  return  statement	141	None	replace
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  10;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  /  10;	  return    newdiff    /    1;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
250	[BUG]  [BUGGY]  return  newdiff  /  10;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  10;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  10;	  return    newdiff    /    1;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
251	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMillis()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.getMillis()  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMillis()  -  1;	  int    milliseconds    =    endValue.getMillis();    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
252	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMillis()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.getMillis()  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMillis()  +  1;	  int    milliseconds    =    endValue.getMillis();    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
253	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  /  difference);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  /  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  /  difference);	  newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	54	None	replace
254	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  difference  -  1);	  newdiff    =    Math.min(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	143	None	replace
255	[BUG]  [BUGGY]  int  seconds  =  end.get(field  -  difference);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  -  difference);	  int    seconds    =    end.get(field    -    startValue);    	non-compiled	[CE]  missing  return  statement	137	None	replace
256	[BUG]  [BUGGY]  int  seconds  =  end.get(field  -  newdiff);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field  -  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  -  newdiff);	  int    seconds    =    end.get(field    -    startValue);    	non-compiled	[CE]  missing  return  statement	137	None	replace
257	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field  -  startValue);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field  -  startValue);	  int    seconds    =    end.get(field    -    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	137	None	replace
258	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  1;  end.add(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  1;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  1;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	59	None	replace
259	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	59	None	replace
260	[BUG]  [BUGGY]  int  newdiff  =  difference  -  1;  end.add(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  difference  -  1;  end.add(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  difference  -  1;  end.add(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	59	None	replace
261	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  1;	  return    newdiff    -    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	139	None	replace
262	[BUG]  [BUGGY]  int  seconds  =  field.get(endValue);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(endValue);	  int    seconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	35	None	replace
263	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field,  difference);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field,  difference);	  int    seconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	35	None	replace
264	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
265	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  start.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
266	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  if(endValue  >  newdiff)  {  return  endValue  -  newdiff;  }  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  if(endValue  >  newdiff)  {  return  endValue  -  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field);  if(endValue  >  newdiff)  {  return  endValue  -  newdiff;  }	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
267	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  return  endValue  -  newdiff;  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  return  endValue  -  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field);  return  endValue  -  newdiff;	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
268	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  endValue  -  newdiff;  }  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  endValue  -  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  endValue  -  newdiff;  }	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
269	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int    newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	48	None	replace
270	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  startValue  -  endValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int    newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	48	None	replace
271	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue  +  difference;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue  +  difference;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue  +  difference;	  int    seconds    =    startValue    -    endValue    +    difference;    	non-compiled	[CE]  missing  return  statement	125	None	replace
272	[BUG]  [BUGGY]  int  seconds  =  difference  -  endValue  +  startValue;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  endValue  +  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  endValue  +  startValue;	  int    seconds    =    startValue    -    endValue    +    difference;    	non-compiled	[CE]  missing  return  statement	125	None	replace
273	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  +  newdiff;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue  +  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue  +  newdiff;	  int    seconds    =    startValue    -    endValue    +    difference;    	non-compiled	[CE]  missing  return  statement	125	None	replace
274	[BUG]  [BUGGY]  newdiff  -  1;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -  1;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  not  a  statement	58	None	replace
275	[BUG]  [BUGGY]  newdiff  -=  endValue;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -=  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -=  endValue;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
276	[BUG]  [BUGGY]  newdiff  -=  startValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -=  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -=  startValue;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
277	[BUG]  [BUGGY]  newdiff  -=  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -=  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -=  1;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
278	[BUG]  [BUGGY]  int  minutes  =  end.get(field);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  minutes  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  minutes  =  end.get(field);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	158	None	replace
279	[BUG]  [BUGGY]  int  minutes  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  minutes  =  endValue.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  minutes  =  endValue.get(field);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	158	None	replace
280	[BUG]  [BUGGY]  int  minutes  =  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  minutes  =  startValue.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  minutes  =  startValue.get(field);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	158	None	replace
281	[BUG]  [BUGGY]  int  minutes  =  end.get(field,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  minutes  =  end.get(field,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  minutes  =  end.get(field,  difference);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	158	None	replace
282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
283	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
285	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
287	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
288	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  change  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  change);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  cannot  find  symbol  change	63	None	add
289	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
290	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
291	[BUG]  [BUGGY]  int  newdiff  -=  endValue;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -=  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -=  endValue;	  return    newdiff    -    endValue;    int    newdiff    -    endValue;    	non-compiled	[CE]  ';'  expected	27	None	replace
292	[BUG]  [BUGGY]  int  newdiff  -=  startValue;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -=  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -=  startValue;	  return    newdiff    -    endValue;    int    newdiff    -    endValue;    	non-compiled	[CE]  ';'  expected	27	None	replace
293	[BUG]  [BUGGY]  int  milliseconds  =  field.getMilliseconds(endValue);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.getMilliseconds(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.getMilliseconds(endValue);	  int    milliseconds    =    endValue.getMilliseconds(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
294	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMilliseconds(field,  difference);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.getMilliseconds(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMilliseconds(field,  difference);	  int    milliseconds    =    endValue.getMilliseconds(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
295	[BUG]  [BUGGY]  int  milliseconds  =  fields.getMilliseconds(endValue);  [CE]  cannot  find  symbol  fields  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  fields.getMilliseconds(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  fields.getMilliseconds(endValue);	  int    milliseconds    =    endValue.getMilliseconds(field);    	non-compiled	[CE]  cannot  find  symbol  fields	16	None	replace
296	[BUG]  [BUGGY]  int  milliseconds  =  startValue.getMilliseconds(field);  [CE]  int  cannot  be  dereferenced  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  startValue.getMilliseconds(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue.getMilliseconds(field);	  int    milliseconds    =    endValue.getMilliseconds(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	16	None	replace
297	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1  +  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
298	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  newdiff  -  1  +  1;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  newdiff  -  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    newdiff  -  1  +  1;	  	non-compiled	[CE]  not  a  statement	11	None	add
299	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  -  1  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  -  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  newdiff  -  1  +  1;	  	non-compiled	[CE]  ';'  expected	11	None	add
300	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1  +  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
301	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  endValue);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  difference  -  endValue);	  newdiff    =    Math.min(newdiff,    startValue    -    endValue);    	non-compiled	[CE]  missing  return  statement	96	None	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
303	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
304	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue);    int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	36	None	add
305	[BUG]  [BUGGY]  int  milliseconds  =  field.get(endValue);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.get(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.get(endValue);	  int    milliseconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
306	[BUG]  [BUGGY]  int  milliseconds  =  endValue.get(field,  difference);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.get(field,  difference);	  int    milliseconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
307	[BUG]  [BUGGY]  int  milliseconds  =  endValue.get(field  +  difference);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.get(field  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.get(field  +  difference);	  int    milliseconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
308	[BUG]  [BUGGY]  int  days  =  field  -  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  field  -  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  field  -  startValue.get(field);	  int    days    =    startValue    -    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	162	None	replace
309	[BUG]  [BUGGY]  int  days  =  endValue  -  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  startValue.get(field);	  int    days    =    startValue    -    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	162	None	replace
310	[BUG]  [BUGGY]  int  days  =  startValue  -  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  startValue  -  endValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  -  endValue.get(field);	  int    days    =    startValue    -    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	162	None	replace
311	[BUG]  [BUGGY]  int  days  =  startValue  -  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  startValue  -  field.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  -  field.get(field);	  int    days    =    startValue    -    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	162	None	replace
312	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
313	[BUG]  [BUGGY]  int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
314	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
315	[BUG]  [BUGGY]  int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff);  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  startValue;  end.add(field,  newdiff);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
316	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  endValue);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  endValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  endValue);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	89	None	replace
317	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  1);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  1);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	89	None	replace
318	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  0,  newdiff);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  0,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  0,  newdiff);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	89	None	replace
319	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field,  difference  -  startValue);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field,  difference  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field,  difference  -  startValue);	  int    seconds    =    end.get(field,    change    -    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	169	None	replace
320	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  endValue  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  endValue  -  startValue);	  int    seconds    =    end.get(field,    change    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	169	None	replace
321	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff,  startValue);  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  newdiff,  startValue);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
322	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff);  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
323	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff  -  1);  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  newdiff  -  1);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
324	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
325	[BUG]  [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	129	None	add
326	[BUG]  [BUGGY]  return  startValue  +  1;  int  seconds  =  Math.min(startValue,  end.get(field));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  seconds  =  Math.min(startValue,  end.get(field));  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  seconds  =  Math.min(startValue,  end.get(field));	  	non-compiled	[CE]  unreachable  statement	129	None	add
327	[BUG]  [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  seconds  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	129	None	add
328	[BUG]  [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field,  newdiff  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  seconds  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  seconds  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	129	None	add
329	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	109	None	replace
330	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  endValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	109	None	replace
331	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  Newdiff  =  Math.max(newdiff,  endValue);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  Newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  Newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	39	None	replace
332	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  Newdiff  =  Math.max(newdiff,  endValue);  [CE]  cannot  find  symbol  Newdiff  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  Newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  startValue);  Newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	39	None	replace
333	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  Newdiff  =  Math.max(newdiff,  endValue);  [CE]  cannot  find  symbol  Newdiff  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  Newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  difference);  Newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	39	None	replace
334	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff,  difference);  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  newdiff,  difference);	  int    seconds    =    Math.min(end.get(field)/    startValue);    	non-compiled	[CE]  missing  return  statement	17	None	replace
335	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff);  [CE]  no  suitable  method  found  for  min(int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  newdiff);	  int    seconds    =    Math.min(end.get(field)/    startValue);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	17	None	replace
336	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue.get(field)/  endValue);  [CE]  int  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue.get(field)/  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue.get(field)/  endValue);	  int    seconds    =    Math.min(end.get(field)/    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	17	None	replace
337	[BUG]  [BUGGY]  newdiff  =  endValue  -  endValue;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  endValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  endValue  -  endValue;	  return    newdiff    -    endValue;    int    newdiff    =    endValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	29	None	replace
338	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  value);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  value);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff    =    Math.min(newdiff,    endValue    -    change);    	non-compiled	[CE]  cannot  find  symbol  value	67	None	replace
339	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	103	None	replace
340	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
341	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
342	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  value;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  value;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  value;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
343	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  newdiff;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  newdiff;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  newdiff;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
344	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field,  endValue  -  difference);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field,  endValue  -  difference);	  int    seconds    =    end.get(field,    startValue    -    difference);    	non-compiled	[CE]  int  cannot  be  dereferenced	22	None	replace
345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  +  1;	  return    startValue    +    1;    	compilable	  [FE]  ComparisonFailure  	130	1	replace
346	[BUG]  [BUGGY]  return  endValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  +  1;	  return    startValue    +    1;    	compilable	  [FE]  ComparisonFailure  	130	1	replace
347	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  /  1;	  return    startValue    +    1;    	compilable	  [FE]  ComparisonFailure  	130	1	replace
348	[BUG]  [BUGGY]  return  startValue  /  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  /  1;	  return    startValue    +    1;    	compilable	  [FE]  ComparisonFailure  	130	1	replace
349	[BUG]  [BUGGY]  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  endValue  =  end.get(field);	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	122	None	replace
350	[BUG]  [BUGGY]  long  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  long  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	long  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	91	None	replace
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
352	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
353	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
354	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
355	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
356	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
357	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
358	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
359	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  0,  startValue  -  startValue);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  0,  startValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  0,  startValue  -  startValue);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	52	None	add
360	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
361	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
362	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	40	None	add
363	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
364	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
365	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  change);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  change);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  change);	  	non-compiled	[CE]  cannot  find  symbol  change	40	None	add
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
367	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
368	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    int  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	114	None	add
369	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
370	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
371	[BUG]  [BUGGY]  Int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    endValue;    Int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
372	[BUG]  [BUGGY]  int  newdiff  =  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  +  1;	  return    newdiff    +    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	110	None	replace
373	[BUG]  [BUGGY]  return  newdiff  +  1;  int  newdiff  =  end.get(field,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  1;  int  newdiff  =  end.get(field,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  +  1;  int  newdiff  =  end.get(field,  difference);	  return    newdiff    +    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	110	None	replace
374	[BUG]  [BUGGY]  int  startValue  =  end.get(field,  difference);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field,  difference);	  return    startValue;    int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	76	None	replace
375	[BUG]  [BUGGY]  Integer  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  startValue  =  end.get(field);	  return    startValue;    int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	76	None	replace
376	[BUG]  [BUGGY]  long  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  long  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	long  startValue  =  end.get(field);	  return    startValue;    int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	76	None	replace
377	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue  -  1;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue  -  1;	  int    seconds    =    startValue    -    endValue    -    1;    	non-compiled	[CE]  missing  return  statement	178	None	replace
378	[BUG]  [BUGGY]  int  seconds  =  difference  -  endValue  -  1;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  endValue  -  1;	  int    seconds    =    startValue    -    endValue    -    1;    	non-compiled	[CE]  missing  return  statement	178	None	replace
379	[BUG]  [BUGGY]  int  seconds  =  newdiff  -  endValue  -  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  newdiff  -  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  newdiff  -  endValue  -  1;	  int    seconds    =    startValue    -    endValue    -    1;    	non-compiled	[CE]  missing  return  statement	178	None	replace
380	[BUG]  [BUGGY]  int  seconds  =  field  -  endValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  endValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	1	None	replace
381	[BUG]  [BUGGY]  int  seconds  =  this.endValue  -  startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  this.endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  this.endValue  -  startValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
382	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  newdiff;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  newdiff;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	4	None	replace
383	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  getMillis();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  getMillis();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  getMillis();	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
384	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  timeZone;  [CE]  cannot  find  symbol  timeZone  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  timeZone;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  timeZone;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  timeZone	4	None	replace
385	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  newdiff);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	88	None	replace
386	[BUG]  [BUGGY]  return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	88	None	replace
387	[BUG]  [BUGGY]  Integer  newdiff  =  endValue.get(field,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  endValue.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  endValue.get(field,  difference);	  Integer    newdiff    =    endValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	107	None	replace
388	[BUG]  [BUGGY]  Integer  newdiff  =  endValue.get(field  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  endValue.get(field  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  endValue.get(field  -  1);	  Integer    newdiff    =    endValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	107	None	replace
389	[BUG]  [BUGGY]  Integer  newdiff  =  endValue.get(field  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  endValue.get(field  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  endValue.get(field  +  1);	  Integer    newdiff    =    endValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	107	None	replace
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  -  newdiff  -  1;	  return    endValue    -    newdiff;    	compilable	  [FE]  ComparisonFailure  	153	1	replace
391	[BUG]  [BUGGY]  return  endValue  -  newdiff  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -  newdiff  -  1;	  return    endValue    -    newdiff;    	compilable	  [FE]  ComparisonFailure  	153	1	replace
392	[BUG]  [BUGGY]  int  seconds  =  Math.min(newdiff.get(field)-  endValue);  [CE]  int  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(newdiff.get(field)-  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(newdiff.get(field)-  endValue);	  int    seconds    =    Math.min(end.get(field)-    newdiff);    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
393	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  2);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  2);	  newdiff    =    Math.min(newdiff,    endValue    +    difference);    	non-compiled	[CE]  missing  return  statement	56	None	replace
394	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  difference  -  1);  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  difference  -  1);	  newdiff    =    Math.min(newdiff,    endValue    +    difference);    	non-compiled	[CE]  missing  return  statement	56	None	replace
395	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    1;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	174	None	replace
396	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    1;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	174	None	replace
397	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    1;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	174	None	replace
398	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  0;  }	  if(newdiff    ==    0)    {    return    0;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
399	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  1);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	80	None	replace
400	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  1);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	80	None	replace
401	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field,  newdiff  -  1);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field,  newdiff  -  1);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	80	None	replace
402	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  change  -  1);  [CE]  cannot  find  symbol  change  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  change  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  change  -  1);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    1);    	non-compiled	[CE]  cannot  find  symbol  change	80	None	replace
403	[BUG]  [BUGGY]  int  milliseconds  =  endValue  /  1;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue  /  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  /  1;	  int    milliseconds    =    endValue    -    1;    	non-compiled	[CE]  missing  return  statement	133	None	replace
404	[BUG]  [BUGGY]  return  newdiff  -  startValue;  newdiff  -=  endValue;  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue;  newdiff  -=  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue;  newdiff  -=  endValue;	  return    newdiff    -    endValue;    newdiff    -    endValue;    	non-compiled	[CE]  unreachable  statement	25	None	replace
405	[BUG]  [BUGGY]  int  milliseconds  =  difference  -  endValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  difference  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  difference  -  endValue;	  int    milliseconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	134	None	replace
406	[BUG]  [BUGGY]  int  milliseconds  =  startValue  -  endValue  +  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  startValue  -  endValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue  -  endValue  +  1;	  int    milliseconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	134	None	replace
407	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1,  difference);  [CE]  no  suitable  method  found  for  min(int,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1,  difference);	  newdiff    =    Math.min(newdiff,    endValue    -    startValue    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,int,int)	119	None	replace
408	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue  +  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  endValue  +  1);	  newdiff    =    Math.min(newdiff,    endValue    -    startValue    +    1);    	non-compiled	[CE]  missing  return  statement	119	None	replace
409	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  difference  +  1);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  difference  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  difference  +  1);	  newdiff    =    Math.min(newdiff,    endValue    -    startValue    +    1);    	non-compiled	[CE]  missing  return  statement	119	None	replace
410	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  newdiff  -  endValue  +  1;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  newdiff  -  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    newdiff  -  endValue  +  1;	  	non-compiled	[CE]  not  a  statement	99	None	add
411	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  startValue  -  endValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  startValue  -  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  newdiff  =  startValue  -  endValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	99	None	add
412	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  endValue  -  startValue  +  1;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  endValue  -  startValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  newdiff  =  endValue  -  startValue  +  1;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	99	None	add
413	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  endValue  =  end.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	99	None	add
414	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	99	None	add
415	[BUG]  [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  end.get(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(end);  Int  seconds  =  end.get(field);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
416	[BUG]  [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  field.get(end);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  field.get(end);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(end);  Int  seconds  =  field.get(end);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
417	[BUG]  [BUGGY]  int  seconds  =  field.get(end);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(end);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(end);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
418	[BUG]  [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(end);  Int  seconds  =  field.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(end);  Int  seconds  =  field.get(field);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
419	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  /  2);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  /  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  /  2);	  newdiff    =    Math.min(newdiff,    endValue    -    2);    	non-compiled	[CE]  missing  return  statement	163	None	replace
420	[BUG]  [BUGGY]  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  start.get(field);	  return    startValue;    int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	150	None	replace
421	[BUG]  [BUGGY]  int  startValue  =  start.get(field,  difference);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  start.get(field,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  start.get(field,  difference);	  return    startValue;    int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	150	None	replace
422	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
423	[BUG]  [BUGGY]  return  newdiff  /  1;  newdiff  /  1;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  newdiff  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    newdiff  /  1;	  	non-compiled	[CE]  not  a  statement	9	None	add
424	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  /  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  /  1;	  	non-compiled	[CE]  ';'  expected	9	None	add
425	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  2);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  /  2);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
426	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field  -  1);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field  -  1);	  int    seconds    =    end.get(field    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
427	[BUG]  [BUGGY]  int  days  =  endValue  -  newdiff;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  newdiff;	  int    days    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	155	None	replace
428	[BUG]  [BUGGY]  int  days  =  endValue  -  startValue  +  1;  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  startValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  startValue  +  1;	  int    days    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	155	None	replace
429	[BUG]  [BUGGY]  int  days  =  endValue  -  difference;  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  difference;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  difference;	  int    days    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	155	None	replace
430	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);	  return    newdiff    -(startValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	104	None	replace
431	[BUG]  [BUGGY]  int  milliseconds  =  field.get(startValue);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.get(startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.get(startValue);	  int    milliseconds    =    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	135	None	replace
432	[BUG]  [BUGGY]  int  milliseconds  =  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.get(field);	  int    milliseconds    =    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	135	None	replace
433	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  newdiff  -  difference;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  newdiff  -  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  newdiff  -  difference;	  	non-compiled	[CE]  ';'  expected	101	None	add
434	[BUG]  [BUGGY]  return  newdiff  -  difference;  newdiff  -  difference;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  newdiff  -  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    newdiff  -  difference;	  	non-compiled	[CE]  not  a  statement	101	None	add
435	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	101	None	add
436	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  startValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  startValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  newdiff  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	101	None	add
437	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  endValue  -  difference;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  endValue  -  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  newdiff  =  endValue  -  difference;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	101	None	add
438	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  newdiff  -  endValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field,  newdiff  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  newdiff  -  endValue);	  int    seconds    =    start.get(field,    difference    -    endValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	24	None	replace
439	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  endValue  -  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  endValue  -  difference);	  int    seconds    =    start.get(field,    difference    -    endValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	24	None	replace
440	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field,  difference  -  endValue);  [CE]  int  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field,  difference  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field,  difference  -  endValue);	  int    seconds    =    start.get(field,    difference    -    endValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
441	[BUG]  [BUGGY]  int  seconds  =  startValue  +  endValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  +  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  +  endValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    +    endValue;    	non-compiled	[CE]  missing  return  statement	188	None	replace
442	[BUG]  [BUGGY]  int  seconds  =  endValue  +  startValue;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  +  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  +  startValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    +    endValue;    	non-compiled	[CE]  missing  return  statement	188	None	replace
443	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  difference);	  int    seconds    =    end.get(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	21	None	replace
444	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff,  startValue  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff,  startValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff,  startValue  -  startValue);	  int    seconds    =    end.get(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	21	None	replace
445	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff,  difference);	  return    newdiff    +    1;    int    seconds    =    end.get(field,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	171	None	replace
446	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  1);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND    +    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	106	None	replace
447	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND    +    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	106	None	replace
448	[BUG]  [BUGGY]  Integer  newdiff  =  end.get(field,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  end.get(field,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  end.get(field,  difference);	  Integer    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	108	None	replace
449	[BUG]  [BUGGY]  Integer  newdiff  =  start.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  start.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  start.get(field);	  Integer    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	108	None	replace
450	[BUG]  [BUGGY]  Integer  newdiff  =  end.get(field  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  end.get(field  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  end.get(field  -  1);	  Integer    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	108	None	replace
451	[BUG]  [BUGGY]  int  newdiff  =  Math.max(newdiff,  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.max(newdiff,  startValue);	          newdiff    =    Math.max(newdiff,    endValue);    int    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	38	None	replace
452	[BUG]  [BUGGY]  int  newdiff  -=  newdiff;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -=  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -=  newdiff;	  return    newdiff    -    endValue;    int    newdiff    -=    endValue;    	non-compiled	[CE]  ';'  expected	124	None	replace
453	[BUG]  [BUGGY]  if(newdiff!=  0)  {  return  -1;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff!=  0)  {  return  -1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff!=  0)  {  return  -1;  }	  if(newdiff!=    0)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
454	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  startValue  -  endValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  startValue  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  startValue  -  endValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.min(newdiff,    startValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	53	None	replace
455	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	51	None	replace
456	[BUG]  [BUGGY]  float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	91	None	replace
457	[BUG]  [BUGGY]  float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	91	None	replace
458	[BUG]  [BUGGY]  return  newdiff  -  startValue;  newdiff  -  endValue;  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue;  newdiff  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue;  newdiff  -  endValue;	  return    newdiff    -    endValue;    newdiff    -    endValue;    	non-compiled	[CE]  not  a  statement	25	None	replace
459	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  1);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  1);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
460	[BUG]  [BUGGY]  return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
461	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  startValue);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND,  startValue);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND,    difference);    	non-compiled	[CE]  ')'  expected	105	None	replace
462	[BUG]  [BUGGY]  return  endValue  -  newdiff;  return  endValue  -  newdiff;  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  return  endValue  -  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    return  endValue  -  newdiff;	  	non-compiled	[CE]  unreachable  statement	152	None	add
463	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  newdiff  -  startValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
464	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Integer    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	118	None	replace
465	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  startValue);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	157	None	replace
466	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
467	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
468	[BUG]  [BUGGY]  int  newdiff  =  Math.min(endValue,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(endValue,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(endValue,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    int    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	65	None	replace
469	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
470	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
471	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue  -  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue  -  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue  -  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
472	[BUG]  [BUGGY]  Integer  newdiff  =  startValue.get(field  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  startValue.get(field  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  startValue.get(field  -  difference);	  Integer    newdiff    =    startValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	136	None	replace
473	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
474	[BUG]  [BUGGY]  return  newdiff  /  1;  int  milliseconds  =  end.get(field);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  milliseconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  milliseconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	9	None	add
475	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  /  2;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  /  2;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  /  2;	  	non-compiled	[CE]  ';'  expected	9	None	add
476	[BUG]  [BUGGY]  return  newdiff  /  1;  int  newdiff  %  2  ==  0;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  newdiff  %  2  ==  0;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  newdiff  %  2  ==  0;	  	non-compiled	[CE]  ';'  expected	9	None	add
477	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  -  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
478	[BUG]  [BUGGY]  return  startValue  -  1  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  -  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
479	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	115	None	replace
480	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
481	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
482	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  1);	  return    startValue;    int    seconds    =    end.get(field,    difference    -    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	80	None	replace
483	[BUG]  [BUGGY]  int  newdiff  =  Math.min(endValue,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(endValue,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(endValue,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int    newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	48	None	replace
484	[BUG]  [BUGGY]  int  days  =  startValue  /  startValue;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  startValue  /  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  /  startValue;	  int    days    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	145	None	replace
485	[BUG]  [BUGGY]  int  milliseconds  =  fields.get(field);  [CE]  cannot  find  symbol  fields  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  fields.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  fields.get(field);	  int    milliseconds    =    startValue.get(field);    	non-compiled	[CE]  cannot  find  symbol  fields	135	None	replace
486	[BUG]  [BUGGY]  return  newdiff  +  2;  int  milliseconds  =  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  milliseconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  milliseconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	61	None	add
487	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	64	None	replace
488	[BUG]  [BUGGY]  return  0;  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  0;  int  startValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  0;  int  startValue  =  start.get(field);	  return    startValue;    int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	150	None	replace
489	[BUG]  [BUGGY]  Context.report(startValue,  end.get(field));  [CE]  cannot  find  symbol  Context  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.report(startValue,  end.get(field));  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.report(startValue,  end.get(field));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
490	[BUG]  [BUGGY]  Context.report(startValue,  newdiff);  [CE]  cannot  find  symbol  Context  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.report(startValue,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.report(startValue,  newdiff);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
491	[BUG]  [BUGGY]  Context.report(startValue,  end.get(field),  difference);  [CE]  cannot  find  symbol  Context  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.report(startValue,  end.get(field),  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.report(startValue,  end.get(field),  difference);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
492	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	103	None	replace
493	[BUG]  [BUGGY]  return  0;  int  seconds  =  endValue  -  startValue;  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  0;  int  seconds  =  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  0;  int  seconds  =  endValue  -  startValue;	  return    startValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  unreachable  statement	78	None	replace
494	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
495	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  startValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  startValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  <  startValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
496	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  <  endValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
497	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
498	[BUG]  [BUGGY]  return  0;  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  0;  int  startValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  0;  int  startValue  =  end.get(field);	  return    startValue;    int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	76	None	replace
499	[BUG]  [BUGGY]  return  startValue;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue;  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue;  int  endValue  =  end.get(field);	  return    startValue;    int    startValue    =    end.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	76	None	replace
500	[BUG]  [BUGGY]  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  endValue  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	109	None	replace
501	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  newdiff);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  newdiff);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND    +    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	106	None	replace
502	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  newdiff);  [CE]  missing  return  statement  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  startValue,  newdiff);	  int    seconds    =    Math.min(end.get(field)-    startValue,    difference);    	non-compiled	[CE]  missing  return  statement	142	None	replace
503	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  endValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  endValue);	  int    seconds    =    end.get(field,    change    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	169	None	replace
504	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	138	None	replace
505	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  change);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  change);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  change);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  cannot  find  symbol  change	138	None	replace
506	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  1);  [CE]  no  suitable  method  found  for  min(int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  1);	  int    seconds    =    Math.min(end.get(field)-    difference);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	140	None	replace
507	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference,  newdiff);  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  difference,  newdiff);	  int    seconds    =    Math.min(end.get(field)-    difference);    	non-compiled	[CE]  missing  return  statement	140	None	replace
508	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
509	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    startValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	116	1	add
510	[BUG]  [BUGGY]  Integer  newdiff  =  endValue.get(field  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  endValue.get(field  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  endValue.get(field  -  difference);	  Integer    newdiff    =    endValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	107	None	replace
511	[BUG]  [BUGGY]  int  newdiff  =  startValue  -  startValue;  newdiff  -=  newdiff;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  startValue  -  startValue;  newdiff  -=  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  startValue  -  startValue;  newdiff  -=  newdiff;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	58	None	replace
512	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  startValue;  newdiff  -=  newdiff;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  startValue;  newdiff  -=  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  startValue;  newdiff  -=  newdiff;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	58	None	replace
513	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	66	None	replace
514	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  Newdiff  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	66	None	replace
515	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  difference);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  +  difference);	  newdiff    =    Math.min(newdiff,    endValue    +    difference);    	non-compiled	[CE]  missing  return  statement	56	None	replace
516	[BUG]  [BUGGY]  int  newdiff  -  1;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -  1;	  return    newdiff    -    1;    int    newdiff    -    1;    	non-compiled	[CE]  ';'  expected	57	None	replace
517	[BUG]  [BUGGY]  return  newdiff  /  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  1;  int  seconds  =  end.get(field);	  return    newdiff    +    1;    int    seconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	45	None	replace
518	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  startValue);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  difference  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  difference  -  startValue);	  newdiff    =    Math.min(newdiff,    startValue    -    difference);    	non-compiled	[CE]  missing  return  statement	154	None	replace
519	[BUG]  [BUGGY]  return  newdiff  /  1;  int  seconds  =  startValue  -  end.get(field);  [CE]  unreachable  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  seconds  =  startValue  -  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  1;  int  seconds  =  startValue  -  end.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  unreachable  statement	170	None	replace
520	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field);  int  minutes  =  end.get(field);  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field);  int  minutes  =  end.get(field);	          int    seconds    =    end.get(field);    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
521	[BUG]  [BUGGY]  Integer  newdiff  =  Math.max(newdiff,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  Math.max(newdiff,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  Math.max(newdiff,  difference);	          newdiff    =    Math.max(newdiff,    endValue);    Integer    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	113	None	replace
522	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
523	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
524	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  difference  /  1;	  return    newdiff    /    1;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
525	[BUG]  [BUGGY]  return  difference  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  /  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  /  1;	  return    newdiff    /    1;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
526	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  -1;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  -1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  -1;  }	  return    newdiff    -    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	139	None	replace
527	[BUG]  [BUGGY]  newdiff  =  end.get(field);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  end.get(field);	  return    newdiff    -    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	139	None	replace
528	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	151	None	replace
529	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  1L;  [CE]  possible  loss  of  precision  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue  -  1L;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  1L;	  int    milliseconds    =    endValue    -    1;    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
531	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
532	[BUG]  [BUGGY]  return  newdiff  -  startValue;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue;  int  endValue  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue;  int  endValue  =  end.get(field);	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	122	None	replace
533	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }  [CE]  unreachable  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  -endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	122	None	replace
534	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  -endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	122	None	replace
535	[BUG]  [BUGGY]  return  newdiff  -  startValue;  int  newdiff  -=  endValue;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue;  int  newdiff  -=  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue;  int  newdiff  -=  endValue;	  return    newdiff    -    endValue;    int    newdiff    -=    endValue;    	non-compiled	[CE]  ';'  expected	124	None	replace
536	[BUG]  [BUGGY]  return  newdiff  -  2;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
537	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  newdiff);	  int    seconds    =    end.get(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	21	None	replace
538	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  newdiff  -  startValue);	  int    seconds    =    end.get(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	21	None	replace
539	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  1,  startValue);  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  1,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  1,  startValue);	  int    seconds    =    Math.min(end.get(field)-    difference,    startValue);    	non-compiled	[CE]  missing  return  statement	168	None	replace
540	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue  +  1;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  startValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue  +  1;	  int    seconds    =    difference    -    startValue;    	non-compiled	[CE]  missing  return  statement	128	None	replace
541	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field  +  difference);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field  +  difference);	  int    seconds    =    endValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	35	None	replace
542	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  +  2;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue  +  2;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue  +  2;	  int    seconds    =    startValue    -    endValue    +    1;    	non-compiled	[CE]  missing  return  statement	84	None	replace
543	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	63	None	add
544	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue);	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    -    endValue);    	non-compiled	[CE]  ';'  expected	5	None	replace
545	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    startValue    -    endValue);    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	5	None	replace
546	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	41	None	replace
547	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  start.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
548	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field,  newdiff  -  startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
549	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  newdiff  +  1;  int  milliseconds  =  end.get(field);  }  else  {  return  0;  }  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  newdiff  +  1;  int  milliseconds  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  newdiff  +  1;  int  milliseconds  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    +    1;    int    milliseconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	111	None	replace
550	[BUG]  [BUGGY]  return  newdiff  -  1;  int  milliseconds  =  end.get(field);  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1;  int  milliseconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  1;  int  milliseconds  =  end.get(field);	  return    newdiff    +    1;    int    milliseconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	111	None	replace
551	[BUG]  [BUGGY]  Integer  newdiff  =  end.get(field  +  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  end.get(field  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  end.get(field  +  difference);	  Integer    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	108	None	replace
552	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  -  endValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
553	[BUG]  [BUGGY]  return  startValue  -  endValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  -  endValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
554	[BUG]  [BUGGY]  return  end  -  newdiff  +  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  end  -  newdiff  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  end  -  newdiff  +  1;	  return    newdiff    -    endValue    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	100	None	replace
555	[BUG]  [BUGGY]  newdiff  =  end.get(field,  newdiff  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  end.get(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	179	None	replace
556	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  -1;  }  else  {  int  newdiff  =  end.get(field,  newdiff  -  1);  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  -1;  }  else  {  int  newdiff  =  end.get(field,  newdiff  -  1);  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  -1;  }  else  {  int  newdiff  =  end.get(field,  newdiff  -  1);  }	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
557	[BUG]  [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue,  endValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;  int  seconds  =  startValue,  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        endValue;        int    minutes    =    startValue    -    endValue;    int  seconds  =  startValue,  endValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
558	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  endValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  endValue  =  start.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	99	None	add
559	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  newdiff  -  startValue  +  1;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  newdiff  -  startValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    newdiff  -  startValue  +  1;	  	non-compiled	[CE]  not  a  statement	99	None	add
560	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  +  difference);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  +  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  +  difference);	  return    newdiff    -(startValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	87	None	replace
561	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  1);	  newdiff    =    Math.min(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	55	None	replace
562	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  time;  [CE]  cannot  find  symbol  time  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  time;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  time;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  time	4	None	replace
563	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  min;  [CE]  cannot  find  symbol  min  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  min;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  min;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol  min	4	None	replace
564	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue;  int  minutes  =  endValue  -  startValue;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	4	None	replace
565	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	69	None	replace
566	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMilliseconds()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  endValue.getMilliseconds()  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMilliseconds()  +  1;	  int    milliseconds    =    endValue.getMilliseconds();    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
567	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  +  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  +  1);	  newdiff    =    Math.min(newdiff,    endValue    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
568	[BUG]  [BUGGY]  return  0;  int  minutes  =  end.get(field);  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  0;  int  minutes  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  0;  int  minutes  =  end.get(field);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	158	None	replace
569	[BUG]  [BUGGY]  return  newdiff  -  startValue;  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  startValue;  int  endValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  startValue;  int  endValue  =  start.get(field);	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	123	None	replace
570	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  unreachable  statement	123	None	replace
571	[BUG]  [BUGGY]  if(newdiff!=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff!=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff!=  0)  {  return  -endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  unreachable  statement	123	None	replace
572	[BUG]  [BUGGY]  int  days  =  endValue  /  startValue;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  /  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  /  startValue;	  int    days    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	155	None	replace
573	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field  -  1);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field  -  1);	  int    seconds    =    end.get(field    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
574	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  +  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  +  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  +  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
575	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field,  newdiff  -  startValue);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
576	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(endValue  >=  startValue)  {  return  startValue  +  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(endValue  >=  startValue)  {  return  startValue  +  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field);  if(endValue  >=  startValue)  {  return  startValue  +  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
577	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  startValue  +  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  startValue  +  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field);  if(startValue  ==  endValue)  {  return  startValue  +  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
578	[BUG]  [BUGGY]  int  seconds  =  endValue  -  getStartValue();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  getStartValue();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  getStartValue();	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
579	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field  -  endValue);  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  startValue.get(field  -  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field  -  endValue);	  int    seconds    =    end.get(field    -    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	137	None	replace
580	[BUG]  [BUGGY]  int  seconds  =  end.get(field  +  startValue);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  +  startValue);	  int    seconds    =    end.get(field    -    startValue);    	non-compiled	[CE]  missing  return  statement	137	None	replace
581	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  endValue);  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  startValue,  endValue);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
582	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  difference  =  end.get(field);  [CE]  variable  difference  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  difference  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  difference  =  end.get(field);	  	non-compiled	[CE]  variable  difference  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	101	None	add
583	[BUG]  [BUGGY]  return  newdiff  -  difference;  return  newdiff  -  difference;  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  return  newdiff  -  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    return  newdiff  -  difference;	  	non-compiled	[CE]  unreachable  statement	101	None	add
584	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  1);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  1);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	88	None	replace
585	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  startValue);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  startValue);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	88	None	replace
586	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue  +  endValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  startValue  +  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue  +  endValue;	  int    seconds    =    startValue    -    endValue    +    difference;    	non-compiled	[CE]  missing  return  statement	125	None	replace
587	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  2);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  2);	  newdiff    =    Math.min(newdiff,    endValue    -    2);    	non-compiled	[CE]  missing  return  statement	163	None	replace
588	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  2);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  2);	  newdiff    =    Math.min(newdiff,    endValue    -    startValue    +    1);    	non-compiled	[CE]  missing  return  statement	119	None	replace
589	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND)+  1;	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	146	None	replace
590	[BUG]  [BUGGY]  int  milliseconds  =  field  -  1;  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field  -  1;	  int    milliseconds    =    startValue    -    1;    	non-compiled	[CE]  missing  return  statement	132	None	replace
591	[BUG]  [BUGGY]  float  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  float  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	float  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    endValue    -    endValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	2	None	replace
592	[BUG]  [BUGGY]  float  seconds  =  startValue  -  endValue;  float  seconds  =  endValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  float  seconds  =  startValue  -  endValue;  float  seconds  =  endValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	float  seconds  =  startValue  -  endValue;  float  seconds  =  endValue  -  endValue;	          int    seconds    =    startValue    -    endValue;    int    seconds    =    endValue    -    endValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	2	None	replace
593	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
594	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
595	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  endValue  -  startValue;  [CE]  unreachable  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  1;  int  seconds  =  endValue  -  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  +  1;  int  seconds  =  endValue  -  startValue;	  return    newdiff    +    1;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  unreachable  statement	44	None	replace
596	[BUG]  [BUGGY]  return  newdiff  /  1;  int  seconds  =  startValue  -  endValue;  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  seconds  =  startValue  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  1;  int  seconds  =  startValue  -  endValue;	  return    newdiff    +    1;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  unreachable  statement	44	None	replace
597	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  Int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    endValue;    Int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
598	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
599	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  field;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  field;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  field;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
600	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  startValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue!=  endValue)  {  return  startValue;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
601	[BUG]  [BUGGY]  int  seconds  =  difference  -  newdiff;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  newdiff;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  newdiff;	  int    seconds    =    startValue    -    newdiff;    	non-compiled	[CE]  missing  return  statement	82	None	replace
602	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  difference,  difference);	  int    seconds    =    end.get(field,    startValue    -    difference);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	22	None	replace
603	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  startValue  -  startValue,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  startValue,  difference);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
604	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  value);  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  value);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  value);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  value	23	None	replace
605	[BUG]  [BUGGY]  int  days  =  endValue  -  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  field.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  field.get(field);	  int    days    =    startValue    -    startValue.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	162	None	replace
606	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)/  difference);  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)/  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue,  end.get(field)/  difference);	  int    seconds    =    Math.min(end.get(field)/    startValue);    	non-compiled	[CE]  missing  return  statement	17	None	replace
607	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  change);  [CE]  cannot  find  symbol  change  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)/  change);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  change);	  int    seconds    =    Math.min(end.get(field)/    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	17	None	replace
608	[BUG]  [BUGGY]  int  newdiff  =  Math.max(newdiff,  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.max(newdiff,  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.max(newdiff,  difference);	          newdiff    =    Math.max(newdiff,    endValue);    int    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	38	None	replace
609	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
610	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);  newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
611	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
612	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  startValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
613	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  difference  -  newdiff;	  return    newdiff    -    difference;    	compilable	  [FE]  ComparisonFailure  	102	1	replace
614	[BUG]  [BUGGY]  return  difference  -  newdiff;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -  newdiff;	  return    newdiff    -    difference;    	compilable	  [FE]  ComparisonFailure  	102	1	replace
615	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue  +  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue  +  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  startValue  +  difference);	  return    startValue;    int    seconds    =    end.get(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	156	None	replace
616	[BUG]  [BUGGY]  int  seconds  =  Math.min(seconds,  end.get(field)-  startValue);  [CE]  variable  seconds  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(seconds,  end.get(field)-  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(seconds,  end.get(field)-  startValue);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  variable  seconds  might  not  have  been  initialized	141	None	replace
617	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  startValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  startValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    0;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	172	None	replace
618	[BUG]  [BUGGY]  newdiff  +=  endValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  endValue;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
619	[BUG]  [BUGGY]  newdiff  +=  startValue;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  startValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  startValue;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
620	[BUG]  [BUGGY]  newdiff  +=(endValue  -  startValue)/  difference;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=(endValue  -  startValue)/  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=(endValue  -  startValue)/  difference;	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
621	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  startValue  -  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  startValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  startValue  -  1);	  newdiff    =    Math.max(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	161	None	replace
622	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	52	None	add
623	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
624	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
625	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  +  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  +  1);	  int    seconds    =    end.get(field    +    1);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	32	None	replace
626	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  endValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    Newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	49	None	replace
627	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  Newdiff  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    Newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	49	None	replace
628	[BUG]  [BUGGY]  return  0;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  0;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  0;  int  seconds  =  end.get(field);	  return    startValue;    int    seconds    =    end.get(field);    	non-compiled	[CE]  unreachable  statement	77	None	replace
629	[BUG]  [BUGGY]  int  seconds  =  start.get(field);  Int  seconds  =  end.get(field);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  start.get(field);  Int  seconds  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field);  Int  seconds  =  end.get(field);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
630	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
631	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
632	[BUG]  [BUGGY]  int  seconds  =  field  -  startValue;  int  minutes  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  startValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  startValue;  int  minutes  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    minutes    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	93	None	replace
633	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  return  1;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  ==  0)  {  return  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  ==  0)  {  return  1;  }	  if(newdiff    ==    0)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
634	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  *  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  *  endValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
635	[BUG]  [BUGGY]  return  newdiff  *  endValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  *  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  *  endValue  +  1;	  return    newdiff    -    endValue    +    1;    	compilable	  [FE]  ComparisonFailure  	100	1	replace
636	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  startValue,  newdiff  -  1);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	23	None	replace
637	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  milliseconds);  [CE]  cannot  find  symbol  milliseconds  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  milliseconds);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  startValue,  newdiff,  milliseconds);	  int    seconds    =    end.get(field,    difference    -    startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  milliseconds	23	None	replace
638	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  newdiff  -  1);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
639	[BUG]  [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  difference  -  startValue);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  endValue  -  newdiff;  int  endValue  =  end.get(field,  difference  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    endValue    -    newdiff;    int  endValue  =  end.get(field,  difference  -  startValue);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	152	None	add
640	[BUG]  [BUGGY]  return  newdiff  /  1;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  /  1;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    /    1;    int  seconds  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	9	None	add
641	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  match);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  match  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  match);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.max(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  match);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  cannot  find  symbol  match	68	None	add
642	[BUG]  [BUGGY]  int  milliseconds  =  field.getMillis();  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field.getMillis();  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field.getMillis();	  int    milliseconds    =    endValue.getMillis();    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
643	[BUG]  [BUGGY]  int  seconds  =  field  -  endValue  -  1;  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  endValue  -  1;	  int    seconds    =    startValue    -    endValue    -    1;    	non-compiled	[CE]  missing  return  statement	178	None	replace
644	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
645	[BUG]  [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.max(newdiff,        endValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	114	1	add
646	[BUG]  [BUGGY]  int  newdiff  -=  endValue  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -=  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -=  endValue  +  1;	  return    newdiff    -    endValue;    int    newdiff    -=    endValue;    	non-compiled	[CE]  ';'  expected	124	None	replace
647	[BUG]  [BUGGY]  int  seconds  =  field.get(field);  Int  seconds  =  end.get(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(field);  Int  seconds  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(field);  Int  seconds  =  end.get(field);	          int    seconds    =    end.get(field);    Int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
648	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  2);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  2);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	89	None	replace
649	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  10);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  10);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  10);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_DAY,    difference);    	non-compiled	[CE]  ')'  expected	89	None	replace
650	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference  +  1);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
651	[BUG]  [BUGGY]  int  seconds  =  field.get(field,  endValue  -  startValue);  [CE]  int  cannot  be  dereferenced  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(field,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(field,  endValue  -  startValue);	  int    seconds    =    start.get(field,    difference    -    endValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
652	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  startValue  -  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  startValue  -  end.get(field);	  	non-compiled	[CE]  unreachable  statement	61	None	add
653	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	61	None	add
654	[BUG]  [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  +  2;  int  seconds  =  end.get(field,  newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    2;    int  seconds  =  end.get(field,  newdiff);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	61	None	add
655	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  difference;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  difference;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  difference;	  return    newdiff    -    endValue;    int    newdiff    =    endValue    -    endValue;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	29	None	replace
656	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  this.endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  this.endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  this.endValue;	  return    newdiff    -    endValue;    int    newdiff    =    endValue    -    endValue;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	29	None	replace
657	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
658	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  newdiff;  ++i)  {  end.add(field,  -1  *  difference);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
659	[BUG]  [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  *  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  Math.min(newdiff,  endValue  *  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  Math.min(newdiff,  endValue  *  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int    newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	48	None	replace
660	[BUG]  [BUGGY]  int  seconds  =  endValue  -  1;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  1;	  int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	81	None	replace
661	[BUG]  [BUGGY]  int  seconds  =  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(field);	  return    startValue;    int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
662	[BUG]  [BUGGY]  int  milliseconds  =  field  -  endValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  field  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  field  -  endValue;	  int    milliseconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	134	None	replace
663	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  10);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  10);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  10);	  newdiff    =    Math.min(newdiff,    endValue    +    difference);    	non-compiled	[CE]  missing  return  statement	56	None	replace
664	[BUG]  [BUGGY]  return  newdiff  -  2;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	7	None	add
665	[BUG]  [BUGGY]  return  newdiff  -  2;  int  newdiff  =  end.get(field,  newdiff  -  2);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  2;  int  newdiff  =  end.get(field,  newdiff  -  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    2;    int  newdiff  =  end.get(field,  newdiff  -  2);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
666	[BUG]  [BUGGY]  return  newdiff  -(field  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(field  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(field  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND    +    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	106	None	replace
667	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  >=  endValue;  i++)  {  end.add(field,  -1  *  difference);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    =    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
668	[BUG]  [BUGGY]  int  seconds  =  field.get(endValue  -  1);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(endValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(endValue  -  1);	  int    seconds    =    end.get(field    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
669	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
670	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
671	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.ceil(newdiff,  endValue  -  difference);  newdiff  =  Math.ceil(newdiff,  endValue  -  difference);  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.ceil(newdiff,  endValue  -  difference);  newdiff  =  Math.ceil(newdiff,  endValue  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        difference);        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.ceil(newdiff,  endValue  -  difference);  newdiff  =  Math.ceil(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	63	None	add
672	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
673	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
674	[BUG]  [BUGGY]  int  seconds  =  field  -  end.get(field);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  end.get(field);	  return    newdiff    +    1;    int    seconds    =    startValue    -    end.get(field);    	non-compiled	[CE]  missing  return  statement	170	None	replace
675	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field);  int  minutes  =  end.get(field);  [CE]  int  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field);  int  minutes  =  end.get(field);	          int    seconds    =    end.get(field);    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
676	[BUG]  [BUGGY]  Context.report(startValue  +  difference,  endValue  -  startValue);  [CE]  cannot  find  symbol  Context  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Context.report(startValue  +  difference,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.report(startValue  +  difference,  endValue  -  startValue);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	70	None	replace
677	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  1);	  newdiff    =    Math.min(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	143	None	replace
678	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  2);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  2);	  newdiff    =    Math.min(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	143	None	replace
679	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  change);  [CE]  cannot  find  symbol  change  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  change);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  change);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	51	None	replace
680	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  1);  Newdiff  =  Math.min(newdiff,  endValue  -  1);  [CE]  cannot  find  symbol  Newdiff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  1);  Newdiff  =  Math.min(newdiff,  endValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  1);  Newdiff  =  Math.min(newdiff,  endValue  -  1);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    Newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  Newdiff	66	None	replace
681	[BUG]  [BUGGY]  Integer  newdiff  =  end.get(field  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  end.get(field  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  end.get(field  +  1);	  Integer    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	108	None	replace
682	[BUG]  [BUGGY]  int  seconds  =  field.get(field,  newdiff);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(field,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(field,  newdiff);	  int    seconds    =    end.get(field,    difference);    	non-compiled	[CE]  int  cannot  be  dereferenced	138	None	replace
683	[BUG]  [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >  newdiff)  {  return  startValue  -  1;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  1;  int  startValue  =  end.get(field);  if(startValue  >  newdiff)  {  return  startValue  -  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    1;    int  startValue  =  end.get(field);  if(startValue  >  newdiff)  {  return  startValue  -  1;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	120	None	add
684	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  1);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  1);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	115	None	replace
685	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  1);  [CE]  missing  return  statement  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  1);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
686	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  0);  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  0);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  0);	  int    seconds    =    Math.min(end.get(field)-    newdiff,    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
687	[BUG]  [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field,  newdiff  -  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  +  1;  int  startValue  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    +    1;    int  startValue  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	129	None	add
688	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  minutes;  [CE]  variable  minutes  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  minutes;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  minutes;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  variable  minutes  might  not  have  been  initialized	4	None	replace
689	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  1;  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  1;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	4	None	replace
690	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  seconds;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  seconds;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;  int  minutes  =  endValue  -  seconds;	          int    seconds    =    startValue    -    endValue;    int    minutes    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	4	None	replace
691	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  2);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  2);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  2);	  return    newdiff    +    1;    int    seconds    =    end.get(field,    newdiff);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	171	None	replace
692	[BUG]  [BUGGY]  int  milliseconds  =  fields.get(endValue);  [CE]  cannot  find  symbol  fields  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  fields.get(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  fields.get(endValue);	  int    milliseconds    =    endValue.get(field);    	non-compiled	[CE]  cannot  find  symbol  fields	13	None	replace
693	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  endValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  endValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue  -  endValue;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
694	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  endValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  endValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue  -  endValue;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	126	None	add
695	[BUG]  [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  <  =  newdiff)  {  return  startValue  -  endValue;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  startValue  -  endValue;  int  startValue  =  end.get(field);  if(startValue  <  =  newdiff)  {  return  startValue  -  endValue;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue    -    endValue;    int  startValue  =  end.get(field);  if(startValue  <  =  newdiff)  {  return  startValue  -  endValue;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
696	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  *  endValue  -  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  *  endValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  *  endValue  -  1);	  newdiff    =    Math.max(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	161	None	replace
697	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  *  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  *  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
698	[BUG]  [BUGGY]  return  newdiff  *  1  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  *  1  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  *  1  +  1;	  return    newdiff    -    1    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
699	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  *  2  +  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  *  2  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue  *  2  +  1);	  newdiff    =    Math.min(newdiff,    endValue    -    startValue    +    1);    	non-compiled	[CE]  missing  return  statement	119	None	replace
700	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  newdiff);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  newdiff);	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    	non-compiled	[CE]  missing  return  statement	173	None	replace
701	[BUG]  [BUGGY]  int  seconds  =  field  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
702	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  end.add(field,  newdiff  +  1);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    seconds    =    startValue    -    startValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  missing  return  statement	43	None	replace
703	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
704	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.min(newdiff,    startValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
705	[BUG]  [BUGGY]  int  seconds  =  Math.max(end.get(field)-  startValue);  [CE]  no  suitable  method  found  for  max(int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.max(end.get(field)-  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.max(end.get(field)-  startValue);	  int    seconds    =    Math.min(startValue.get(field)-    endValue);    	non-compiled	[CE]  no  suitable  method  found  for  max(int)	18	None	replace
706	[BUG]  [BUGGY]  return  difference;  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference;  int  startValue  =  start.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference;  int  startValue  =  start.get(field);	  return    startValue;    int    startValue    =    start.get(field);    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	150	None	replace
707	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  -  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND  -  1);	  return    newdiff    -(newdiff    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	103	None	replace
708	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  *  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  *  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  *  difference);	          newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff    =    Math.max(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	69	None	replace
709	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  0;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  0;  }	  return    startValue;    int    startValue    =    end.get(field);    if(startValue    >=    endValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	149	None	replace
710	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  2);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  2);	  newdiff    =    Math.max(newdiff,    difference);    	non-compiled	[CE]  missing  return  statement	160	None	replace
711	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  difference  -  endValue;	  return    startValue    -    endValue;    	compilable	  [FE]  ComparisonFailure  	127	1	replace
712	[BUG]  [BUGGY]  return  difference  -  endValue;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  endValue;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -  endValue;	  return    startValue    -    endValue;    	compilable	  [FE]  ComparisonFailure  	127	1	replace
713	[BUG]  [BUGGY]  newdiff  -=(endValue  *  difference);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -=(endValue  *  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -=(endValue  *  difference);	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
714	[BUG]  [BUGGY]  newdiff  -=  endValue  -  1;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  -=  endValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  -=  endValue  -  1;	  return    newdiff    -    1;    newdiff    -    1;    	non-compiled	[CE]  missing  return  statement	58	None	replace
715	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
716	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  field;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  field;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  field;  ++i)  {  end.add(field,  -1  *  difference);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    this.endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
717	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    this.endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
718	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  *  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  *  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  *  startValue);	          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff    =    Math.min(newdiff,    endValue    +    startValue);    	non-compiled	[CE]  missing  return  statement	176	None	replace
719	[BUG]  [BUGGY]  if(newdiff  <  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
720	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
721	[BUG]  [BUGGY]  int  days  =  endValue  -  1;  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  endValue  -  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  1;	  int    days    =    endValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	155	None	replace
722	[BUG]  [BUGGY]  newdiff  +=(endValue  *  difference);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=(endValue  *  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=(endValue  *  difference);	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
723	[BUG]  [BUGGY]  newdiff  +=  Math.min(newdiff,  endValue  -  startValue);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  +=  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  +=  Math.min(newdiff,  endValue  -  startValue);	  return    newdiff    +    1;    newdiff    +    1;    	non-compiled	[CE]  missing  return  statement	42	None	replace
724	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
725	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  int  endValue  =  end.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    end.get(field);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
726	[BUG]  [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  field.get(field);  int  minutes  =  end.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  field.get(field);  int  minutes  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        end.get(field);        int    minutes    =    end.get(field);    int  seconds  =  field.get(field);  int  minutes  =  end.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	72	None	add
727	[BUG]  [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  end.get(field);  int  seconds  =  end.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    end.get(field);    int  minutes  =  end.get(field);  int  seconds  =  end.get(field);  int  seconds  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        end.get(field);        int    minutes    =    end.get(field);    int  seconds  =  end.get(field);  int  seconds  =  end.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	72	None	add
728	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	11	None	add
729	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  int  seconds  =  end.get(field,  newdiff  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  1  +  1;  int  seconds  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1    +    1;    int  seconds  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	11	None	add
730	[BUG]  [BUGGY]  return  difference  -  1;  int  newdiff  =  end.get(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  1;  int  newdiff  =  end.get(field,  newdiff  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -  1;  int  newdiff  =  end.get(field,  newdiff  -  1);	  return    newdiff    -    1;    int    newdiff    =    end.get(field,    newdiff    -    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	179	None	replace
731	[BUG]  [BUGGY]  if(newdiff!=  0)  {  return  1;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff!=  0)  {  return  1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff!=  0)  {  return  1;  }	  if(newdiff!=    0)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
732	[BUG]  [BUGGY]  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    1;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	174	None	replace
733	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue);  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    1;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	174	None	replace
734	[BUG]  [BUGGY]  int  milliseconds  =  fieldValue.getMilliseconds(endValue);  [CE]  cannot  find  symbol  fieldValue  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  milliseconds  =  fieldValue.getMilliseconds(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  fieldValue.getMilliseconds(endValue);	  int    milliseconds    =    endValue.getMilliseconds(field);    	non-compiled	[CE]  cannot  find  symbol  fieldValue	16	None	replace
735	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  difference);  newdiff  =  Math.max(newdiff,  endValue);	          newdiff    =    Math.max(newdiff,    endValue);    Newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	39	None	replace
736	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  newdiff);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  newdiff);	          newdiff    =    Math.max(newdiff,    endValue);    newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	37	None	replace
737	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	92	None	add
738	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY  -  1);	  return    newdiff    -(startValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	87	None	replace
739	[BUG]  [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  end.get(field,  newdiff  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  difference;  int  newdiff  =  end.get(field,  newdiff  -  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    difference;    int  newdiff  =  end.get(field,  newdiff  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	101	None	add
740	[BUG]  [BUGGY]  int  seconds  =  field.get(newdiff);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field.get(newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field.get(newdiff);	  return    newdiff    -    1;    int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	180	None	replace
741	[BUG]  [BUGGY]  int  newdiff  -=  endValue  -  1;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  -=  endValue  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  -=  endValue  -  1;	  return    newdiff    -    1;    int    newdiff    -    1;    	non-compiled	[CE]  ';'  expected	57	None	replace
742	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  0;  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
743	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
744	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  -1;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  =  0)  {  return  newdiff  -  endValue;  endValue  =  start.get(field);  }  else  {  return  -1;  }	  return    newdiff    -    endValue;    int    endValue    =    start.get(field);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
745	[BUG]  [BUGGY]  int  newdiff  =  endValue  +  startValue;  end.add(field,  newdiff  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  +  startValue;  end.add(field,  newdiff  +  1);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  +  startValue;  end.add(field,  newdiff  +  1);	  return    newdiff    +    1;    int    newdiff    =    startValue    -    endValue;    end.add(    field,    newdiff    +    1);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	109	None	replace
746	[BUG]  [BUGGY]  Integer  newdiff  =  field.get(endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  Integer  newdiff  =  field.get(endValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  field.get(endValue);	  Integer    newdiff    =    endValue.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	107	None	replace
747	[BUG]  [BUGGY]  int  newdiff  =  endValue  -  newdiff;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  endValue  -  newdiff;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  endValue  -  newdiff;	  return    newdiff    -    endValue;    int    newdiff    -    endValue;    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	27	None	replace
748	[BUG]  [BUGGY]  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }	          newdiff    =    Math.max(newdiff,    endValue);    if(diff    <    0)    {    int    newdiff    =    Math.max(newdiff,    endValue);    }    else    {    return    0;    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	172	None	replace
749	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	99	None	add
750	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  startValue  -  endValue  +  1;  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  startValue  -  endValue  +  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  seconds  =  startValue  -  endValue  +  1;	  	non-compiled	[CE]  unreachable  statement	99	None	add
751	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  Math.min(end.get(field)-  difference);  [CE]  no  suitable  method  found  for  min(int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  newdiff  -  endValue  +  1;  int  seconds  =  Math.min(end.get(field)-  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue    +    1;    int  seconds  =  Math.min(end.get(field)-  difference);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int)	99	None	add
752	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
753	[BUG]  [BUGGY]  int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  endValue  =  end.get(field);  if(endValue  <  startValue)  {  return  field;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
754	[BUG]  [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  0;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  0;  }  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  0;  }	  return    startValue;    int    startValue    =    end.get(field);    if(endValue    <    startValue)    {    return    startValue;    }    	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	148	None	replace
755	[BUG]  [BUGGY]  while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
756	[BUG]  [BUGGY]  while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	while(newdiff  <  =  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }	  if(newdiff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
757	[BUG]  [BUGGY]  int  seconds  =  Math.min(secondValue,  end.get(field)-  difference);  [CE]  cannot  find  symbol  secondValue  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(secondValue,  end.get(field)-  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(secondValue,  end.get(field)-  difference);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  cannot  find  symbol  secondValue	141	None	replace
758	[BUG]  [BUGGY]  int  seconds  =  Math.min(second,  end.get(field)-  difference);  [CE]  cannot  find  symbol  second  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  Math.min(second,  end.get(field)-  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(second,  end.get(field)-  difference);	  int    seconds    =    Math.min(startValue,    end.get(field)-    endValue);    	non-compiled	[CE]  cannot  find  symbol  second	141	None	replace
759	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  *  endValue  -  1);  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  *  endValue  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  *  endValue  -  1);	  newdiff    =    Math.min(newdiff,    endValue    -    1);    	non-compiled	[CE]  missing  return  statement	55	None	replace
760	[BUG]  [BUGGY]  int  days  =  field  -  startValue;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  days  =  field  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  field  -  startValue;	  int    days    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	145	None	replace
761	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  difference  -  1;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
762	[BUG]  [BUGGY]  return  difference  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  1;  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -  1;	  return    startValue    -    1;    	compilable	  [FE]  ComparisonFailure  	121	1	replace
763	[BUG]  [BUGGY]  return  difference  -  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -  1;  int  newdiff  =  end.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -  1;  int  newdiff  =  end.get(field);	  return    newdiff    -    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	139	None	replace
764	[BUG]  [BUGGY]  int  newdiff  =  field.get(newdiff);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  newdiff  =  field.get(newdiff);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  newdiff  =  field.get(newdiff);	  return    newdiff    -    1;    int    newdiff    =    end.get(field);    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	139	None	replace
765	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);	  return    difference    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  ')'  expected	151	None	replace
766	[BUG]  [BUGGY]  int  seconds  =  field  -  endValue  +  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  seconds  =  field  -  endValue  +  1;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  endValue  +  1;	  int    seconds    =    startValue    -    endValue    +    1;    	non-compiled	[CE]  missing  return  statement	84	None	replace
767	[BUG]  [BUGGY]  int  minutes  =  field.get(field);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]  int  minutes  =  field.get(field);  [BUGGY]      }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  minutes  =  field.get(field);	  return    startValue;    int    minutes    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	158	None	replace
768	[BUG]  [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue)-  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );      [BUGGY]          newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue)-  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	                newdiff        =        Math.min(newdiff,        endValue        -        startValue);        newdiff    =    Math.max(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue)-  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  ';'  expected	50	None	add
