bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  [CE]  cannot  find  symbol  J  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  cannot  find  symbol  J	10	None	replace
2	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {	      Token.containsTokenWithValue(tokens,    y)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
3	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {	      Token.containsTokenWithValue(tokens,    y)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
4	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {	      Token.containsTokenWithValue(tokens,    y)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
5	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y)  {	      Token.containsTokenWithValue(tokens,    y)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
6	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  -  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  -  1;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  -  1;	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  +  1;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  +  1;	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  2;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  *  2;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  2;	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  -  2;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  -  2;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  -  2;	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S))  {	      Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
11	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  J))  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  J))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  J))  {	      Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  Integer  months  =  tokens.get(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(0);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(0);	      Integer    months    =    tokens.get(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  Integer  months  =  tokens.get(years);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(years);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(years);	      Integer    months    =    tokens.get(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  Integer  months  =  tokens.get(i  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(i  +  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(i  +  1);	      Integer    months    =    tokens.get(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
16	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
17	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  [CE]  cannot  find  symbol  Y  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	4	None	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
19	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
21	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
22	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  0);  [CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  0);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  0);	  	non-compiled	[CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;	4	None	add
23	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length());  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length());	      Tokens    y    =    tokens.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  *  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  *  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  *  1);	      Tokens    y    =    tokens.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  +  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  +  1);	      Tokens    y    =    tokens.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
27	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
28	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  If(!Token.containsTokenWithValue(tokens,  S))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  If(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    If(!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  	11	None	add
29	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  H))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	12	1	replace
31	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	12	1	replace
32	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  y))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  y))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
33	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  Y))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  Y))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  Y))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
34	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
35	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  0))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  0))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
36	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  d))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  d))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
37	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	20	None	replace
38	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.MONTH);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	20	None	replace
39	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.MONTH);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	20	None	replace
40	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	20	None	replace
41	[BUG]  [BUGGY]  Integer  months  =  tokens.get(value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(value);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(value);	      Integer    months    =    tokens.get(y);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(y  +  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  +  1);	      Integer    months    =    tokens.get(y);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Integer  months  =  tokens.get(YEAR);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(YEAR);	      Integer    months    =    tokens.get(y);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  years;	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	18	None	replace
45	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  years;	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  years;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  years;	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	18	None	replace
47	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	21	None	replace
48	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  12  *  tokens.get(Calendar.YEAR);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	21	None	replace
49	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  12  *  tokens.get(Calendar.YEAR);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	21	None	replace
50	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	21	None	replace
51	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y))  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y))  {	      Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
52	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H))  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H))  {	      Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
53	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  years;	      Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	19	None	replace
54	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  ||  padWithZeros;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  tokens.nextToken()  ||  padWithZeros;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  ||  padWithZeros;	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  tokens.nextToken()  +  1;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  +  1;	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  Token  m  =  tokens.trimToken();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  tokens.trimToken();  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trimToken();	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  >  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  >  1;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  >  1;	      Integer    months    =    tokens.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  <  0;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  <  0;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  <  0;	      Integer    months    =    tokens.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  >  2;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  >  2;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  >  2;	      Integer    months    =    tokens.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  M);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M);	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S);	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  H);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H);	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
63	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y));  [CE]  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  Y));  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y));	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  	5	None	replace
64	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    if(!Token.containsTokenWithValue(tokens,  H))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
65	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  If(!Token.containsTokenWithValue(tokens,  H))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  If(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    If(!Token.containsTokenWithValue(tokens,  H))  {	  	non-compiled	[CE]  	22	None	add
66	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    if(!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
67	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    if(!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
68	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
69	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
70	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    If(!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  	9	None	add
71	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  H))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
72	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  if(!Token.containsTokenWithValue(tokens,  y))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  if(!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,  y))  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
73	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  years;	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	18	None	replace
74	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  d))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  d))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  d))  {	      Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
75	[BUG]  [BUGGY]  Tokens  y  =  tokens,  start.substring(0,  tokens.length()  -  1);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Tokens  y  =  tokens,  start.substring(0,  tokens.length()  -  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens,  start.substring(0,  tokens.length()  -  1);	      Tokens    y    =    tokens.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  	3	None	replace
76	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y  +  1);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y  +  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y  +  1);	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.YEAR);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	21	None	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
79	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
80	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {  [CE]  cannot  find  symbol  JsonToken  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  cannot  find  symbol  JsonToken	10	None	replace
81	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT)  {	      Token.containsTokenWithValue(tokens,    y)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	12	2	replace
83	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	12	2	replace
84	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  -  1);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(y  -  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  -  1);	      Integer    months    =    tokens.get(y);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  d)  {  months  +=  12  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  d)  {  months  +=  12  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  d)  {  months  +=  12  *  years;	      Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	19	None	replace
86	[BUG]  [BUGGY]  Token  m  =  start.nextToken();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  start.nextToken();  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  start.nextToken();	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
87	[BUG]  [BUGGY]  Token  m  =  end.nextToken();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  end.nextToken();  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  end.nextToken();	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
88	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR))  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR))  {  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR))  {	      Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
89	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  0;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  *  0;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  0;	      Integer    months    =    tokens.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  /  0;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.size()  /  0;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  /  0;	      Integer    months    =    tokens.size()    >    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
91	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  365  *  tokens.get(Calendar.MONTH);	      Token.containsTokenWithValue(tokens,    y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	20	None	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
93	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
94	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length());  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length());	      Tokens    y    =    tokens.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  Token  m  =  tokens.trim();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  tokens.trim();  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trim();	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
96	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(y);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token  m  =  tokens.nextToken(y);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(y);	      Token    m    =    tokens.nextToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
97	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
98	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  H))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
99	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.size()  -  1);	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  Integer  months  =  tokens.values();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Integer  months  =  tokens.values();  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values();	      Integer    months    =    tokens.size();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
101	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  years;  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  years;	      Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	19	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
103	[BUG]  [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]      Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    H))    {    	compilable	  [FE]  ComparisonFailure  	23	2	replace
105	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]    months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    H))    {    	compilable	  [FE]  ComparisonFailure  	23	2	replace
106	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  YEAR);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {    [BUGGY]  Token.containsTokenWithValue(tokens,  YEAR);  [BUGGY]    if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  YEAR);	      Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
