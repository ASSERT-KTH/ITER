bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  [CE]  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y)  {		non-compiled	[CE]  	18	None	add
2	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]      ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  M))  {		non-compiled	[CE]  	18	None	add
3	[BUG]  [BUGGY]    Tokens  y  =  tokens.substring(0,  tokens.length()  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Tokens  y  =  tokens.substring(0,  tokens.length()  -  1);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Tokens  y  =  tokens.substring(0,  tokens.length()  -  1);		non-compiled	[CE]  cannot  find  symbol	18	None	add
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	    Token.containsTokenWithValue(tokens,  y);		compilable	  [FE]  ComparisonFailure  	18	1	add
5	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y);  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y);		compilable	  [FE]  ComparisonFailure  	18	1	add
6	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y))  {  [CE]  [FE]            ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y))  {		non-compiled	[CE]  	18	None	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
8	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  M))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	2	replace
10	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	2	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  S))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
12	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
13	[BUG]  [BUGGY]    Token  m  =  tokens.nextToken();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token  m  =  tokens.nextToken();  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token  m  =  tokens.nextToken();		non-compiled	[CE]  cannot  find  symbol	18	None	add
14	[BUG]  [BUGGY]    Integer  months  =  tokens.get(y);  [CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)  [FE]      ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Integer  months  =  tokens.get(y);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Integer  months  =  tokens.get(y);		non-compiled	[CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)	18	None	add
15	[BUG]  [BUGGY]    Integer  months  =  tokens.size()  >  0;  [CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)  [FE]        ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Integer  months  =  tokens.size()  >  0;  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Integer  months  =  tokens.size()  >  0;		non-compiled	[CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)	18	None	add
16	[BUG]  [BUGGY]    Integer  months  =  tokens.get(i);  [CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)  [FE]          ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Integer  months  =  tokens.get(i);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Integer  months  =  tokens.get(i);		non-compiled	[CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)	18	None	add
17	[BUG]  [BUGGY]    Integer  months  =  tokens.size();  [CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)  [FE]            ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Integer  months  =  tokens.size();  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Integer  months  =  tokens.size();		non-compiled	[CE]  variable  months  is  already  defined  in  method  formatPeriod(long,long,String,boolean,TimeZone)	18	None	add
18	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  years;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  years;  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  years;		non-compiled	[CE]  	18	None	add
19	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  years;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  years;  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  years;		non-compiled	[CE]  	18	None	add
20	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [CE]  [FE]        ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH);		non-compiled	[CE]  	18	None	add
21	[BUG]  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [CE]  [FE]          ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  [BUGGY]  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	    Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.YEAR);		non-compiled	[CE]  	18	None	add
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  H))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
23	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {	if  (Token.containsTokenWithValue(tokens,  M))  {  	compilable	  [FE]  ComparisonFailure  	17	1	replace
