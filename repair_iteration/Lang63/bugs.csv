bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] days += 31; [FE] ComparisonFailure [CONTEXT] } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } while (days < 0) { [BUGGY] days += 31; [BUGGY]      months -= 1; } while (months < 0) { months += 12; years -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	306	306	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } while (days < 0) { [BUGGY] [BUGGY] days += 31;      months -= 1; } while (months < 0) { months += 12; years -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	306	306	1	add	
3	[BUG] [BUGGY] months -= 1; [FE] ComparisonFailure [CONTEXT] hours += 24; days -= 1; } while (days < 0) { days += 31;      [BUGGY] months -= 1; [BUGGY] } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	312	312	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] hours += 24; days -= 1; } while (days < 0) { days += 31;      [BUGGY] [BUGGY] months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	312	312	1	add	
5	[BUG] [BUGGY] months += 12; [FE] ComparisonFailure [CONTEXT] while (days < 0) { days += 31;      months -= 1; } while (months < 0) { [BUGGY] months += 12; [BUGGY] years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	315	315	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] while (days < 0) { days += 31;      months -= 1; } while (months < 0) { [BUGGY] [BUGGY] months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	315	315	1	add	
7	[BUG] [BUGGY] years -= 1; [FE] ComparisonFailure [CONTEXT] days += 31;      months -= 1; } while (months < 0) { months += 12; [BUGGY] years -= 1; [BUGGY] } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);   [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	316	316	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] days += 31;      months -= 1; } while (months < 0) { months += 12; [BUGGY] [BUGGY] years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);   [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	316	316	1	add	
9	[BUG] [BUGGY] int newdiff = startValue - endValue; [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { [BUGGY] int newdiff = startValue - endValue; [BUGGY] end.add( field, newdiff ); return newdiff; } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { [BUGGY] [BUGGY] int newdiff = startValue - endValue; end.add( field, newdiff ); return newdiff; } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	437	437	1	add	
11	[BUG] [BUGGY] end.add( field, newdiff ); [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { int newdiff = startValue - endValue; [BUGGY] end.add( field, newdiff ); [BUGGY] return newdiff; } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { int newdiff = startValue - endValue; [BUGGY] [BUGGY] end.add( field, newdiff ); return newdiff; } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	
13	[BUG] [BUGGY] return newdiff; [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { int newdiff = startValue - endValue; end.add( field, newdiff ); [BUGGY] return newdiff; [BUGGY] } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) { end.add( field, -1 * difference ); int endValue = end.get(field); int startValue = start.get(field); if (endValue < startValue) { int newdiff = startValue - endValue; end.add( field, newdiff ); [BUGGY] [BUGGY] return newdiff; } else { return 0; } } [CLASS] DurationFormatUtils Token [METHOD] reduceAndCorrect [RETURN_TYPE] int  Calendar start Calendar end int field int difference [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format str tmp boolean int count days difference endValue field hours i milliseconds minutes months newdiff seconds startValue sz years Calendar end start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	
15	[BUG] [BUGGY] return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault()); [FE] ComparisonFailure [CONTEXT] public static String formatPeriod(long startMillis, long endMillis, String format) { [BUGGY] return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault()); [BUGGY] } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp boolean int count days hours milliseconds minutes seconds long endMillis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	247	247	1	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public static String formatPeriod(long startMillis, long endMillis, String format) { [BUGGY] [BUGGY] return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault()); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format [VARIABLES] Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp boolean int count days hours milliseconds minutes seconds long endMillis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	247	247	1	add	
17	[BUG] [BUGGY] if (Token.containsTokenWithValue(tokens, M)) { [FE] ComparisonFailure [CONTEXT] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { [BUGGY] if (Token.containsTokenWithValue(tokens, M)) { [BUGGY] months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { [BUGGY] [BUGGY] if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	
19	[BUG] [BUGGY] months += 12 * years; [FE] ComparisonFailure [CONTEXT] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { [BUGGY] months += 12 * years; [BUGGY] years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { [BUGGY] [BUGGY] months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	
21	[BUG] [BUGGY] years = 0; [FE] ComparisonFailure [CONTEXT] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; [BUGGY] years = 0; [BUGGY] } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; [BUGGY] [BUGGY] years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	
23	[BUG] [BUGGY] hours += 24 * days; [FE] ComparisonFailure [CONTEXT]  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { [BUGGY] hours += 24 * days; [BUGGY] days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { [BUGGY] [BUGGY] hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	344	344	1	add	
25	[BUG] [BUGGY] days = 0; [FE] ComparisonFailure [CONTEXT] days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; [BUGGY] days = 0; [BUGGY] } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	345	345	1	replace	
26	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; [BUGGY] [BUGGY] days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	345	345	1	add	
27	[BUG] [BUGGY] minutes += 60 * hours; [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { [BUGGY] minutes += 60 * hours; [BUGGY] hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	348	348	1	replace	
28	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { [BUGGY] [BUGGY] minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	348	348	1	add	
29	[BUG] [BUGGY] hours = 0; [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; [BUGGY] hours = 0; [BUGGY] } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; }  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	349	349	1	replace	
30	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; [BUGGY] [BUGGY] hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; }  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	349	349	1	add	
31	[BUG] [BUGGY] seconds += 60 * minutes; [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { [BUGGY] seconds += 60 * minutes; [BUGGY] minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	352	352	1	replace	
32	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { [BUGGY] [BUGGY] seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	352	352	1	add	
33	[BUG] [BUGGY] minutes = 0; [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; [BUGGY] minutes = 0; [BUGGY] } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	353	353	1	replace	
34	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; [BUGGY] [BUGGY] minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	353	353	1	add	
35	[BUG] [BUGGY] milliseconds += 1000 * seconds; [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { [BUGGY] milliseconds += 1000 * seconds; [BUGGY] seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	356	356	1	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { [BUGGY] [BUGGY] milliseconds += 1000 * seconds; seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	356	356	1	add	
37	[BUG] [BUGGY] seconds = 0; [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; [BUGGY] seconds = 0; [BUGGY] } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	357	357	1	replace	
38	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; [BUGGY] [BUGGY] seconds = 0; } return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros); } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	357	357	1	add	
39	[BUG] [BUGGY] long millis = endMillis - startMillis; [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { [BUGGY] long millis = endMillis - startMillis; [BUGGY] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	265	265	1	replace	
40	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { [BUGGY] [BUGGY] long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	265	265	1	add	
41	[BUG] [BUGGY] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { long millis = endMillis - startMillis; [BUGGY] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { [BUGGY] return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	266	266	1	replace	
42	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { long millis = endMillis - startMillis; [BUGGY] [BUGGY] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	266	266	1	add	
43	[BUG] [BUGGY] Token[] tokens = lexx(format); [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } [BUGGY] Token[] tokens = lexx(format); [BUGGY]    Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	270	270	1	replace	
44	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] TimeZone timezone) { long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } [BUGGY] [BUGGY] Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	270	270	1	add	
45	[BUG] [BUGGY] Calendar start = Calendar.getInstance(timezone); [FE] ComparisonFailure [CONTEXT] long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   [BUGGY] Calendar start = Calendar.getInstance(timezone); [BUGGY] start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	274	274	1	replace	
46	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   [BUGGY] [BUGGY] Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	274	274	1	add	
47	[BUG] [BUGGY] start.setTime(new Date(startMillis)); [FE] ComparisonFailure [CONTEXT] long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); [BUGGY] start.setTime(new Date(startMillis)); [BUGGY] Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	275	275	1	replace	
48	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] long millis = endMillis - startMillis; if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); [BUGGY] [BUGGY] start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	275	275	1	add	
49	[BUG] [BUGGY] Calendar end = Calendar.getInstance(timezone); [FE] ComparisonFailure [CONTEXT] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); [BUGGY] Calendar end = Calendar.getInstance(timezone); [BUGGY] end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	276	276	1	replace	
50	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (millis < 28 * DateUtils.MILLIS_PER_DAY) { return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); [BUGGY] [BUGGY] Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	276	276	1	add	
51	[BUG] [BUGGY] end.setTime(new Date(endMillis)); [FE] ComparisonFailure [CONTEXT] return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); [BUGGY] end.setTime(new Date(endMillis)); [BUGGY]   int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	277	277	1	replace	
52	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] return formatDuration(millis, format, padWithZeros); } Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); [BUGGY] [BUGGY] end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	277	277	1	add	
53	[BUG] [BUGGY] int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [FE] ComparisonFailure [CONTEXT] Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  [BUGGY] int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [BUGGY] int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	280	280	1	replace	
54	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] Token[] tokens = lexx(format);   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  [BUGGY] [BUGGY] int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	280	280	1	add	
55	[BUG] [BUGGY] int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); [FE] ComparisonFailure [CONTEXT]   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [BUGGY] int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); [BUGGY] int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	281	281	1	replace	
56	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); [BUGGY] [BUGGY] int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	281	281	1	add	
57	[BUG] [BUGGY] int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); [FE] ComparisonFailure [CONTEXT]   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); [BUGGY] int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); [BUGGY] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	282	282	1	replace	
58	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]   Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); [BUGGY] [BUGGY] int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	282	282	1	add	
59	[BUG] [BUGGY] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); [FE] ComparisonFailure [CONTEXT]  Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); [BUGGY] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); [BUGGY] int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	283	283	1	replace	
60	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); [BUGGY] [BUGGY] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	283	283	1	add	
61	[BUG] [BUGGY] int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [FE] ComparisonFailure [CONTEXT] Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); [BUGGY] int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [BUGGY] int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	284	284	1	replace	
62	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] Calendar start = Calendar.getInstance(timezone); start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); [BUGGY] [BUGGY] int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	284	284	1	add	
63	[BUG] [BUGGY] int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [FE] ComparisonFailure [CONTEXT] start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [BUGGY] int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [BUGGY] int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	285	285	1	replace	
64	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] start.setTime(new Date(startMillis)); Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); [BUGGY] [BUGGY] int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	285	285	1	add	
65	[BUG] [BUGGY] int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR); [FE] ComparisonFailure [CONTEXT] Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [BUGGY] int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR); [BUGGY]   while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	286	286	1	replace	
66	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] Calendar end = Calendar.getInstance(timezone); end.setTime(new Date(endMillis));  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); [BUGGY] [BUGGY] int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	286	286	1	add	
67	[BUG] [BUGGY] while (milliseconds < 0) { [FE] ComparisonFailure [CONTEXT]  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  [BUGGY] while (milliseconds < 0) { [BUGGY] milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	289	289	1	replace	
68	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND); int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND); int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE); int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  [BUGGY] [BUGGY] while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	289	289	1	add	
69	[BUG] [BUGGY] while (seconds < 0) { [FE] ComparisonFailure [CONTEXT] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } [BUGGY] while (seconds < 0) { [BUGGY] seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	293	293	1	replace	
70	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY); int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH); int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH); int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } [BUGGY] [BUGGY] while (seconds < 0) { seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	293	293	1	add	
71	[BUG] [BUGGY] while (minutes < 0) { [FE] ComparisonFailure [CONTEXT]  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } [BUGGY] while (minutes < 0) { [BUGGY] minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } while (days < 0) { days += 31;  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	297	297	1	replace	
72	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  while (milliseconds < 0) { milliseconds += 1000; seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } [BUGGY] [BUGGY] while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } while (days < 0) { days += 31;  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	297	297	1	add	
73	[BUG] [BUGGY] while (hours < 0) { [FE] ComparisonFailure [CONTEXT] seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } [BUGGY] while (hours < 0) { [BUGGY] hours += 24; days -= 1; } while (days < 0) { days += 31;      [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	301	301	1	replace	
74	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] seconds -= 1; } while (seconds < 0) { seconds += 60; minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } [BUGGY] [BUGGY] while (hours < 0) { hours += 24; days -= 1; } while (days < 0) { days += 31;      [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	301	301	1	add	
75	[BUG] [BUGGY] while (days < 0) { [FE] ComparisonFailure [CONTEXT] minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } [BUGGY] while (days < 0) { [BUGGY] days += 31;      months -= 1; } while (months < 0) { months += 12; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	305	305	1	replace	
76	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] minutes -= 1; } while (minutes < 0) { minutes += 60; hours -= 1; } while (hours < 0) { hours += 24; days -= 1; } [BUGGY] [BUGGY] while (days < 0) { days += 31;      months -= 1; } while (months < 0) { months += 12; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	305	305	1	add	
77	[BUG] [BUGGY] while (months < 0) { [FE] ComparisonFailure [CONTEXT] } while (days < 0) { days += 31;      months -= 1; } [BUGGY] while (months < 0) { [BUGGY] months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	314	314	1	replace	
78	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } while (days < 0) { days += 31;      months -= 1; } [BUGGY] [BUGGY] while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years); [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	314	314	1	add	
79	[BUG] [BUGGY] milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); [FE] ComparisonFailure [CONTEXT]     months -= 1; } while (months < 0) { months += 12; years -= 1; } [BUGGY] milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); [BUGGY] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);     [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	318	318	1	replace	
80	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]     months -= 1; } while (months < 0) { months += 12; years -= 1; } [BUGGY] [BUGGY] milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);     [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	318	318	1	add	
81	[BUG] [BUGGY] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); [FE] ComparisonFailure [CONTEXT]    months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); [BUGGY] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); [BUGGY] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	319	319	1	replace	
82	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]    months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); [BUGGY] [BUGGY] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	319	319	1	add	
83	[BUG] [BUGGY] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); [FE] ComparisonFailure [CONTEXT]   months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); [BUGGY] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); [BUGGY] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	320	320	1	replace	
84	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]   months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); [BUGGY] [BUGGY] minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	320	320	1	add	
85	[BUG] [BUGGY] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); [FE] ComparisonFailure [CONTEXT]  months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); [BUGGY] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); [BUGGY] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	321	321	1	replace	
86	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); [BUGGY] [BUGGY] hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	321	321	1	add	
87	[BUG] [BUGGY] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [FE] ComparisonFailure [CONTEXT] months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); [BUGGY] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [BUGGY] months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	322	322	1	replace	
88	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] months -= 1; } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); [BUGGY] [BUGGY] days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	322	322	1	add	
89	[BUG] [BUGGY] months -= reduceAndCorrect(start, end, Calendar.MONTH, months); [FE] ComparisonFailure [CONTEXT] } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [BUGGY] months -= reduceAndCorrect(start, end, Calendar.MONTH, months); [BUGGY] years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	323	323	1	replace	
90	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); [BUGGY] [BUGGY] months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	323	323	1	add	
91	[BUG] [BUGGY] years -= reduceAndCorrect(start, end, Calendar.YEAR, years); [FE] ComparisonFailure [CONTEXT] while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); [BUGGY] years -= reduceAndCorrect(start, end, Calendar.YEAR, years); [BUGGY]     if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	324	324	1	replace	
92	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] while (months < 0) { months += 12; years -= 1; } milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds); seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); [BUGGY] [BUGGY] years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	324	324	1	add	
93	[BUG] [BUGGY] if (!Token.containsTokenWithValue(tokens, y)) { [FE] ComparisonFailure [CONTEXT] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    [BUGGY] if (!Token.containsTokenWithValue(tokens, y)) { [BUGGY] if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	329	329	1	replace	
94	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds); minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes); hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours); days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days); months -= reduceAndCorrect(start, end, Calendar.MONTH, months); years -= reduceAndCorrect(start, end, Calendar.YEAR, years);    [BUGGY] [BUGGY] if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	329	329	1	add	
95	[BUG] [BUGGY] if (!Token.containsTokenWithValue(tokens, M)) { [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } [BUGGY] if (!Token.containsTokenWithValue(tokens, M)) { [BUGGY] days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	339	339	1	replace	
96	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (!Token.containsTokenWithValue(tokens, y)) { if (Token.containsTokenWithValue(tokens, M)) { months += 12 * years; years = 0; } else {  days += 365 * years; years = 0; } } [BUGGY] [BUGGY] if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	339	339	1	add	
97	[BUG] [BUGGY] if (!Token.containsTokenWithValue(tokens, d)) { [FE] ComparisonFailure [CONTEXT] } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } [BUGGY] if (!Token.containsTokenWithValue(tokens, d)) { [BUGGY] hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	343	343	1	replace	
98	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else {  days += 365 * years; years = 0; } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } [BUGGY] [BUGGY] if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	343	343	1	add	
99	[BUG] [BUGGY] if (!Token.containsTokenWithValue(tokens, H)) { [FE] ComparisonFailure [CONTEXT] } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } [BUGGY] if (!Token.containsTokenWithValue(tokens, H)) { [BUGGY] minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	347	347	1	replace	
100	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } } if (!Token.containsTokenWithValue(tokens, M)) { days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR); months = 0; } if (!Token.containsTokenWithValue(tokens, d)) { hours += 24 * days; days = 0; } [BUGGY] [BUGGY] if (!Token.containsTokenWithValue(tokens, H)) { minutes += 60 * hours; hours = 0; } if (!Token.containsTokenWithValue(tokens, m)) { seconds += 60 * minutes; minutes = 0; } if (!Token.containsTokenWithValue(tokens, s)) { milliseconds += 1000 * seconds; seconds = 0; [CLASS] DurationFormatUtils Token [METHOD] formatPeriod [RETURN_TYPE] String  long startMillis long endMillis String format boolean padWithZeros TimeZone timezone [VARIABLES] TimeZone timezone boolean padWithZeros Token[] tokens Calendar end start Object H M S d m s value y String ISO_EXTENDED_FORMAT_PATTERN duration format tmp int count days hours milliseconds minutes months seconds years long endMillis millis startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.5773502691896258	347	347	1	add	
