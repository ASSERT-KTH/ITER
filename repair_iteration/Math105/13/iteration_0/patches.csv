bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  ybar  =  x.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    double  ybar  =  x.doubleValue();  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    double  ybar  =  x.doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	26	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.max(1.0,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    ybar  =  Math.max(1.0,  xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
3	[BUG]  [BUGGY]    ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.max(1.0,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  Math.max(1.0,  xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    xbar  =  x;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    xbar  =  x;		compilable	  [FE]  AssertionFailedError  	26	1	add
5	[BUG]  [BUGGY]    xbar  =  x;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    xbar  =  x;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    xbar  =  x;		compilable	  [FE]  AssertionFailedError  	26	1	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.max(0,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    ybar  =  Math.max(0,  xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
7	[BUG]  [BUGGY]    ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.max(0,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  Math.max(0,  xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  x;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    ybar  =  x;		compilable	  [FE]  AssertionFailedError  	26	1	add
9	[BUG]  [BUGGY]    ybar  =  x;  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  x;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  x;		compilable	  [FE]  AssertionFailedError  	26	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  n;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  n;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	4	replace
11	[BUG]  [BUGGY]  ybar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  n;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	4	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  0;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  0;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	4	replace
13	[BUG]  [BUGGY]  ybar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  0;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  0;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	4	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  Math.max(0,  y);  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	1	replace
15	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  Math.max(0,  y);  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.floor(xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    ybar  =  Math.floor(xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
17	[BUG]  [BUGGY]    ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.floor(xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  Math.floor(xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.abs(xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    ybar  =  Math.abs(xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
19	[BUG]  [BUGGY]    ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.abs(xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  Math.abs(xbar);		compilable	  [FE]  AssertionFailedError  	26	1	add
20	[BUG]  [BUGGY]    n  =  Math.min(n,  xbar);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    n  =  Math.min(n,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    n  =  Math.min(n,  xbar);		non-compiled	[CE]  possible  loss  of  precision	26	None	add
21	[BUG]  [BUGGY]    double  y  =  ybar  -  xbar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    double  y  =  ybar  -  xbar;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    double  y  =  ybar  -  xbar;		non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	26	None	add
22	[BUG]  [BUGGY]    ybar  =  Math.floor(xbar,  y);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    ybar  =  Math.floor(xbar,  y);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    ybar  =  Math.floor(xbar,  y);		non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	26	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  y  +  1;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y  +  1;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	5	replace
24	[BUG]  [BUGGY]  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]  ybar  =  y  +  1;  [BUGGY]  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y  +  1;	ybar  =  y;  	compilable	  [FE]  AssertionFailedError  	25	5	replace
25	[BUG]  [BUGGY]    n  =  Math.min(1.0,  xbar);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    n  =  Math.min(1.0,  xbar);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    n  =  Math.min(1.0,  xbar);		non-compiled	[CE]  possible  loss  of  precision	26	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
27	[BUG]  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
29	[BUG]  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
31	[BUG]  [BUGGY]    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;  [BUGGY]    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }		compilable	  [FE]  AssertionFailedError  	26	1	add
