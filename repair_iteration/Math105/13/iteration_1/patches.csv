bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
2	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
3	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    yBar  =  Math.max(0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	14	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
5	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
7	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
9	[BUG]  [BUGGY]      ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
11	[BUG]  [BUGGY]      ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
12	[BUG]  [BUGGY]      ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.abs(xbar);    yBar  =  Math.abs(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	18	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  xbar;	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	29	4	replace
14	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  xbar;	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	29	4	replace
15	[BUG]  [BUGGY]  bucket  =  x  -  xbar;  [CE]  cannot  find  symbol  bucket  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  =  x  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  x  -  xbar;	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	29	None	replace
16	[BUG]  [BUGGY]  bucket  =  n  -  1;  [CE]  cannot  find  symbol  bucket  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  =  n  -  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  n  -  1;	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	29	None	replace
17	[BUG]  [BUGGY]  luate(x,  y);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  luate(x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  y);	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
19	[BUG]  [BUGGY]  ybar  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  ybar);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  ybar);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
21	[BUG]  [BUGGY]  ybar  =  Math.max(0,  ybar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  ybar);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  ybar);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
23	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	4	replace
24	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	      ybar    =    x;    	compilable	  [FE]  StackOverflowError  	9	9	replace
25	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	      ybar    =    x;    	compilable	  [FE]  StackOverflowError  	9	9	replace
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      ybar    =    x;    	compilable	  [FE]  IllegalArgumentException  	9	9	replace
27	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      ybar    =    x;    	compilable	  [FE]  IllegalArgumentException  	9	9	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  ybar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    x;    ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
29	[BUG]  [BUGGY]      ybar  =  x;  ybar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  ybar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    x;    xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
31	[BUG]  [BUGGY]      ybar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
32	[BUG]  [BUGGY]      ybar  =  x;  yBar  =  x;  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  yBar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    yBar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  yBar	8	None	add
33	[BUG]  [BUGGY]      ybar  =  x;  ibar  =  x;  [CE]  cannot  find  symbol  ibar  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  ibar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    ibar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  ibar	8	None	add
34	[BUG]  [BUGGY]      ybar  =  x;  ybar  =  x);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  ybar  =  x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    ybar  =  x);	  	non-compiled	[CE]  ';'  expected	8	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
36	[BUG]  [BUGGY]      ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
38	[BUG]  [BUGGY]      ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
39	[BUG]  [BUGGY]      ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xBar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	2	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  y);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	2	replace
41	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  y);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  xbar  +  1);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
43	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  xbar  +  1);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  xbar);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
45	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  xbar);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  xbar  -  1);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
47	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  xbar  -  1);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.abs(y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(y);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
49	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.abs(y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(y);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.abs(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(x);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
51	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.abs(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(x);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.sqrt(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.sqrt(xbar);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
53	[BUG]  [BUGGY]  ybar  =  Math.sqrt(xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.sqrt(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sqrt(xbar);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n;    ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
55	[BUG]  [BUGGY]  ybar  =  n;  ybar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
56	[BUG]  [BUGGY]  ybar  =  n;  int  ybar  =  n;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  int  ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    int  ybar  =  n;	  	non-compiled	[CE]  possible  loss  of  precision	10	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  xbar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	5	add
58	[BUG]  [BUGGY]  ybar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  xbar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	5	add
59	[BUG]  [BUGGY]  ybar  =  n;  yBar  =  n;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  yBar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    yBar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  yBar	10	None	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1;    ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
61	[BUG]  [BUGGY]  ybar  =  y  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1;    xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	5	add
63	[BUG]  [BUGGY]  ybar  =  y  +  1;  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	5	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1;    double  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	5	add
65	[BUG]  [BUGGY]  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    double  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	23	5	add
66	[BUG]  [BUGGY]  ybar  =  y  +  1;  yBar  =  y  +  1;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  yBar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    yBar  =  y  +  1;	  	non-compiled	[CE]  cannot  find  symbol  yBar	23	None	add
67	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
68	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
69	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
70	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
71	[BUG]  [BUGGY]  ybar  =  Math.floor(x,  y);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x,  y);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
72	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  y,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(xbar,  y,  n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  y,  n);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
73	[BUG]  [BUGGY]  ybar  =  Math.floor(y,  xbar);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(y,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(y,  xbar);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
74	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  y  +  1);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(xbar,  y  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  y  +  1);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	28	1	add
76	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	28	1	add
77	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  +=  x  -  xbar;  }  [CE]  cannot  find  symbol  xBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  +=  x  -  xbar;  }	  	non-compiled	[CE]  cannot  find  symbol  xBar	28	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	28	1	add
79	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	28	1	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
81	[BUG]  [BUGGY]      ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	16	2	add
83	[BUG]  [BUGGY]      ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	16	2	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  ybar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0;    ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
85	[BUG]  [BUGGY]  ybar  =  0;  ybar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  ybar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0;    ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  double  ybar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0;    double  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	4	add
87	[BUG]  [BUGGY]  ybar  =  0;  double  ybar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  double  ybar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0;    double  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	4	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  xbar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0;    xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	5	add
89	[BUG]  [BUGGY]  ybar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  xbar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0;    xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	12	5	add
90	[BUG]  [BUGGY]  ybar  =  0;  (ybar  =  0);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  (ybar  =  0);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0;    (ybar  =  0);	  	non-compiled	[CE]  not  a  statement	12	None	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  ybar  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  ybar  +  1;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
92	[BUG]  [BUGGY]  ybar  =  ybar  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  ybar  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  ybar  +  1;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  2;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y  +  2;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
94	[BUG]  [BUGGY]  ybar  =  y  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  2;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y  +  2;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  n  +  1;	  ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
96	[BUG]  [BUGGY]  ybar  =  n  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n  +  1;	  ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n  -  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  n  -  1;	  ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
98	[BUG]  [BUGGY]  ybar  =  n  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n  -  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n  -  1;	  ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	11	4	replace
99	[BUG]  [BUGGY]  n  =  Math.min(1.0,  xbar  +  1);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(1.0,  xbar  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  xbar  +  1);	      n    =    Math.min(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  n  =  Math.min(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.min(1.0,  xbar);	      n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	25	4	replace
101	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  n  =  Math.min(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.min(1.0,  xbar);	      n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	25	4	replace
102	[BUG]  [BUGGY]  n  =  Math.min(1.0,  y);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(1.0,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  y);	      n    =    Math.min(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
103	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
104	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        xbar    =    x;    xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
107	[BUG]  [BUGGY]      xbar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  double  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        xbar    =    x;    double  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
109	[BUG]  [BUGGY]      xbar  =  x;  double  xbar  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  double  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    double  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
110	[BUG]  [BUGGY]      xbar  =  x;  xBar  =  x;  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xBar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    xBar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  xBar	4	None	add
111	[BUG]  [BUGGY]      xbar  =  x;  xbar  =  x);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xbar  =  x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    xbar  =  x);	  	non-compiled	[CE]  ';'  expected	4	None	add
112	[BUG]  [BUGGY]  double  y  =  y  -  xbar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  y  =  y  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  y  -  xbar;	      double    y    =    ybar    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	21	None	replace
113	[BUG]  [BUGGY]  double  y  =  xbar  -  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  y  =  xbar  -  ybar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  xbar  -  ybar;	      double    y    =    ybar    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	21	None	replace
114	[BUG]  [BUGGY]  double  y  =  n  -  xbar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  y  =  n  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  n  -  xbar;	      double    y    =    ybar    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	21	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.floor(y);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
116	[BUG]  [BUGGY]  ybar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(y);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.floor(x);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
118	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.log(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.log(xbar);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	7	replace
120	[BUG]  [BUGGY]  ybar  =  Math.log(xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.log(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.log(xbar);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	7	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.ceil(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.ceil(xbar);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
122	[BUG]  [BUGGY]  ybar  =  Math.ceil(xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.ceil(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(xbar);	      ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	17	4	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  n;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
124	[BUG]  [BUGGY]  xbar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  0;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
126	[BUG]  [BUGGY]  xbar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  0;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  y;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  y;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
128	[BUG]  [BUGGY]  xbar  =  y;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  y;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
129	[BUG]  [BUGGY]  xbar  =  new  double[n];  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  new  double[n];  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  new  double[n];	      xbar    =    x;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
131	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
132	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  cannot  find  symbol  xBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }	  	non-compiled	[CE]  cannot  find  symbol  xBar	26	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0,  xbar);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
134	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0,  xbar);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  xbar  -  1);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
136	[BUG]  [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  xbar  -  1);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
138	[BUG]  [BUGGY]      ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
140	[BUG]  [BUGGY]      ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
141	[BUG]  [BUGGY]      ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xBar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	6	None	add
142	[BUG]  [BUGGY]  double  ybar  =  n.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  ybar  =  n.doubleValue();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  n.doubleValue();	      double    ybar    =    x.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	1	None	replace
143	[BUG]  [BUGGY]  double  ybar  =  y.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  ybar  =  y.doubleValue();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  y.doubleValue();	      double    ybar    =    x.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
144	[BUG]  [BUGGY]  double  ybar  =  d.doubleValue();  [CE]  cannot  find  symbol  d  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  ybar  =  d.doubleValue();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  d.doubleValue();	      double    ybar    =    x.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  d	1	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	30	1	add
146	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	30	1	add
147	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  cannot  find  symbol  xBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }	  	non-compiled	[CE]  cannot  find  symbol  xBar	30	None	add
148	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  If(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  If(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    If(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
149	[BUG]  [BUGGY]  n  =  Math.min(xbar,  n);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(xbar,  n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(xbar,  n);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
150	[BUG]  [BUGGY]  n  =  Math.min(1,  xbar);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(1,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1,  xbar);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
151	[BUG]  [BUGGY]  n  =  Math.min(0.0,  xbar);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(0.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(0.0,  xbar);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  1;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
153	[BUG]  [BUGGY]  ybar  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  1;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Double.POSITIVE_INFINITY;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	9	replace
155	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.POSITIVE_INFINITY;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	9	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Double.MIN_VALUE;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Double.MIN_VALUE;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
157	[BUG]  [BUGGY]  ybar  =  Double.MIN_VALUE;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Double.MIN_VALUE;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.MIN_VALUE;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
158	[BUG]  [BUGGY]      ybar  =  Math.floor(xbar);  yBar  =  Math.floor(xbar);  [CE]  cannot  find  symbol  yBar  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.floor(xbar);  yBar  =  Math.floor(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.floor(xbar);    yBar  =  Math.floor(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	16	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1.0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y  +  1.0;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	5	replace
160	[BUG]  [BUGGY]  ybar  =  y  +  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1.0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y  +  1.0;	  ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	24	5	replace
161	[BUG]  [BUGGY]  ybar  =  yBar  +  1;  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  yBar  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  yBar  +  1;	  ybar    =    y    +    1;    	non-compiled	[CE]  cannot  find  symbol  yBar	24	None	replace
162	[BUG]  [BUGGY]  luate(n,  x,  y);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  luate(n,  x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(n,  x,  y);	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
163	[BUG]  [BUGGY]  luate(n,  x);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  luate(n,  x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(n,  x);	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
165	[BUG]  [BUGGY]      ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  double  ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n;    double  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	4	add
167	[BUG]  [BUGGY]  ybar  =  n;  double  ybar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  double  ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    double  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	10	4	add
168	[BUG]  [BUGGY]  ybar  =  n;  (ybar  =  n;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  n;  (ybar  =  n;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n;    (ybar  =  n;	  	non-compiled	[CE]  ')'  expected	10	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	4	add
170	[BUG]  [BUGGY]      ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	2	4	add
171	[BUG]  [BUGGY]      ybar  =  Math.max(1.0,  xbar);  yBar  =  Math.max(1.0,  xbar);  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(1.0,  xbar);  yBar  =  Math.max(1.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(1.0,    xbar);    yBar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	2	None	add
172	[BUG]  [BUGGY]  double  ybar  =  value.doubleValue();  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  ybar  =  value.doubleValue();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  value.doubleValue();	      double    ybar    =    x.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	      ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
174	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	      ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  -1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  -1;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
176	[BUG]  [BUGGY]  ybar  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  -1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  -1;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0.0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  0.0;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
178	[BUG]  [BUGGY]  ybar  =  0.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0.0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  0.0;	  ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	13	4	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  double  ybar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    x;    double  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	4	add
180	[BUG]  [BUGGY]      ybar  =  x;  double  ybar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  double  ybar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    double  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	8	4	add
181	[BUG]  [BUGGY]      ybar  =  x;  (ybar  =  x;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  (ybar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    (ybar  =  x;	  	non-compiled	[CE]  ')'  expected	8	None	add
182	[BUG]  [BUGGY]  double  y  =  y  -  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  y  =  y  -  ybar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  y  -  ybar;	      double    y    =    ybar    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	21	None	replace
183	[BUG]  [BUGGY]  double  y  =  ybar  -  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  y  =  ybar  -  ybar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  ybar  -  ybar;	      double    y    =    ybar    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	21	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1,  xbar);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
185	[BUG]  [BUGGY]  ybar  =  Math.max(1,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1,  xbar);	      ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
186	[BUG]  [BUGGY]  ybar  =  0;  int  ybar  =  0;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  0;  int  ybar  =  0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0;    int  ybar  =  0;	  	non-compiled	[CE]  possible  loss  of  precision	12	None	add
187	[BUG]  [BUGGY]  ybar  =  y  +  1;  int  ybar  =  y  +  1;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  int  ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    int  ybar  =  y  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	23	None	add
188	[BUG]  [BUGGY]  ybar  =  y  +  1;  (ybar  =  y  +  1;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  (ybar  =  y  +  1;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    (ybar  =  y  +  1;	  	non-compiled	[CE]  ')'  expected	23	None	add
189	[BUG]  [BUGGY]  ybar  =  y  +  1;  (ybar  =  y  +  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y  +  1;  (ybar  =  y  +  1);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1;    (ybar  =  y  +  1);	  	non-compiled	[CE]  not  a  statement	23	None	add
190	[BUG]  [BUGGY]      xbar  =  x;  ||  xbar  =  x;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  ||  xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    ||  xbar  =  x;	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
191	[BUG]  [BUGGY]      xbar  =  x;  (xbar  =  x;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  (xbar  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    (xbar  =  x;	  	non-compiled	[CE]  ')'  expected	4	None	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0.0,  xbar);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
193	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0.0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0.0,  xbar);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	4	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1.0,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  y);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	3	replace
195	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1.0,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  y);	      ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	3	3	replace
196	[BUG]  [BUGGY]  ybar  =  y.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  y.doubleValue();  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y.doubleValue();	  ybar    =    n;    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
197	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  cannot  find  symbol  xBar  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }	  	non-compiled	[CE]  cannot  find  symbol  xBar	26	None	add
198	[BUG]  [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  If(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  If(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  	non-compiled	[CE]  ';'  expected	26	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	2	replace
200	[BUG]  [BUGGY]  ybar  =  Math.max(1,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(1,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	2	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	4	add
202	[BUG]  [BUGGY]      ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	6	4	add
203	[BUG]  [BUGGY]      ybar  =  Math.max(0,  xbar);  yBar  =  Math.max(0,  xbar);  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.max(0,  xbar);  yBar  =  Math.max(0,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.max(0,    xbar);    yBar  =  Math.max(0,  xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	6	None	add
204	[BUG]  [BUGGY]  n  =  Math.min(1.0,  ybar);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(1.0,  ybar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  ybar);	      n    =    Math.min(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
205	[BUG]  [BUGGY]  n  =  Math.min(1.0,  xbar  -  1);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(1.0,  xbar  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  xbar  -  1);	      n    =    Math.min(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
206	[BUG]  [BUGGY]  n  =  Math.min(ybar,  xbar);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(ybar,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(ybar,  xbar);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
207	[BUG]  [BUGGY]  n  =  Math.min(n,  ybar);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(n,  ybar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(n,  ybar);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  0.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  0.0;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
209	[BUG]  [BUGGY]  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  0.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  0.0;	      xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
210	[BUG]  [BUGGY]  bucket  =  0;  [CE]  cannot  find  symbol  bucket  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  0;	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	31	None	replace
211	[BUG]  [BUGGY]  luate(n,  y);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  luate(n,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(n,  y);	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
212	[BUG]  [BUGGY]      ybar  =  x;  ybar  =  x.;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  x;  ybar  =  x.;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    x;    ybar  =  x.;	  	non-compiled	[CE]  <identifier>  expected	8	None	add
213	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  ybar);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(xbar,  ybar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  ybar);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
214	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]                  AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.floor(xbar,  yBar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  yBar);	      ybar    =    Math.floor(xbar,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	22	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xbar  =  y;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	        xbar    =    x;    xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	4	5	add
216	[BUG]  [BUGGY]      xbar  =  x;  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      xbar  =  x;  xbar  =  y;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        xbar    =    x;    xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	4	5	add
217	[BUG]  [BUGGY]  ybar  =  Y;  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Y;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Y;	  ybar    =    n;    	non-compiled	[CE]  cannot  find  symbol  Y	11	None	replace
218	[BUG]  [BUGGY]  pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x;	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	31	4	replace
220	[BUG]  [BUGGY]  sumX  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x;	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	31	4	replace
221	[BUG]  [BUGGY]  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
222	[BUG]  [BUGGY]  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
223	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
224	[BUG]  [BUGGY]  pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
225	[BUG]  [BUGGY]  pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
226	[BUG]  [BUGGY]      ybar  =  Math.abs(xbar);  ybar  =  Math.abs(exbar);  [CE]  cannot  find  symbol  exbar  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]      ybar  =  Math.abs(xbar);  ybar  =  Math.abs(exbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	        ybar    =    Math.abs(xbar);    ybar  =  Math.abs(exbar);	  	non-compiled	[CE]  cannot  find  symbol  exbar	18	None	add
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
228	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
230	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
232	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	14	6	add
233	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	14	None	add
234	[BUG]  [BUGGY]  double  ybar  =  xbar.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  double  ybar  =  xbar.doubleValue();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  xbar.doubleValue();	      double    ybar    =    x.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	3	replace
236	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  ybar  =  Math.min(1,  y);  [BUGGY]    }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1,  y);	  ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	15	3	replace
237	[BUG]  [BUGGY]  bucket  =  sumX  -  xbar;  [CE]  cannot  find  symbol  bucket  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  bucket  =  sumX  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  sumX  -  xbar;	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	29	None	replace
238	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  cannot  find  symbol  parent  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  parent  =  parent.getParent();  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	parent  =  parent.getParent();	      if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  parent	29	None	replace
239	[BUG]  [BUGGY]  n  =  Math.min(y,  xbar);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  n  =  Math.min(y,  xbar);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(y,  xbar);	      n    =    Math.min(n,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  Math.abs(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(x);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
241	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;    [BUGGY]  xbar  =  Math.abs(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(x);	      ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
