projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((int)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(short)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;privateshortn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.n=(SimpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.n=(SimpleRegression!=null?0:SimpleRegression.this.n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(short)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+this);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.rint("AssertionFailedError".length());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.log(NUMBER_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=(int)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=(int)Math.rint(this.regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(short)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=(int)Math.log(newInteger(0));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=(int)Math.rint(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportWarning("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.report("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SecurityContext.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(short)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privatelongn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privatelongn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;longn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;longn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privatelongn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privatelongn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=(int)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;intn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Integer)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=(int)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=(int)Math.floor((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;intn=(int)Math.rint("Error",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.addError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Double)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;n=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=n.iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this.type);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=as.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privatelongn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(float)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75nulln=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SimpleRegression.class);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Unexpectederror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(NUMBER_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SimpleRegression.NUMBER_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SHORT_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((double)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((double)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;intn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;longn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfloatn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiclongn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0L;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;privatelongn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;longn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;longn=(long)Math.rint(0L);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint("Error",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint("SimpleRegression",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n+2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n/1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((long)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((long)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75safeName=SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+this,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedErrorn=newAssertionFailedError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityContext.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityContext.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityContext.checkState(n<1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityContext.checkState(n>=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((double)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n+1,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,1L);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((long)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;finalAssertionFailedError<String>error=newAssertionFailedError();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;finalAssertionFailedError<String>n=newAssertionFailedError();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;finalAssertionFailedError<String>error=newAssertionFailedError(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.addWarning("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.addError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.addError("Unexpectederror:"+this.getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).initializer();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.rint(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1;privateintn=(double)Math.rint(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Integer)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=(int)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint((int)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint((int)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegression.this.regression=newSimpleRegression(false);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;longn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;intn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n).initialValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n).initializer();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((long)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.regression=newSimpleRegression(null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("SimpleRegression.regression",n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n<=1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n==0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((long)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.report("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.report("Unexpectederror:"+this.getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.log("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.regression=newSimpleRegression(String.valueOf(null));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.regression=newSimpleRegression(String.valueOf(n));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).intValue()+1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.floor((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.log((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=(int)Math.floor((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.ceil((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protecteddoublen=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedlongn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=n.iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=assertionFailedError.iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.getNumber().iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privatelongn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint(this.regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint(this.regression,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint(this.regression,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privatelongn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegression.this.regression=null;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.this.reportError("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=1;it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=as.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(!SimpleRegression.class.isAssignableFrom(identifier)){protectedintn=0;SimpleRegression.class.getSimpleName();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(!SimpleRegression.class.isAssignableFrom(name)){protectedintn=0;SimpleRegression.class.getSimpleName();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(!SimpleRegression.class.isAssignableFrom("-")){protectedintn=0;SimpleRegression.class.getSimpleName();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.n=(SimpleRegression!=null?0:SimpleRegression.this.n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.n=(SimpleRegression!=null?0:SimpleRegression.this.n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.n=(SimpleRegression==null?0:SimpleRegression.this.n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(newInteger(0));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1;privateintn=(double)Math.log(newInteger(0));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.log(newInteger(0));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;intn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;intn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;intn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Long)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.n=(SimpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.n=(SimpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.n=(SimpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=(SimpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegression.this.regression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegression.this.regression=newSimpleRegression(numbers);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=1;it.hasNext();){AssertionFailedError.error(it.next(),it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=1;it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError{protectedintn=0;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError{protectedintn=1;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError{protectedintn=0;SimpleRegressionregression=newSimpleRegression(n,2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiclongn=0;intn=(long)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=0;intn=(double)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=Math.max(0,protected);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.error("Unexpectederror:"+n);[timeout]
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint("AssertionFailedError".length());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint("AssertionFailedError").length();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.error("Unexpectederror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("Unexpectederror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+name,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportWarning("Unexpectederror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefloatn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;SimpleRegression.this.regression=null;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportWarning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=0.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n*1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n*2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateshortn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;privateintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;privateintn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;privateintn=3;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;privateintn=4;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Double)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(double)Math.rint((Double)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Double)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75safeRegression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Integer)n).intValue()+1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("Missingerror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.error("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegressionregression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=newSimpleRegression(null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=newSimpleRegression(false);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatestaticfinalintn=0;privateintn=(int)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint("SimpleRegressionError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Missingerror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Missingerror:"+this);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=0.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(this.type,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(this.type);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this.type,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75securedShortn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityRegression.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n>=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;AssertionFailedError.error(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error(name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("msg.unchecked.identifier.error",n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.warning("msg.unchecked.identifier.error");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n).doubleValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((double)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((int)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((float)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegressionregression=newSimpleRegression(N+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.error("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75safeAssertionFailedError("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Missingerror:"+getClass());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=1;it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=as.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,3);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,0L);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefloatn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=3;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75intn=(int)Math.rint((Long)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Long)n).initialValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;privateintn=(int)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privatelongn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=1;privatelongn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,false);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(float)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=3;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75securedShortn=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;for(AssertionFailedError<Integer>it=1;it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=as.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedfloatn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;AssertionFailedError.error("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;AssertionFailedError.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=(int)Math.log(newInteger(1));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfloatn=0;floatn=(float)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfloatn=0;intn=(float)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.random()+1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=1;privatelongn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75securedintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;longn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecuritySystem.err.println("Unabletoparseidentifier:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecuritySystem.err.println("Unabletoparse:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatestaticfinalintn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatestaticfinalintn=(int)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;intn=(int)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(int)Math.rint((long)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)SimpleRegression.size();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegression.class.getSimpleName());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((int)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(NUMBER_INDEX+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SimpleRegressionFailedError.class);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;SimpleRegression.this.n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(long)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75Privateintn=0;SimpleRegressionregression=SimpleRegression.getInstance(regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegressionregression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression(n+2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=(int)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=(int)Math.rint("AssertionFailedError".length());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=(int)Math.rint("AssertionFailedError",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;intn=(int)Math.rint("AssertionFailedError")+1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75securedintn=0;AssertionFailedError.warning("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;AssertionFailedError.warning("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.n=(simpleRegression==null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n-1L);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;privateshortn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((int)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((Long)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(int)Math.rint((Integer)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75securedintn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=1;privatelongn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=Arrays.asList(newAssertionFailedError.class));it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75Privateintn=0;SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;SimpleRegressionregression=SimpleRegression.getInstanceUTC();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SecurityContext.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;intn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;SimpleRegression.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((int)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;SimpleRegression.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegressionregression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegressionregression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.addError("Unexpectederror:"+getClass());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint(0,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;privateintn=(int)Math.rint(0,n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75Privateintn=0;SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;SimpleRegressionregression=SimpleRegression.getInstance();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.error("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;AssertionFailedError.error(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegressionregression=newSimpleRegression(n,2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegressionregression=newSimpleRegression(n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=(char)Math.rint((char)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((String)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((long)n,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;AssertionFailedError.error("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;privatelongn=2L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;longn=2L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;longn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((Integer)n).initialValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L+1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((double)n).floatValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint(this.regression+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportError("Unexpectederror:"+name,expected);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=(int)Math.rint("Error",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=(int)Math.rint("Error",2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=2;intn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegression.class.getSimpleName();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=n.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicbyten=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiclongn=0;intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.reportError("Missingerror:"+identifier);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.this.reportError("Missingerror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=1;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;AssertionFailedError.error("");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("")
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("Unknownerror:"+name);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;SimpleRegressionregression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.regression=newSimpleRegression(n,this.type-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;n=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;n=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=Math.min(identifiers.length,0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=Math.min(identifierCount,1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((float)n-1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(n>0){protectedintn=0;SimpleRegressionregression=newSimpleRegression(n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.reportWarning("Unexpectederror:"+this);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;SimpleRegression.checkState(n<=0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;SimpleRegression.checkState(n>0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.getMessage());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=Math.max(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;n=Math.max(1,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.error("")
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("Unknownerror:");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;AssertionFailedError.error("Unknownerror:");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=0;AssertionFailedError.error("Unknownerror:"+asPath());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatecharn=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotecteddoublen=0L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>n=assertionFailedError.iterator();it.hasNext();){AssertionFailedError.error(next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=this.next().iterator();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>n=n.iterator();it.hasNext();){AssertionFailedError.error(n.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=newAssertionFailedError();it.hasNext();){intn=it.next();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicstaticfinalintn=0;AssertionFailedError.warning("Missingerror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicdoublen=0;intn=getErrorCount();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;for(AssertionFailedError<?>){if(n>0){returnn;}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;for(AssertionFailedErrorexception:newAssertionFailedError.class.getName()){if(exception.length()>0){thrownewIllegalStateException("");}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;for(AssertionFailedErrorexception:newAssertionFailedError.class.getName()){returnexception;}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;for(AssertionFailedErrorexception:newAssertionFailedErrorRegressions()){if(n<=0){thrownewIllegalStateException("");}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=1;intn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.log((Double)n).longValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(n>0){protectedintn=0;SimpleRegressionregression=newSimpleRegression();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;SimpleRegression.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;SimpleRegression.this.reportError("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegressionregression=newSimpleRegression("AssertionFailedError:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegressionregression=newSimpleRegression("AssertionFailedError:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegressionregression=newSimpleRegression("AssertionFailedError",n+1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegressionregression=newSimpleRegression("AssertionFailedError",n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=2;SimpleRegressionregression=newSimpleRegression("AssertionFailedError:");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privateintn=(long)Math.rint(0,n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateshortn=1;privatelongn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(n>0){protectedintn=0;AssertionFailedError.error("Unexpectederror:"+n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((Integer)n,2);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SEMI_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SIMULTIPLE_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SYNTHETIC_NUMBER_INDEX);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.log(SYNTHETIC);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=(SimpleRegression!=null)?0:SimpleRegression.this.n;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatecharn=(char)Math.rint("AssertionFailedError");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=(int)Math.rint("SimpleRegression");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(int)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.add("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfloatn=(float)Math.rint((float)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75longn=(long)Math.rint((String)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75if(SimpleRegression.class.isAssignableFrom("-")){protectedintn=0;SimpleRegression.class.getSimpleName();}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;intn=(int)Math.rint("[AssertionFailedError]");
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;intn=(int)Math.rint("[AssertionFailedError]"+Integer.toHexString(Integer.toHexString(NumberFormat.UTF8));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;intn=(int)Math.rint("[AssertionFailedError]"+Integer.toString(Integer.toString(NUMBER_VALUE));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;intn=(int)Math.rint("[AssertionFailedError]"+Integer.toHexString(Integer.toHexString(NUMBER_VALUE));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=1;intn=(int)Math.rint("[AssertionFailedError]"+Integer.toHexString(Integer.toHexString(NumberFormat.ERROR));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=1;privateintn=(double)Math.random();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=(char)Math.floor((char)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatebyten=0;SimpleRegression.checkState(n<0);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1;privateintn=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.error(it.next(),it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatedoublen=Double.NEGATIVE_INFINITY;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SecurityContext.checkState(null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75safely(SecurityContext.checkState(null));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatecharn=0;SimpleRegression.this.reportError("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=1L;longn=2;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=null.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.this.reportError(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicfinalintn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.report("Unexpectederror:"+asPath());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75SimpleRegression.this.report("Unexpectederror:"+this);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiclongn=0;AssertionFailedError.warning("Unexpectederror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatecharn=(char)Math.rint("AssertionFailedError".length());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(int)Math.rint((Integer)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privateintn=0;for(AssertionFailedError<Integer>it=null.intValue();it.hasNext();){AssertionFailedError.error(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=1;for(AssertionFailedError<Integer>it=this.intValue();it.hasNext();){AssertionFailedError.warning(it.next());}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=(char)Math.rint("Error",1);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefloatn=1;privateintn=(float)Math.log(newInteger(1));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefloatn=1;privateintn=(float)Math.log(newInteger(0));
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75floatn=(float)Math.rint((long)n).intValue();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalintn=0;SimpleRegression.this.regression=newSimpleRegression();
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatefinalintn=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75shortn=(long)Math.rint((Integer)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;for(AssertionFailedErrorn=0;n<2;n++){AssertionFailedError.warning("Unexpectederror:"+n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;for(AssertionFailedErrorn=0;n<3;n++){AssertionFailedError.warning("Unexpectederror:"+n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;for(AssertionFailedErrorn=0;n<2;n++){AssertionFailedError.warning("Unexpectedexception:"+n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicintn=2;for(AssertionFailedErrorexception:newAssertionFailedError.class.getName()){returnexception;}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotecteddoublen=0;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75finalprotectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75}elseif(StringUtils.isEmpty("error")){protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75}elseif(StringUtils.isEmpty("identifier")){protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n);}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75}elseif(StringUtils.isEmpty("identifier")){protectedintn=0;SimpleRegression.this.regression=newSimpleRegression(n);}else{thrownewIllegalArgumentException("");}
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75doublen=(double)Math.rint((short)n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publiccharn=(char)Math.rint(this.regression);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75publicstaticfinalintn=0;AssertionFailedError.warning("Missingerror:"+n);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.checkState(this.regression!=null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75AssertionFailedError.checkState(this.regression==null);
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75protectedintn=0;SimpleRegression.this.reportError("Unexpectederror:"+getMessage());
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=2;longn=1L;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75privatelongn=0;privateintn=1;
projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java75n=0;SimpleRegressionregression=newSimpleRegression(n,1);
