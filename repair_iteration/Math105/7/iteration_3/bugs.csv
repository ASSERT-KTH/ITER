bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
2	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
3	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
4	[BUG]  [BUGGY]  private  int  n  =  1;  private  long  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  long  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  long  n  =  0;	  private    long    n    =    1;    private    long    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	81	None	replace
5	[BUG]  [BUGGY]  final  int  n  =  1;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  1;	  protected    int    n    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	44	None	replace
6	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  Integer)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  Integer)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  Integer)n).doubleValue();	  float    n    =(float)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	116	None	replace
7	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Integer)n).longValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Integer)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Integer)n).longValue();	  float    n    =(float)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	116	None	replace
8	[BUG]  [BUGGY]  long  n  =(float)Math.rint((  Integer)n).longValue();  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(float)Math.rint((  Integer)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(float)Math.rint((  Integer)n).longValue();	  float    n    =(float)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	116	None	replace
9	[BUG]  [BUGGY]  null  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	null  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SimpleRegression.class);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SimpleRegression.class);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SimpleRegression.class);	  private    int    n    =    0;    private    int    n    =    0;    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	20	None	replace
14	[BUG]  [BUGGY]  final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
15	[BUG]  [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
16	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Unexpected  error: "  +  identifier);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
17	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(NUMBER_INDEX);  [CE]  cannot  find  symbol  NUMBER_INDEX  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(NUMBER_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(NUMBER_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_INDEX	23	None	replace
18	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SimpleRegression.NUMBER_INDEX);  [CE]  cannot  find  symbol  NUMBER_INDEX  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SimpleRegression.NUMBER_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SimpleRegression.NUMBER_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_INDEX	23	None	replace
19	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SHORT_INDEX);  [CE]  cannot  find  symbol  SHORT_INDEX  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SHORT_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SHORT_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  SHORT_INDEX	23	None	replace
20	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  float)n  +  1);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  float)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  float)n  +  1);	  float    n    =(float)Math.rint((    float)n);    	non-compiled	[CE]  self-reference  in  initializer	40	None	replace
21	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  double)n);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  double)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  double)n);	  float    n    =(float)Math.rint((    float)n);    	non-compiled	[CE]  self-reference  in  initializer	40	None	replace
22	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  float)n,  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  float)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  float)n,  1);	  float    n    =(float)Math.rint((    float)n);    	non-compiled	[CE]  self-reference  in  initializer	40	None	replace
23	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n  +  1);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n  +  1);	  double    n    =(double)Math.rint((    double)n);    	non-compiled	[CE]  self-reference  in  initializer	87	None	replace
24	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  double)n);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  double)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  double)n);	  double    n    =(double)Math.rint((    double)n);    	non-compiled	[CE]  self-reference  in  initializer	87	None	replace
25	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n,  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n,  1);	  double    n    =(double)Math.rint((    double)n);    	non-compiled	[CE]  self-reference  in  initializer	87	None	replace
26	[BUG]  [BUGGY]  public  int  n  =  1;  SimpleRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  SimpleRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    SimpleRegression.class.getSimpleName());	  	non-compiled	[CE]  <identifier>  expected	1	None	add
27	[BUG]  [BUGGY]  public  int  n  =  1;  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    SimpleRegression.class.getSimpleName();	  	non-compiled	[CE]  <identifier>  expected	1	None	add
28	[BUG]  [BUGGY]  public  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    SimpleRegression.this.regression  =  new  SimpleRegression();	  	non-compiled	[CE]  <identifier>  expected	1	None	add
29	[BUG]  [BUGGY]  public  int  n  =  1;  int  n  =  getErrorCount();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    int  n  =  getErrorCount();	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	1	None	add
30	[BUG]  [BUGGY]  public  int  n  =  1;  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    int  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	1	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	long  n  =  1;	  private    long    n    =    1;    long    n    =    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
32	[BUG]  [BUGGY]  long  n  =  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =  1;	  private    long    n    =    1;    long    n    =    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
33	[BUG]  [BUGGY]  private  int  n  =  1;  long  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  long  n  =  1;	  private    long    n    =    1;    long    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	67	None	replace
34	[BUG]  [BUGGY]  public  double  n  =  0L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  double  n  =  0L;	  public    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
35	[BUG]  [BUGGY]  public  float  n  =  0L;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  float  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  float  n  =  0L;	  public    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	public  long  n  =  0L;	  public    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
37	[BUG]  [BUGGY]  public  long  n  =  0L;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  long  n  =  0L;	  public    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
38	[BUG]  [BUGGY]  public  byte  n  =  0L;  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0L;	  public    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
39	[BUG]  [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression();  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	non-compiled	[CE]  cannot  find  symbol  n	120	None	replace
40	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
41	[BUG]  [BUGGY]  n  =  0L;  SimpleRegression  regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0L;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0L;  SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
42	[BUG]  [BUGGY]  private  long  n  =  1L;  private  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  private  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    private  long  n  =  1L;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
43	[BUG]  [BUGGY]  private  long  n  =  1L;  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    long  n  =  1L;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
44	[BUG]  [BUGGY]  private  long  n  =  1L;  long  n  =(long)Math.rint(0L);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  long  n  =(long)Math.rint(0L);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    long  n  =(long)Math.rint(0L);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
45	[BUG]  [BUGGY]  private  long  n  =  1L;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    SimpleRegression.this.regression  =  new  SimpleRegression();	  	non-compiled	[CE]  <identifier>  expected	51	None	add
46	[BUG]  [BUGGY]  private  long  n  =  1L;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    SimpleRegression.this.regression  =  new  SimpleRegression(n);	  	non-compiled	[CE]  <identifier>  expected	51	None	add
47	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint( "Error ",  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint( "Error ",  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint( "Error ",  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(   "Error   ",    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	109	None	replace
48	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint( "SimpleRegression ",  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint( "SimpleRegression ",  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint( "SimpleRegression ",  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(   "Error   ",    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	109	None	replace
49	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  2);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  +  2);	  SimpleRegression.this.regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
50	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  /  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  /  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
51	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  long)n  +  1);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  long)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  long)n  +  1);	  double    n    =(double)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
52	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  int)n);  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  int)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  int)n);	  double    n    =(double)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
53	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  long)n,  1);  [CE]  self-reference  in  initializer  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  long)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  long)n,  1);	  double    n    =(double)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
54	[BUG]  [BUGGY]  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
55	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
56	[BUG]  [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
57	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n  +  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n  +  1);	  long    n    =(long)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	61	None	replace
58	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n,  1);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n,  1);	  long    n    =(long)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	61	None	replace
59	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression.class.getSimpleName());	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
60	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression.class.getSimpleName());	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
61	[BUG]  [BUGGY]  safeName  =  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeName  =  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	safeName  =  SimpleRegression.class.getSimpleName();	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
62	[BUG]  [BUGGY]  SecurityRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.class.getSimpleName());	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
63	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance(regression);    	non-compiled	[CE]  self-reference  in  initializer	111	None	replace
64	[BUG]  [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  SimpleRegression.getInstance(regression);	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance(regression);    	non-compiled	[CE]  self-reference  in  initializer	111	None	replace
65	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance(regression);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
66	[BUG]  [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  this,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  this,  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportError( "Unexpected  error: "  +  this,  n);	  SimpleRegression.this.reportError(   "Unexpected    error:   "    +    this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
67	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.reportError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
68	[BUG]  [BUGGY]  SecurityRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
69	[BUG]  [BUGGY]  AssertionFailedError  n  =  new  AssertionFailedError( "Unexpected  error: "  +  getMessage());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  n  =  new  AssertionFailedError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError  n  =  new  AssertionFailedError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
70	[BUG]  [BUGGY]  public  int  n  =  1L;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1L;	  public    int    n    =    1;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
71	[BUG]  [BUGGY]  SecurityContext.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityContext.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityContext.checkState(n  <  0);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
72	[BUG]  [BUGGY]  SecurityContext.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityContext.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityContext.checkState(n  <  =  0);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
73	[BUG]  [BUGGY]  SecurityContext.checkState(n  <  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityContext.checkState(n  <  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityContext.checkState(n  <  1);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
74	[BUG]  [BUGGY]  SecurityContext.checkState(n  >=  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityContext.checkState(n  >=  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityContext.checkState(n  >=  0);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
75	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n).longValue();  [CE]  self-reference  in  initializer  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n).longValue();	  double    n    =(double)Math.rint((    double)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	55	None	replace
76	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n).doubleValue();	  double    n    =(double)Math.rint((    double)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	55	None	replace
77	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  double)n).intValue();  [CE]  self-reference  in  initializer  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  double)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  double)n).intValue();	  double    n    =(double)Math.rint((    double)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	55	None	replace
78	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  2);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  2);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
79	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1,  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
80	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  1L);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  1L);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  1L);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
81	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  long)n  +  1);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  long)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  long)n  +  1);	  float    n    =(float)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	75	None	replace
82	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  int)n);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  int)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  int)n);	  float    n    =(float)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	75	None	replace
83	[BUG]  [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
84	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    SimpleRegression.class.getSimpleName();	  	non-compiled	[CE]  <identifier>  expected	43	None	add
85	[BUG]  [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  n  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  n  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    final  AssertionFailedError  <  String>  n  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
86	[BUG]  [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    final  AssertionFailedError  <  String>  error  =  new  AssertionFailedError(n);	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
87	[BUG]  [BUGGY]  SimpleRegression.this.addWarning( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.addWarning( "Unexpected  error: "  +  getMessage());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.addWarning( "Unexpected  error: "  +  getMessage());	  SimpleRegression.this.addError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
88	[BUG]  [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.addError( "Unexpected  error: "  +  n);	  SimpleRegression.this.addError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
89	[BUG]  [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  this.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  this.getMessage());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.addError( "Unexpected  error: "  +  this.getMessage());	  SimpleRegression.this.addError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
90	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n).doubleValue();	  long    n    =(long)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	32	None	replace
91	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n).initializer();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n).initializer();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n).initializer();	  long    n    =(long)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	32	None	replace
92	[BUG]  [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.rint(0,  n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.rint(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  private  int  n  =(int)Math.rint(0,  n);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	39	None	replace
93	[BUG]  [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.rint(0,  n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.rint(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  1;  private  int  n  =(double)Math.rint(0,  n);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	39	None	replace
94	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint(0,  n);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint(0,  n);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  self-reference  in  initializer	39	None	replace
95	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Long)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Long)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Long)n).doubleValue();	  int    n    =(int)Math.rint((    Integer)n).doubleValue();    	non-compiled	[CE]  self-reference  in  initializer	86	None	replace
96	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Integer)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Integer)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Integer)n).doubleValue();	  int    n    =(int)Math.rint((    Integer)n).doubleValue();    	non-compiled	[CE]  self-reference  in  initializer	86	None	replace
97	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
98	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
99	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
100	[BUG]  [BUGGY]  private  int  n  =  2;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  2;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  2;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
101	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint((  int)n);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
102	[BUG]  [BUGGY]  public  final  int  n  =(int)Math.rint((  int)n);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =(int)Math.rint((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =(int)Math.rint((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
103	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint((  int)n  +  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint((  int)n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint((  int)n  +  1);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
104	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint((  int)n,  1);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint((  int)n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint((  int)n,  1);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
105	[BUG]  [BUGGY]  public  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression();	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
106	[BUG]  [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(false);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(false);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(false);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  private  int  n  =  1;  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  long  n  =  1L;	  private    long    n    =    1;    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	68	None	replace
108	[BUG]  [BUGGY]  private  int  n  =  1;  int  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  int  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  int  n  =  1L;	  private    long    n    =    1;    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	68	None	replace
109	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstanceUTC();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
110	[BUG]  [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstanceUTC();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
111	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	112	None	replace
112	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  long)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  long)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  long)n).doubleValue();	  long    n    =(long)Math.rint((    long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	53	None	replace
113	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  long)n).initialValue();  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  long)n).initialValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  long)n).initialValue();	  long    n    =(long)Math.rint((    long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	53	None	replace
114	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  long)n).initializer();  [CE]  self-reference  in  initializer  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  long)n).initializer();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  long)n).initializer();	  long    n    =(long)Math.rint((    long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	53	None	replace
115	[BUG]  [BUGGY]  int  n  =(int)Math.rint((  long)n).intValue();  [CE]  self-reference  in  initializer  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =(int)Math.rint((  long)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =(int)Math.rint((  long)n).intValue();	  long    n    =(long)Math.rint((    long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	53	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(null);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.regression  =  new  SimpleRegression(null);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.error( "Unexpected  error: "  +  n);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError.warning( "SimpleRegression.regression ",  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "SimpleRegression.regression ",  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "SimpleRegression.regression ",  n);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
119	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.checkState(n  <  =  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
120	[BUG]  [BUGGY]  SecurityRegression.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.checkState(n  <  =  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
121	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  <  =  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  <  =  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.checkState(n  <  =  1);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
122	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  ==  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  ==  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.checkState(n  ==  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
123	[BUG]  [BUGGY]  private  double  n  =  1L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  1L;	  private    short    n    =    1L;    	non-compiled	[CE]  possible  loss  of  precision	94	None	replace
124	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  long)n  +  1);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  long)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  long)n  +  1);	  long    n    =(long)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	6	None	replace
125	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  long)n,  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  long)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  long)n,  1);	  long    n    =(long)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	6	None	replace
126	[BUG]  [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.report( "Unexpected  error: "  +  n);	  SimpleRegression.this.report(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
127	[BUG]  [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  this.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  this.getMessage());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.report( "Unexpected  error: "  +  this.getMessage());	  SimpleRegression.this.report(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
128	[BUG]  [BUGGY]  SimpleRegression.this.log( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.log( "Unexpected  error: "  +  getMessage());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.log( "Unexpected  error: "  +  getMessage());	  SimpleRegression.this.report(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
129	[BUG]  [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
130	[BUG]  [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(null));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(null));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(null));	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
131	[BUG]  [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(n));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.regression  =  new  SimpleRegression(String.valueOf(n));	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
132	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n).intValue()  +  1;  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n).intValue()  +  1;  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n).intValue()  +  1;	  long    n    =(long)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
133	[BUG]  [BUGGY]  public  int  n  =(int)Math.floor((  int)n);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.floor((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.floor((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.floor((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	108	None	replace
134	[BUG]  [BUGGY]  public  int  n  =(int)Math.log((  int)n);  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.log((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.log((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.floor((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	108	None	replace
135	[BUG]  [BUGGY]  public  final  int  n  =(int)Math.floor((  int)n);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =(int)Math.floor((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =(int)Math.floor((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.floor((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	108	None	replace
136	[BUG]  [BUGGY]  public  int  n  =(int)Math.ceil((  int)n);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.ceil((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.ceil((  int)n);	  public    int    n    =    0;    int    n    =(int)Math.floor((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	108	None	replace
137	[BUG]  [BUGGY]  double  n  =  0L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =  0L;	  protected    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
138	[BUG]  [BUGGY]  protected  double  n  =  0L;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  double  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  double  n  =  0L;	  protected    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	protected  long  n  =  0L;	  protected    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	80	1	replace
140	[BUG]  [BUGGY]  protected  long  n  =  0L;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  long  n  =  0L;	  protected    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	80	1	replace
141	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
142	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
143	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
144	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.getNumber().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.getNumber().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.getNumber().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
145	[BUG]  [BUGGY]  public  double  n  =  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  double  n  =  1;	  public    double    n    =    0;    	non-compiled	[CE]  possible  loss  of  precision	104	None	replace
146	[BUG]  [BUGGY]  public  double  n  =  2;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  double  n  =  2;	  public    double    n    =    0;    	non-compiled	[CE]  possible  loss  of  precision	104	None	replace
147	[BUG]  [BUGGY]  private  int  n  =  1;  private  long  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  long  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  long  n  =  2;	  private    long    n    =    1;    private    long    n    =    2;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	69	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  long  n  =  2;	  private    long    n    =    1;    private    long    n    =    2;    	compilable	  [FE]  AssertionFailedError  	69	7	replace
149	[BUG]  [BUGGY]  private  long  n  =  2;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  2;	  private    long    n    =    1;    private    long    n    =    2;    	compilable	  [FE]  AssertionFailedError  	69	7	replace
150	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint(this.regression);  [CE]  cannot  find  symbol  regression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint(this.regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint(this.regression);	  public    int    n    =    0;    int    n    =(int)Math.rint(this.regression);    	non-compiled	[CE]  cannot  find  symbol  regression	28	None	replace
151	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint(this.regression,  0);  [CE]  cannot  find  symbol  regression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint(this.regression,  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint(this.regression,  0);	  public    int    n    =    0;    int    n    =(int)Math.rint(this.regression);    	non-compiled	[CE]  cannot  find  symbol  regression	28	None	replace
152	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint(this.regression,  1);  [CE]  cannot  find  symbol  regression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint(this.regression,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint(this.regression,  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(this.regression);    	non-compiled	[CE]  cannot  find  symbol  regression	28	None	replace
153	[BUG]  [BUGGY]  private  int  n  =  1;  private  long  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  long  n  =  1;	  private    long    n    =    1;    private    long    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	65	None	replace
154	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression.class.getSimpleName());	  	non-compiled	[CE]  <identifier>  expected	105	None	add
155	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression.class.getSimpleName();	  	non-compiled	[CE]  <identifier>  expected	105	None	add
156	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression.this.regression  =  new  SimpleRegression();	  	non-compiled	[CE]  <identifier>  expected	105	None	add
157	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  null;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression.this.regression  =  null;	  	non-compiled	[CE]  <identifier>  expected	105	None	add
158	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression.this.regression  =  new  SimpleRegression(n);	  	non-compiled	[CE]  <identifier>  expected	105	None	add
159	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.reportError( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.reportError( "Missing  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
160	[BUG]  [BUGGY]  SecurityRegression.this.reportError( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.this.reportError( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.this.reportError( "Missing  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
161	[BUG]  [BUGGY]  SecurityRegression.this.reportError( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.this.reportError( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.this.reportError( "Missing  error: "  +  identifier);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
162	[BUG]  [BUGGY]  SimpleRegression.this.reportError( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportError( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportError( "Missing  error: "  +  identifier);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
163	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
164	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
165	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
166	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression.class.getSimpleName();	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
167	[BUG]  [BUGGY]  if(!SimpleRegression.class.isAssignableFrom(identifier))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(!SimpleRegression.class.isAssignableFrom(identifier))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(!SimpleRegression.class.isAssignableFrom(identifier))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
168	[BUG]  [BUGGY]  if(!SimpleRegression.class.isAssignableFrom(name))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(!SimpleRegression.class.isAssignableFrom(name))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(!SimpleRegression.class.isAssignableFrom(name))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
169	[BUG]  [BUGGY]  if(!SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(!SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(!SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
170	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null?    0    :    SimpleRegression.this.n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
171	[BUG]  [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.n  =(SimpleRegression!=  null?  0  :  SimpleRegression.this.n);	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null?    0    :    SimpleRegression.this.n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
172	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null?  0  :  SimpleRegression.this.n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null?  0  :  SimpleRegression.this.n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null?  0  :  SimpleRegression.this.n);	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null?    0    :    SimpleRegression.this.n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(new  Integer(0));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  int  n  =(int)Math.log(new  Integer(0));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	compilable	  [FE]  AssertionFailedError  	38	8	replace
174	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(new  Integer(0));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(new  Integer(0));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(new  Integer(0));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	compilable	  [FE]  AssertionFailedError  	38	8	replace
175	[BUG]  [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.log(new  Integer(0));  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.log(new  Integer(0));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  1;  private  int  n  =(double)Math.log(new  Integer(0));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	38	None	replace
176	[BUG]  [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.log(new  Integer(0));  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.log(new  Integer(0));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  private  int  n  =(int)Math.log(new  Integer(0));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	38	None	replace
177	[BUG]  [BUGGY]  private  int  n  =  0;  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  int  n  =  0;	  private    int    n    =    1;    int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	84	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	int  n  =  0;	  private    int    n    =    1;    int    n    =    1;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
179	[BUG]  [BUGGY]  int  n  =  0;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =  0;	  private    int    n    =    1;    int    n    =    1;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
180	[BUG]  [BUGGY]  private  int  n  =  0;  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  int  n  =  1;	  private    int    n    =    1;    int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	84	None	replace
181	[BUG]  [BUGGY]  private  int  n  =  1;  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  int  n  =  0;	  private    int    n    =    1;    int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	84	None	replace
182	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Long)n  +  1);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Long)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Long)n  +  1);	  long    n    =(long)Math.rint((    Long)n);    	non-compiled	[CE]  self-reference  in  initializer	62	None	replace
183	[BUG]  [BUGGY]  int  n  =(int)Math.rint((  Long)n);  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =(int)Math.rint((  Long)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =(int)Math.rint((  Long)n);	  long    n    =(long)Math.rint((    Long)n);    	non-compiled	[CE]  self-reference  in  initializer	62	None	replace
184	[BUG]  [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
185	[BUG]  [BUGGY]  int  n  =(int)Math.rint((  Long)n).longValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =(int)Math.rint((  Long)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =(int)Math.rint((  Long)n).longValue();	  long    n    =(long)Math.rint((    Long)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	33	None	replace
186	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression    ==    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
187	[BUG]  [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression    ==    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
188	[BUG]  [BUGGY]  SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression    ==    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
189	[BUG]  [BUGGY]  n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =(SimpleRegression  ==  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression    ==    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
190	[BUG]  [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
191	[BUG]  [BUGGY]  public  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
192	[BUG]  [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(numbers);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(numbers);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(numbers);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
193	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.next());    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
194	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.next());    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
195	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
196	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	122	None	replace
197	[BUG]  [BUGGY]  AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
198	[BUG]  [BUGGY]  AssertionFailedError  {  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  {  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError  {  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
199	[BUG]  [BUGGY]  AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	public  int  n  =(int)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	107	1	replace
201	[BUG]  [BUGGY]  public  int  n  =(int)Math.random();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	107	1	replace
202	[BUG]  [BUGGY]  public  long  n  =  0;  int  n  =(long)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  n  =  0;  int  n  =(long)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  long  n  =  0;  int  n  =(long)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	107	None	replace
203	[BUG]  [BUGGY]  public  double  n  =  0;  int  n  =(double)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  n  =  0;  int  n  =(double)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  double  n  =  0;  int  n  =(double)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	107	None	replace
204	[BUG]  [BUGGY]  final  int  n  =  Math.max(0,  n);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  Math.max(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  Math.max(0,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  self-reference  in  initializer	119	None	replace
205	[BUG]  [BUGGY]  n  =  Math.max(0,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  Math.max(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  Math.max(0,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
206	[BUG]  [BUGGY]  final  int  n  =  Math.max(0,  protected);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  Math.max(0,  protected);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  Math.max(0,  protected);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
207	[BUG]  [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    [timeout]    	non-compiled	[CE]  <identifier>  expected	76	None	replace
208	[BUG]  [BUGGY]  final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    [timeout]    	non-compiled	[CE]  <identifier>  expected	76	None	replace
209	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
210	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ".length());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  int  n  =(int)Math.rint( "AssertionFailedError ".length());	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	compilable	  [FE]  AssertionFailedError  	22	5	replace
212	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ".length());  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ".length());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint( "AssertionFailedError ".length());	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	compilable	  [FE]  AssertionFailedError  	22	5	replace
213	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ").length();  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ").length();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint( "AssertionFailedError ").length();	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
214	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ");  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "AssertionFailedError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint( "AssertionFailedError ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	22	None	replace
215	[BUG]  [BUGGY]  public  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
216	[BUG]  [BUGGY]  AssertionFailedError.error( "Unexpected  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Unexpected  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.error( "Unexpected  error: "  +  identifier);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
217	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  name);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
218	[BUG]  [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  n);	  SimpleRegression.this.reportError(   "Unexpected    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
219	[BUG]  [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  name);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  name);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportWarning( "Unexpected  error: "  +  name);	  SimpleRegression.this.reportError(   "Unexpected    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
220	[BUG]  [BUGGY]  final  protected  int  n  =  1;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  1;	  final    protected    int    n    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	45	None	replace
221	[BUG]  [BUGGY]  final  protected  int  n  =  2;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  2;	  final    protected    int    n    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	45	None	replace
222	[BUG]  [BUGGY]  final  protected  int  n  =  0L;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0L;	  final    protected    int    n    =    0;    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
223	[BUG]  [BUGGY]  private  float  n  =  1L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  float  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  float  n  =  1L;	  private    int    n    =    1L;    	non-compiled	[CE]  possible  loss  of  precision	64	None	replace
224	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
225	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =  0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
226	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =  2;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
227	[BUG]  [BUGGY]  public  int  n  =  2;  SimpleRegression.this.regression  =  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  SimpleRegression.this.regression  =  null;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    SimpleRegression.this.regression  =  null;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
228	[BUG]  [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportWarning( "Unexpected  error: "  +  n);	  SimpleRegression.this.reportWarning(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
229	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
230	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
231	[BUG]  [BUGGY]  final  int  n  =  0L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0L;	  final    int    n    =    0;    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
232	[BUG]  [BUGGY]  final  int  n  =  2;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  2;	  final    int    n    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	46	None	replace
233	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
234	[BUG]  [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
235	[BUG]  [BUGGY]  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
236	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  *  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  *  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
237	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  *  2);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  *  2);	  SimpleRegression.this.regression    =    new    SimpleRegression(n    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  private  int  n  =  0;  private  short  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  private  short  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  private  short  n  =  0;	  private    short    n    =    0;    private    short    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	10	None	replace
239	[BUG]  [BUGGY]  private  int  n  =  2;  private  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  private  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    private  int  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
240	[BUG]  [BUGGY]  private  int  n  =  2;  private  int  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  private  int  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    private  int  n  =  2;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
241	[BUG]  [BUGGY]  private  int  n  =  2;  private  int  n  =  3;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  private  int  n  =  3;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    private  int  n  =  3;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
242	[BUG]  [BUGGY]  private  int  n  =  2;  private  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  private  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    private  int  n  =  0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
243	[BUG]  [BUGGY]  private  int  n  =  2;  private  int  n  =  4;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  private  int  n  =  4;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    private  int  n  =  4;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
244	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Double)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Double)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Double)n).doubleValue();	  double    n    =(double)Math.rint((    Double)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	117	None	replace
245	[BUG]  [BUGGY]  long  n  =(double)Math.rint((  Double)n).longValue();  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(double)Math.rint((  Double)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(double)Math.rint((  Double)n).longValue();	  double    n    =(double)Math.rint((    Double)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	117	None	replace
246	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Double)n).longValue();  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Double)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Double)n).longValue();	  double    n    =(double)Math.rint((    Double)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	117	None	replace
247	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
248	[BUG]  [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstance();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
249	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
250	[BUG]  [BUGGY]  safeRegression  =  SimpleRegression.getInstance();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeRegression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	safeRegression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
251	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Integer)n).intValue()  +  1;  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Integer)n).intValue()  +  1;  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Integer)n).intValue()  +  1;	  double    n    =(double)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	103	None	replace
252	[BUG]  [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
253	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Missing  error: "  +  identifier);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
254	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  name);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
255	[BUG]  [BUGGY]  AssertionFailedError.error( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.error( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
256	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	118	None	replace
257	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
258	[BUG]  [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(null);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(null);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  new  SimpleRegression(null);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	118	None	replace
259	[BUG]  [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(false);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(false);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  new  SimpleRegression(false);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	118	None	replace
260	[BUG]  [BUGGY]  private  static  final  int  n  =  0;  private  int  n  =(int)Math.rint( "AssertionFailedError ");  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  n  =  0;  private  int  n  =(int)Math.rint( "AssertionFailedError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  static  final  int  n  =  0;  private  int  n  =(int)Math.rint( "AssertionFailedError ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ");    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	19	None	replace
261	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint( "SimpleRegressionError ");  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "SimpleRegressionError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint( "SimpleRegressionError ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ");    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	19	None	replace
262	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Missing  error: "  +  name);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
263	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  this);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Missing  error: "  +  this);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
264	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
265	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
266	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  0.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
267	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
268	[BUG]  [BUGGY]  SecurityRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
269	[BUG]  [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportError( "Unexpected  error: "  +  identifier);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
270	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(this.type,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(this.type,  n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(this.type,  n);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this.type);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
271	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(this.type);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(this.type);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(this.type);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this.type);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
272	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type,  0);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type,  0);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this.type);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
273	[BUG]  [BUGGY]  private  double  n  =  2;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  2;	  private    double    n    =    1;    	non-compiled	[CE]  possible  loss  of  precision	115	None	replace
274	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  Integer)n  +  1);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  Integer)n  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  Integer)n  +  1);	  float    n    =(float)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	88	None	replace
275	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  Integer)n,  1);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  Integer)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  Integer)n,  1);	  float    n    =(float)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	88	None	replace
276	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Integer)n);  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Integer)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Integer)n);	  float    n    =(float)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	88	None	replace
277	[BUG]  [BUGGY]  securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    short    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
278	[BUG]  [BUGGY]  SecurityRegression.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityRegression.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityRegression.checkState(n  <  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
279	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.checkState(n  <  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
280	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  >=  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  >=  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.checkState(n  >=  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
281	[BUG]  [BUGGY]  public  int  n  =  1;  AssertionFailedError.error(n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  1;  AssertionFailedError.error(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  1;  AssertionFailedError.error(n);	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
282	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error(name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error(name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error(name);	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
283	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ",  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ",  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ",  n);	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
284	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.warning( "msg.unchecked.identifier.error ");	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
285	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  float)n).doubleValue();  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  float)n).doubleValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  float)n).doubleValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
286	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  double)n).intValue();  [CE]  self-reference  in  initializer  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  double)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  double)n).intValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
287	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  int)n).intValue();  [CE]  self-reference  in  initializer  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  int)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  int)n).intValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
288	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  float)n).intValue();  [CE]  self-reference  in  initializer  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  float)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  float)n).intValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
289	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	121	None	replace
290	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
291	[BUG]  [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression  regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  cannot  find  symbol  n	121	None	replace
292	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(N  +  1);  [CE]  cannot  find  symbol  N  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(N  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(N  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  cannot  find  symbol  N	121	None	replace
293	[BUG]  [BUGGY]  AssertionFailedError.error( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.error( "Missing  error: "  +  getMessage());	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
294	[BUG]  [BUGGY]  safeAssertionFailedError( "Missing  error: "  +  getMessage());  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAssertionFailedError( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	safeAssertionFailedError( "Missing  error: "  +  getMessage());	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
295	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  getClass());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error: "  +  getClass());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Missing  error: "  +  getClass());	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
296	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
297	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
298	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
299	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  3);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  3);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
300	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  0L);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  0L);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  0L);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
301	[BUG]  [BUGGY]  private  double  n  =  0L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  0L;	  private    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  long  n  =  0L;	  private    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	29	1	replace
303	[BUG]  [BUGGY]  private  long  n  =  0L;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0L;	  private    int    n    =    0L;    	compilable	  [FE]  AssertionFailedError  	29	1	replace
304	[BUG]  [BUGGY]  private  float  n  =  0L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  float  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  float  n  =  0L;	  private    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  3;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	public  int  n  =  3;	  public    int    n    =    2;    	compilable	  [FE]  AssertionFailedError  	4	7	replace
306	[BUG]  [BUGGY]  public  int  n  =  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  3;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  3;	  public    int    n    =    2;    	compilable	  [FE]  AssertionFailedError  	4	7	replace
307	[BUG]  [BUGGY]  public  int  n  =  getErrorCount();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
308	[BUG]  [BUGGY]  int  n  =  getErrorCount();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
309	[BUG]  [BUGGY]  int  n  =(int)Math.rint((  Long)n).intValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  int  n  =(int)Math.rint((  Long)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	int  n  =(int)Math.rint((  Long)n).intValue();	  long    n    =(long)Math.rint((    Long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	15	None	replace
310	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Long)n).initialValue();  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Long)n).initialValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Long)n).initialValue();	  long    n    =(long)Math.rint((    Long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	15	None	replace
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  int  n  =(int)Math.random();	  private    int    n    =    1;    private    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	83	1	replace
312	[BUG]  [BUGGY]  private  int  n  =(int)Math.random();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.random();	  private    int    n    =    1;    private    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	83	1	replace
313	[BUG]  [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  private  int  n  =(int)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  private  int  n  =(int)Math.random();	  private    int    n    =    1;    private    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	83	None	replace
314	[BUG]  [BUGGY]  private  int  n  =  1;  private  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  long  n  =  1L;	  private    long    n    =    1;    private    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	66	None	replace
315	[BUG]  [BUGGY]  private  short  n  =  1;  private  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  short  n  =  1;  private  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  short  n  =  1;  private  long  n  =  1L;	  private    long    n    =    1;    private    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	66	None	replace
316	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  null);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  null);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
317	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  false);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  false);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
318	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this,  0);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  this,  0);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
319	[BUG]  [BUGGY]  long  n  =(float)Math.rint((  Integer)n).intValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(float)Math.rint((  Integer)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(float)Math.rint((  Integer)n).intValue();	  float    n    =(float)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	82	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  3;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  int  n  =  3;	  private    int    n    =    2;    	compilable	  [FE]  AssertionFailedError  	31	7	replace
321	[BUG]  [BUGGY]  private  int  n  =  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  3;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  3;	  private    int    n    =    2;    	compilable	  [FE]  AssertionFailedError  	31	7	replace
322	[BUG]  [BUGGY]  securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	securedShort  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    short    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
323	[BUG]  [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  1;  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
324	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  as.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
325	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.next());    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
326	[BUG]  [BUGGY]  protected  float  n  =  0L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  protected  float  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  float  n  =  0L;	  protected    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
327	[BUG]  [BUGGY]  protected  int  n  =  2;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    AssertionFailedError.error( "Unexpected  error: "  +  n);	  	non-compiled	[CE]  <identifier>  expected	105	None	add
328	[BUG]  [BUGGY]  protected  int  n  =  2;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    AssertionFailedError.warning( "Unexpected  error: "  +  n);	  	non-compiled	[CE]  <identifier>  expected	105	None	add
329	[BUG]  [BUGGY]  protected  int  n  =  2;  AssertionFailedError.error( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  AssertionFailedError.error( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    AssertionFailedError.error( "Unexpected  error: "  +  getMessage());	  	non-compiled	[CE]  <identifier>  expected	105	None	add
330	[BUG]  [BUGGY]  protected  int  n  =  2;  AssertionFailedError.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  AssertionFailedError.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    AssertionFailedError.checkState(n  <  =  0);	  	non-compiled	[CE]  <identifier>  expected	105	None	add
331	[BUG]  [BUGGY]  private  int  n  =  1;  private  int  n  =(int)Math.log(new  Integer(1));  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  int  n  =(int)Math.log(new  Integer(1));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  int  n  =(int)Math.log(new  Integer(1));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	38	None	replace
332	[BUG]  [BUGGY]  public  float  n  =  0;  float  n  =(float)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  float  n  =  0;  float  n  =(float)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  float  n  =  0;  float  n  =(float)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	107	None	replace
333	[BUG]  [BUGGY]  public  float  n  =  0;  int  n  =(float)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  float  n  =  0;  int  n  =(float)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  float  n  =  0;  int  n  =(float)Math.random();	  public    int    n    =    0;    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	107	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.random()  +  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	public  int  n  =(int)Math.random()  +  1;	  public    int    n    =    0;    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	107	5	replace
335	[BUG]  [BUGGY]  public  int  n  =(int)Math.random()  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.random()  +  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.random()  +  1;	  public    int    n    =    0;    int    n    =(int)Math.random();    	compilable	  [FE]  AssertionFailedError  	107	5	replace
336	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
337	[BUG]  [BUGGY]  private  short  n  =  1;  private  long  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  short  n  =  1;  private  long  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  short  n  =  1;  private  long  n  =  2;	  private    long    n    =    1;    private    long    n    =    2;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	69	None	replace
338	[BUG]  [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
339	[BUG]  [BUGGY]  secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
340	[BUG]  [BUGGY]  private  long  n  =  0;  long  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  long  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  long  n  =  0;	  private    long    n    =    1;    long    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	67	None	replace
341	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
342	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unable  to  parse  identifier: "  +  name);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SecuritySystem.err.println( "Unable  to  parse  identifier: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecuritySystem.err.println( "Unable  to  parse  identifier: "  +  name);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
343	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unable  to  parse: "  +  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SecuritySystem.err.println( "Unable  to  parse: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecuritySystem.err.println( "Unable  to  parse: "  +  name);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
344	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
345	[BUG]  [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
346	[BUG]  [BUGGY]  public  char  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
347	[BUG]  [BUGGY]  private  static  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  static  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
348	[BUG]  [BUGGY]  public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
349	[BUG]  [BUGGY]  private  static  final  int  n  =(int)Math.rint( "AssertionFailedError ");  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  n  =(int)Math.rint( "AssertionFailedError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  static  final  int  n  =(int)Math.rint( "AssertionFailedError ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ");    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	19	None	replace
350	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  long  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
351	[BUG]  [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
352	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	public  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
353	[BUG]  [BUGGY]  public  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [FE]  StackOverflowError  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	113	9	replace
354	[BUG]  [BUGGY]  public  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
355	[BUG]  [BUGGY]  public  int  n  =  1;  int  n  =(int)Math.rint((  int)n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  int  n  =(int)Math.rint((  int)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    int  n  =(int)Math.rint((  int)n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	1	None	add
356	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
357	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression();	  private    short    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
358	[BUG]  [BUGGY]  short  n  =(int)Math.rint((  long)n);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(int)Math.rint((  long)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(int)Math.rint((  long)n);	  short    n    =(short)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	7	None	replace
359	[BUG]  [BUGGY]  private  long  n  =  0;  private  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  private  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  private  int  n  =  0;	  private    int    n    =    0;    private    int    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	20	None	replace
360	[BUG]  [BUGGY]  private  int  n  =(int)SimpleRegression.size();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)SimpleRegression.size();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)SimpleRegression.size();	  private    int    n    =    0;    private    int    n    =    0;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
361	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName());  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName());	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
362	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  int)n).intValue();  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  int)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  int)n).intValue();	  long    n    =(long)Math.rint((    long)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	53	None	replace
363	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(NUMBER_INDEX  +  1);  [CE]  cannot  find  symbol  NUMBER_INDEX  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(NUMBER_INDEX  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(NUMBER_INDEX  +  1);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_INDEX	23	None	replace
364	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SimpleRegressionFailedError.class);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SimpleRegressionFailedError.class);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SimpleRegressionFailedError.class);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
365	[BUG]  [BUGGY]  private  long  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  SimpleRegression.this.n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
366	[BUG]  [BUGGY]  short  n  =(long)Math.rint((  Integer)n).intValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(long)Math.rint((  Integer)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(long)Math.rint((  Integer)n).intValue();	  long    n    =(long)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
367	[BUG]  [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance(regression);    	non-compiled	[CE]  self-reference  in  initializer	111	None	replace
368	[BUG]  [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance(regression);	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance(regression);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
369	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	121	None	replace
370	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	121	None	replace
371	[BUG]  [BUGGY]  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  2);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  2);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n  +  2);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n    +    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	121	None	replace
372	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ");  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =(int)Math.rint( "AssertionFailedError ");	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
373	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ".length());  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ".length());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =(int)Math.rint( "AssertionFailedError ".length());	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
374	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ",  1);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ",  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =(int)Math.rint( "AssertionFailedError ",  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
375	[BUG]  [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ")+  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  int  n  =(int)Math.rint( "AssertionFailedError ")+  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    int  n  =(int)Math.rint( "AssertionFailedError ")+  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	3	None	add
376	[BUG]  [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
377	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  AssertionFailedError.warning( "Missing  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
378	[BUG]  [BUGGY]  secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	secured  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
379	[BUG]  [BUGGY]  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  identifier);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
380	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(simpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.n  =(simpleRegression  ==  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.n  =(simpleRegression  ==  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression    ==    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
381	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
382	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  -  1L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n  -  1L);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n  -  1L);	  SimpleRegression.this.regression    =    new    SimpleRegression(n    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
383	[BUG]  [BUGGY]  private  byte  n  =  0;  private  short  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  private  short  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  private  short  n  =  0;	  private    short    n    =    0;    private    short    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	10	None	replace
384	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  int)n).intValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  int)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  int)n).intValue();	  double    n    =(double)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	103	None	replace
385	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  Long)n).longValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  Long)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  Long)n).longValue();	  double    n    =(double)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	103	None	replace
386	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
387	[BUG]  [BUGGY]  short  n  =(int)Math.rint((  Integer)n).longValue();  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(int)Math.rint((  Integer)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(int)Math.rint((  Integer)n).longValue();	  short    n    =(short)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	34	None	replace
388	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
389	[BUG]  [BUGGY]  secured  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  secured  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	secured  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    short    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
390	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  +  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  +  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
391	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  -  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  this  -  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
392	[BUG]  [BUGGY]  private  short  n  =  1;  private  long  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  short  n  =  1;  private  long  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  short  n  =  1;  private  long  n  =  0;	  private    long    n    =    1;    private    long    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	81	None	replace
393	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  Arrays.asList(new  AssertionFailedError.class));  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  Arrays.asList(new  AssertionFailedError.class));  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  Arrays.asList(new  AssertionFailedError.class));  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
394	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
395	[BUG]  [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	112	None	replace
396	[BUG]  [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstanceUTC();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstanceUTC();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
397	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SecurityContext.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SecurityContext.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SecurityContext.checkState(n  <  0);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
398	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
399	[BUG]  [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n  +  1);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
400	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
401	[BUG]  [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(-1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(-1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(-1);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
402	[BUG]  [BUGGY]  private  int  n  =  2;  int  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  2;  int  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  2;  int  n  =  2;	  private    int    n    =    1;    int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	84	None	replace
403	[BUG]  [BUGGY]  private  final  int  n  =  0;  SimpleRegression.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  SimpleRegression.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  SimpleRegression.checkState(n  <  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
404	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  int)n);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  int)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  int)n);	  long    n    =(long)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	6	None	replace
405	[BUG]  [BUGGY]  private  final  int  n  =  0;  SimpleRegression.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  SimpleRegression.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  SimpleRegression.checkState(n  <  =  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
406	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	118	None	replace
407	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	118	None	replace
408	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
409	[BUG]  [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
410	[BUG]  [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  getClass());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.addError( "Unexpected  error: "  +  getClass());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.addError( "Unexpected  error: "  +  getClass());	  SimpleRegression.this.addError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
411	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n  -  1);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n  -  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n  -  1);	  double    n    =(double)Math.rint((    double)n);    	non-compiled	[CE]  self-reference  in  initializer	87	None	replace
412	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint(0,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint(0,  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint(0,  0);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	39	None	replace
413	[BUG]  [BUGGY]  private  int  n  =  1;  private  int  n  =(int)Math.rint(0,  n  +  1);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  private  int  n  =(int)Math.rint(0,  n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  private  int  n  =(int)Math.rint(0,  n  +  1);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	39	None	replace
414	[BUG]  [BUGGY]  private  double  n  =  1;  private  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  1;  private  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  1;  private  int  n  =  0;	  private    int    n    =    1;    private    int    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	36	None	replace
415	[BUG]  [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	Private  int  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
416	[BUG]  [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  SimpleRegression  regression  =  SimpleRegression.getInstance();	  private    short    n    =    0;    SimpleRegression    regression    =    SimpleRegression.getInstance();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
417	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    AssertionFailedError.error( "Unexpected  error: "  +  n);	  	non-compiled	[CE]  <identifier>  expected	43	None	add
418	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    AssertionFailedError.warning( "Unexpected  error: "  +  n);	  	non-compiled	[CE]  <identifier>  expected	43	None	add
419	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    AssertionFailedError.checkState(n  <  =  0);	  	non-compiled	[CE]  <identifier>  expected	43	None	add
420	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    AssertionFailedError.error( "Unexpected  error: "  +  getMessage());	  	non-compiled	[CE]  <identifier>  expected	43	None	add
421	[BUG]  [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  AssertionFailedError.error(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    AssertionFailedError.error(n);	  	non-compiled	[CE]  <identifier>  expected	43	None	add
422	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	122	None	replace
423	[BUG]  [BUGGY]  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  2);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	122	None	replace
424	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  constructor  SimpleRegression  in  class  SimpleRegression  cannot  be  applied  to  given  types;	122	None	replace
425	[BUG]  [BUGGY]  public  char  n  =(char)Math.rint((  char)n);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =(char)Math.rint((  char)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =(char)Math.rint((  char)n);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
426	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  String)n).longValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  String)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  String)n).longValue();	  long    n    =(long)Math.rint((    Long)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	33	None	replace
427	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  long)n,  1);  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  long)n,  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  long)n,  1);	  float    n    =(float)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	75	None	replace
428	[BUG]  [BUGGY]  public  char  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
429	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
430	[BUG]  [BUGGY]  public  byte  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
431	[BUG]  [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
432	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
433	[BUG]  [BUGGY]  public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
434	[BUG]  [BUGGY]  public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
435	[BUG]  [BUGGY]  private  long  n  =  1L;  private  long  n  =  2L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  private  long  n  =  2L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    private  long  n  =  2L;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
436	[BUG]  [BUGGY]  private  long  n  =  1L;  long  n  =  2L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  long  n  =  2L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    long  n  =  2L;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
437	[BUG]  [BUGGY]  private  long  n  =  1L;  long  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    long  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
438	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  Integer)n).initialValue();  [CE]  self-reference  in  initializer  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  Integer)n).initialValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  Integer)n).initialValue();	  long    n    =(long)Math.rint((    Integer)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	32	None	replace
439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L  +  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  long  n  =  1L  +  1L;	  private    long    n    =    1L;    	compilable	  [FE]  AssertionFailedError  	52	7	replace
440	[BUG]  [BUGGY]  private  long  n  =  1L  +  1L;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L  +  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  1L  +  1L;	  private    long    n    =    1L;    	compilable	  [FE]  AssertionFailedError  	52	7	replace
441	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  double)n).floatValue();  [CE]  self-reference  in  initializer  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  double)n).floatValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  double)n).floatValue();	  double    n    =(double)Math.rint((    double)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	55	None	replace
442	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint(this.regression  +  1);  [CE]  cannot  find  symbol  regression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint(this.regression  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint(this.regression  +  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(this.regression);    	non-compiled	[CE]  cannot  find  symbol  regression	28	None	replace
443	[BUG]  [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  expected);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  expected);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportError( "Unexpected  error: "  +  name,  expected);	  SimpleRegression.this.reportError(   "Unexpected    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
444	[BUG]  [BUGGY]  public  final  int  n  =(int)Math.rint( "Error ",  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =(int)Math.rint( "Error ",  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =(int)Math.rint( "Error ",  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(   "Error   ",    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	109	None	replace
445	[BUG]  [BUGGY]  public  int  n  =(int)Math.rint( "Error ",  2);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =(int)Math.rint( "Error ",  2);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =(int)Math.rint( "Error ",  2);	  public    int    n    =    0;    int    n    =(int)Math.rint(   "Error   ",    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	109	None	replace
446	[BUG]  [BUGGY]  private  int  n  =  2;  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  int  n  =  2;  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    int    n    =    2;    int  n  =  1;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	30	None	add
447	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
448	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  n.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
449	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
450	[BUG]  [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  byte  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
451	[BUG]  [BUGGY]  public  char  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
452	[BUG]  [BUGGY]  public  final  int  n  =  0;  int  n  =  getErrorCount();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  int  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	25	None	replace
453	[BUG]  [BUGGY]  public  long  n  =  0;  int  n  =  getErrorCount();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  n  =  0;  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  long  n  =  0;  int  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	25	None	replace
454	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  float)n).longValue();  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  float)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  float)n).longValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
455	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.this.reportError( "Missing  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
456	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  identifier);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
457	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  name);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
458	[BUG]  [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
459	[BUG]  [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  1;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
460	[BUG]  [BUGGY]  public  char  n  =  0;  AssertionFailedError.error( " ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  AssertionFailedError.error( " ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  AssertionFailedError.error( " ");	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
461	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( " ")  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( " ")  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error( " ")	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
462	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  name);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  name);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  name);	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
463	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	120	None	replace
464	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	120	9	replace
465	[BUG]  [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression();  [FE]  StackOverflowError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  SimpleRegression  regression  =  new  SimpleRegression();	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	compilable	  [FE]  StackOverflowError  	120	9	replace
466	[BUG]  [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type  -  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.regression  =  new  SimpleRegression(n,  this.type  -  1);	  SimpleRegression.this.regression    =    new    SimpleRegression(n,    this.type);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
467	[BUG]  [BUGGY]  final  protected  int  n  =  0;  n  =  Math.max(0,  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  n  =  Math.max(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  n  =  Math.max(0,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
468	[BUG]  [BUGGY]  protected  int  n  =  1;  n  =  Math.max(0,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  n  =  Math.max(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  n  =  Math.max(0,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
469	[BUG]  [BUGGY]  protected  int  n  =  Math.min(identifiers.length,  0);  [CE]  cannot  find  symbol  identifiers  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  Math.min(identifiers.length,  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  Math.min(identifiers.length,  0);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  cannot  find  symbol  identifiers	119	None	replace
470	[BUG]  [BUGGY]  protected  int  n  =  Math.min(identifierCount,  1);  [CE]  cannot  find  symbol  identifierCount  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  Math.min(identifierCount,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  Math.min(identifierCount,  1);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  cannot  find  symbol  identifierCount	119	None	replace
471	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  float)n  -  1);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  float)n  -  1);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  float)n  -  1);	  float    n    =(float)Math.rint((    float)n);    	non-compiled	[CE]  self-reference  in  initializer	40	None	replace
472	[BUG]  [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n);  }	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
473	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.warning( "Unexpected  error: "  +  n);	  protected    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
474	[BUG]  [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.reportWarning( "Unexpected  error: "  +  this);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.reportWarning( "Unexpected  error: "  +  this);	  SimpleRegression.this.reportWarning(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
475	[BUG]  [BUGGY]  private  byte  n  =  0;  SimpleRegression.checkState(n  <  =  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  SimpleRegression.checkState(n  <  =  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  SimpleRegression.checkState(n  <  =  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
476	[BUG]  [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  >  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  SimpleRegression.checkState(n  >  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  SimpleRegression.checkState(n  >  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    =    0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
477	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.getMessage());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
478	[BUG]  [BUGGY]  final  protected  int  n  =  Math.max(0,  n);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  Math.max(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  Math.max(0,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  self-reference  in  initializer	119	None	replace
479	[BUG]  [BUGGY]  protected  int  n  =  1;  n  =  Math.max(1,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  1;  n  =  Math.max(1,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  1;  n  =  Math.max(1,  n);	  protected    int    n    =    0;    n    =    Math.max(0,    n);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
480	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( " ")  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( " ")  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.error( " ")	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
481	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
482	[BUG]  [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  AssertionFailedError.error( "Unknown  error: ");	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
483	[BUG]  [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  asPath());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  asPath());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  int  n  =  0;  AssertionFailedError.error( "Unknown  error: "  +  asPath());	  public    int    n    =    0;    AssertionFailedError.error(n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
484	[BUG]  [BUGGY]  private  char  n  =  0L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  char  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  char  n  =  0L;	  private    int    n    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
485	[BUG]  [BUGGY]  final  protected  double  n  =  0L;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  double  n  =  0L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  double  n  =  0L;	  protected    int    n    =    0L;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	80	None	replace
486	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  n  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  n  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  n  =  assertionFailedError.iterator();  it.hasNext();)  {  AssertionFailedError.error(next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
487	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.next().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.next().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.next().iterator();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
488	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  n  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(n.next());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  n  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(n.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  n  =  n.iterator();  it.hasNext();)  {  AssertionFailedError.error(n.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.iterator();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
489	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  new  AssertionFailedError();  it.hasNext();)  {  int  n  =  it.next();  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    new    AssertionFailedError();    it.hasNext();)    {    int    n    =    it.next();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
490	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
491	[BUG]  [BUGGY]  public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  getMessage());	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
492	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
493	[BUG]  [BUGGY]  public  char  n  =  getErrorCount();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
494	[BUG]  [BUGGY]  public  double  n  =  0;  int  n  =  getErrorCount();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  n  =  0;  int  n  =  getErrorCount();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  double  n  =  0;  int  n  =  getErrorCount();	  public    int    n    =    0;    int    n    =    getErrorCount();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	25	None	replace
495	[BUG]  [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  <?>)  {  if(n  >  0)  {  return  n;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  <?>)  {  if(n  >  0)  {  return  n;  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    for(AssertionFailedError  <?>)  {  if(n  >  0)  {  return  n;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
496	[BUG]  [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  if(exception.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  if(exception.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  if(exception.length()  >  0)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
497	[BUG]  [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
498	[BUG]  [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedErrorRegressions())  {  if(n  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  for(AssertionFailedError  exception  :  new  AssertionFailedErrorRegressions())  {  if(n  <  =  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    for(AssertionFailedError  exception  :  new  AssertionFailedErrorRegressions())  {  if(n  <  =  0)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
499	[BUG]  [BUGGY]  public  int  n  =  1;  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  1;  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    1;    int  n  =  0;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	1	None	add
500	[BUG]  [BUGGY]  double  n  =(double)Math.log((  Double)n).longValue();  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.log((  Double)n).longValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.log((  Double)n).longValue();	  double    n    =(double)Math.rint((    Double)n).longValue();    	non-compiled	[CE]  self-reference  in  initializer	117	None	replace
501	[BUG]  [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(n  >  0)  {  protected  int  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression();  }	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
502	[BUG]  [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
503	[BUG]  [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  SimpleRegression.this.reportError( "Missing  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
504	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	105	None	add
505	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  getMessage());  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: "  +  getMessage());	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	105	None	add
506	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n  +  1);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n  +  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n  +  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	105	None	add
507	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError ",  n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	105	None	add
508	[BUG]  [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: ");  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  2;  SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    2;    SimpleRegression  regression  =  new  SimpleRegression( "AssertionFailedError: ");	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	105	None	add
509	[BUG]  [BUGGY]  private  long  n  =  1;  private  int  n  =(long)Math.rint(0,  n);  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  1;  private  int  n  =(long)Math.rint(0,  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  1;  private  int  n  =(long)Math.rint(0,  n);	  private    int    n    =    1;    private    int    n    =(int)Math.rint(0,    n);    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	39	None	replace
510	[BUG]  [BUGGY]  private  short  n  =  1;  private  long  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  short  n  =  1;  private  long  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  short  n  =  1;  private  long  n  =  1;	  private    long    n    =    1;    private    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	66	None	replace
511	[BUG]  [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(n  >  0)  {  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(n  >  0)  {  protected  int  n  =  0;  AssertionFailedError.error( "Unexpected  error: "  +  n);  }	  protected    int    n    =    0;    AssertionFailedError.error(   "Unexpected    error:   "    +    n);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
512	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
513	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  Integer)n,  2);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  Integer)n,  2);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  Integer)n,  2);	  float    n    =(float)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	88	None	replace
514	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SEMI_INDEX);  [CE]  cannot  find  symbol  SEMI_INDEX  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SEMI_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SEMI_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  SEMI_INDEX	23	None	replace
515	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SIMULTIPLE_INDEX);  [CE]  cannot  find  symbol  SIMULTIPLE_INDEX  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SIMULTIPLE_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SIMULTIPLE_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  SIMULTIPLE_INDEX	23	None	replace
516	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SYNTHETIC_NUMBER_INDEX);  [CE]  cannot  find  symbol  SYNTHETIC_NUMBER_INDEX  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SYNTHETIC_NUMBER_INDEX);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SYNTHETIC_NUMBER_INDEX);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC_NUMBER_INDEX	23	None	replace
517	[BUG]  [BUGGY]  private  int  n  =(int)Math.log(SYNTHETIC);  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.log(SYNTHETIC);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.log(SYNTHETIC);	  private    int    n    =    0;    private    int    n    =(int)Math.log(NUMBER_INDEX);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	23	None	replace
518	[BUG]  [BUGGY]  n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =(SimpleRegression!=  null)?  0  :  SimpleRegression.this.n;	  private    short    n    =    0;    SimpleRegression.this.n    =(SimpleRegression!=    null)?    0    :    SimpleRegression.this.n;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
519	[BUG]  [BUGGY]  private  char  n  =(char)Math.rint( "AssertionFailedError ");  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  char  n  =(char)Math.rint( "AssertionFailedError ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  char  n  =(char)Math.rint( "AssertionFailedError ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ");    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	19	None	replace
520	[BUG]  [BUGGY]  private  int  n  =(int)Math.rint( "SimpleRegression ");  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =(int)Math.rint( "SimpleRegression ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =(int)Math.rint( "SimpleRegression ");	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ");    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	19	None	replace
521	[BUG]  [BUGGY]  short  n  =(int)Math.rint((  Integer)n);  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(int)Math.rint((  Integer)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(int)Math.rint((  Integer)n);	  short    n    =(short)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	63	None	replace
522	[BUG]  [BUGGY]  SimpleRegression.this.add( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.add( "Unexpected  error: "  +  getMessage());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.add( "Unexpected  error: "  +  getMessage());	  SimpleRegression.this.addError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
523	[BUG]  [BUGGY]  public  float  n  =(float)Math.rint((  float)n);  [CE]  self-reference  in  initializer  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  float  n  =(float)Math.rint((  float)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  float  n  =(float)Math.rint((  float)n);	  public    int    n    =    0;    int    n    =(int)Math.rint((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	27	None	replace
524	[BUG]  [BUGGY]  long  n  =(long)Math.rint((  String)n);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  n  =(long)Math.rint((  String)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	long  n  =(long)Math.rint((  String)n);	  long    n    =(long)Math.rint((    Long)n);    	non-compiled	[CE]  self-reference  in  initializer	62	None	replace
525	[BUG]  [BUGGY]  if(SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	if(SimpleRegression.class.isAssignableFrom( "- "))  {  protected  int  n  =  0;  SimpleRegression.class.getSimpleName();  }	  protected    int    n    =    0;    SimpleRegression.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
526	[BUG]  [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] ");  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] ");  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    int  n  =(int)Math.rint( "[AssertionFailedError] ");	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	43	None	add
527	[BUG]  [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.UTF8));  [CE]  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.UTF8));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.UTF8));	  	non-compiled	[CE]  	43	None	add
528	[BUG]  [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toString(Integer.toString(NUMBER_VALUE));  [CE]  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toString(Integer.toString(NUMBER_VALUE));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toString(Integer.toString(NUMBER_VALUE));	  	non-compiled	[CE]  	43	None	add
529	[BUG]  [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NUMBER_VALUE));  [CE]  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NUMBER_VALUE));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NUMBER_VALUE));	  	non-compiled	[CE]  	43	None	add
530	[BUG]  [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.ERROR));  [CE]  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  protected  int  n  =  1;  int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.ERROR));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected    int    n    =    1;    int  n  =(int)Math.rint( "[AssertionFailedError] "  +  Integer.toHexString(Integer.toHexString(NumberFormat.ERROR));	  	non-compiled	[CE]  	43	None	add
531	[BUG]  [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.random();  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  1;  private  int  n  =(double)Math.random();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  1;  private  int  n  =(double)Math.random();	  private    int    n    =    1;    private    int    n    =(int)Math.random();    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	83	None	replace
532	[BUG]  [BUGGY]  public  char  n  =(char)Math.floor((  char)n);  [CE]  self-reference  in  initializer  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =(char)Math.floor((  char)n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =(char)Math.floor((  char)n);	  public    int    n    =    0;    int    n    =(int)Math.floor((    int)n);    	non-compiled	[CE]  self-reference  in  initializer	108	None	replace
533	[BUG]  [BUGGY]  private  byte  n  =  0;  SimpleRegression.checkState(n  <  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  byte  n  =  0;  SimpleRegression.checkState(n  <  0);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  byte  n  =  0;  SimpleRegression.checkState(n  <  0);	  private    int    n    =    0;    SimpleRegression.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
534	[BUG]  [BUGGY]  private  long  n  =  1;  private  int  n  =  0;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  1;  private  int  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  1;  private  int  n  =  0;	  private    int    n    =    1;    private    int    n    =    0;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	36	None	replace
535	[BUG]  [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next(),  it.next());  }	  private    int    n    =    0;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next(),    it.next());    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
536	[BUG]  [BUGGY]  private  double  n  =  Double.NEGATIVE_INFINITY;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  double  n  =  Double.NEGATIVE_INFINITY;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  double  n  =  Double.NEGATIVE_INFINITY;	  private    double    n    =    0;    	non-compiled	[CE]  possible  loss  of  precision	97	None	replace
537	[BUG]  [BUGGY]  SecurityContext.checkState(null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  SecurityContext.checkState(null);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SecurityContext.checkState(null);	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
538	[BUG]  [BUGGY]  safely(SecurityContext.checkState(null));  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safely(SecurityContext.checkState(null));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	safely(SecurityContext.checkState(null));	  protected    int    n    =    0;    SecurityContext.checkState(n    <    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
539	[BUG]  [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
540	[BUG]  [BUGGY]  private  char  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  char  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  char  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  n);	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
541	[BUG]  [BUGGY]  private  long  n  =  1L;  long  n  =  2;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  long  n  =  1L;  long  n  =  2;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private    long    n    =    1L;    long  n  =  2;	  	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	51	None	add
542	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
543	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.this.reportError(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.this.reportError(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
544	[BUG]  [BUGGY]  public  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
545	[BUG]  [BUGGY]  public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
546	[BUG]  [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  asPath());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  asPath());  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.report( "Unexpected  error: "  +  asPath());	  SimpleRegression.this.report(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
547	[BUG]  [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleRegression.this.report( "Unexpected  error: "  +  this);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	SimpleRegression.this.report( "Unexpected  error: "  +  this);	  SimpleRegression.this.report(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
548	[BUG]  [BUGGY]  public  long  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  long  n  =  0;  AssertionFailedError.warning( "Unexpected  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Unexpected    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  char  n  =(char)Math.rint( "AssertionFailedError ".length());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	add	private  char  n  =(char)Math.rint( "AssertionFailedError ".length());	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	compilable	  [FE]  AssertionFailedError  	22	5	replace
550	[BUG]  [BUGGY]  private  char  n  =(char)Math.rint( "AssertionFailedError ".length());  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  char  n  =(char)Math.rint( "AssertionFailedError ".length());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  char  n  =(char)Math.rint( "AssertionFailedError ".length());	  private    int    n    =    0;    private    int    n    =(int)Math.rint(   "AssertionFailedError   ".length());    	compilable	  [FE]  AssertionFailedError  	22	5	replace
551	[BUG]  [BUGGY]  short  n  =(int)Math.rint((  Integer)n).intValue();  [CE]  self-reference  in  initializer  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(int)Math.rint((  Integer)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(int)Math.rint((  Integer)n).intValue();	  short    n    =(short)Math.rint((    Integer)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	16	None	replace
552	[BUG]  [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  int  n  =  0;  for(AssertionFailedError  <  Integer>  it  =  null.intValue();  it.hasNext();)  {  AssertionFailedError.error(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.error(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
553	[BUG]  [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  1;  for(AssertionFailedError  <  Integer>  it  =  this.intValue();  it.hasNext();)  {  AssertionFailedError.warning(it.next());  }	  private    int    n    =    1;    for(AssertionFailedError    <    Integer>    it    =    n.intValue();    it.hasNext();)    {    AssertionFailedError.warning(it.next());    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
554	[BUG]  [BUGGY]  public  char  n  =(char)Math.rint( "Error ",  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =(char)Math.rint( "Error ",  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =(char)Math.rint( "Error ",  1);	  public    int    n    =    0;    int    n    =(int)Math.rint(   "Error   ",    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	109	None	replace
555	[BUG]  [BUGGY]  private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(1));  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(1));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(1));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	38	None	replace
556	[BUG]  [BUGGY]  private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(0));  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(0));  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  float  n  =  1;  private  int  n  =(float)Math.log(new  Integer(0));	  private    int    n    =    1;    private    int    n    =(int)Math.log(new    Integer(0));    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	38	None	replace
557	[BUG]  [BUGGY]  float  n  =(float)Math.rint((  long)n).intValue();  [CE]  self-reference  in  initializer  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  float  n  =(float)Math.rint((  long)n).intValue();  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	float  n  =(float)Math.rint((  long)n).intValue();	  float    n    =(float)Math.rint((    float)n).intValue();    	non-compiled	[CE]  self-reference  in  initializer	54	None	replace
558	[BUG]  [BUGGY]  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression();	  public    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
559	[BUG]  [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  final  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    int    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
560	[BUG]  [BUGGY]  short  n  =(long)Math.rint((  Integer)n);  [CE]  self-reference  in  initializer  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  short  n  =(long)Math.rint((  Integer)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	short  n  =(long)Math.rint((  Integer)n);	  long    n    =(long)Math.rint((    Integer)n);    	non-compiled	[CE]  self-reference  in  initializer	61	None	replace
561	[BUG]  [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
562	[BUG]  [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  3;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  3;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    for(AssertionFailedError  n  =  0;  n  <  3;  n++)  {  AssertionFailedError.warning( "Unexpected  error: "  +  n);  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
563	[BUG]  [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  exception: "  +  n);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  exception: "  +  n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    for(AssertionFailedError  n  =  0;  n  <  2;  n++)  {  AssertionFailedError.warning( "Unexpected  exception: "  +  n);  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
564	[BUG]  [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  int  n  =  2;  for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public    int    n    =    2;    for(AssertionFailedError  exception  :  new  AssertionFailedError.class.getName())  {  return  exception;  }	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
565	[BUG]  [BUGGY]  final  protected  double  n  =  0;  [CE]  cannot  assign  a  value  to  final  variable  n  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  double  n  =  0;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  double  n  =  0;	  final    protected    int    n    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  n	45	None	replace
566	[BUG]  [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	final  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
567	[BUG]  [BUGGY]  }  else  if(StringUtils.isEmpty( "error "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  }  else  if(StringUtils.isEmpty( "error "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	}  else  if(StringUtils.isEmpty( "error "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
568	[BUG]  [BUGGY]  }  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  }  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	}  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
569	[BUG]  [BUGGY]  }  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  }  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	}  else  if(StringUtils.isEmpty( "identifier "))  {  protected  int  n  =  0;  SimpleRegression.this.regression  =  new  SimpleRegression(n);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression(n);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
570	[BUG]  [BUGGY]  double  n  =(double)Math.rint((  short)n);  [CE]  self-reference  in  initializer  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  n  =(double)Math.rint((  short)n);  [BUGGY]      private  long  n  =  0;  [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	double  n  =(double)Math.rint((  short)n);	  double    n    =(double)Math.rint((    long)n);    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
571	[BUG]  [BUGGY]  public  char  n  =(char)Math.rint(this.regression);  [CE]  cannot  find  symbol  regression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  char  n  =(char)Math.rint(this.regression);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  char  n  =(char)Math.rint(this.regression);	  public    int    n    =    0;    int    n    =(int)Math.rint(this.regression);    	non-compiled	[CE]  cannot  find  symbol  regression	28	None	replace
572	[BUG]  [BUGGY]  public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	public  static  final  int  n  =  0;  AssertionFailedError.warning( "Missing  error: "  +  n);	  public    int    n    =    0;    AssertionFailedError.warning(   "Missing    error:   "    +    n);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
573	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.regression!=  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(this.regression!=  null);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.checkState(this.regression!=  null);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
574	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.regression  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(this.regression  ==  null);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	AssertionFailedError.checkState(this.regression  ==  null);	  protected    int    n    =    0;    SimpleRegression.this.regression    =    new    SimpleRegression();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
575	[BUG]  [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	protected  int  n  =  0;  SimpleRegression.this.reportError( "Unexpected  error: "  +  getMessage());	  private    short    n    =    0;    SimpleRegression.this.reportError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
576	[BUG]  [BUGGY]  private  long  n  =  2;  long  n  =  1L;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  2;  long  n  =  1L;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  2;  long  n  =  1L;	  private    long    n    =    1;    long    n    =    1L;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	68	None	replace
577	[BUG]  [BUGGY]  private  long  n  =  0;  private  int  n  =  1;  [CE]  variable  n  is  already  defined  in  class  SimpleRegression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  long  n  =  0;  private  int  n  =  1;  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	private  long  n  =  0;  private  int  n  =  1;	  private    int    n    =    0;    private    int    n    =    1;    	non-compiled	[CE]  variable  n  is  already  defined  in  class  SimpleRegression	21	None	replace
578	[BUG]  [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);  [BUGGY]        [CLASS]  SimpleRegression  [VARIABLES]  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	75	75	1	replace	n  =  0;  SimpleRegression  regression  =  new  SimpleRegression(n,  1);	  protected    int    n    =    0;    SimpleRegression    regression    =    new    SimpleRegression(n,    1);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
