bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  n  ==  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
2	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  n  ==  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  ==  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  ==  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
4	[BUG]  [BUGGY]  if(x  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  ==  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  ==  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0  ||  y  >  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  >  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	9	replace
6	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0  ||  y  >  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  >  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	9	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	  	if  (n  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.min(x,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.min(x,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
9	[BUG]  [BUGGY]    double  n  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.min(x,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.min(x,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
10	[BUG]  [BUGGY]    double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y));  [CE]  no  suitable  method  found  for  max(int,double,double)  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y));  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y));		non-compiled	[CE]  no  suitable  method  found  for  max(int,double,double)	22	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(x,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.max(x,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
12	[BUG]  [BUGGY]    double  n  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(x,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.max(x,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(0,  Math.min(x,  y));  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.max(0,  Math.min(x,  y));		compilable	  [FE]  AssertionFailedError  	22	8	add
14	[BUG]  [BUGGY]    double  n  =  Math.max(0,  Math.min(x,  y));  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(0,  Math.min(x,  y));  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.max(0,  Math.min(x,  y));		compilable	  [FE]  AssertionFailedError  	22	8	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.abs(x);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	22	8	add
16	[BUG]  [BUGGY]    double  n  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.abs(x);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	22	8	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(n  <  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(n  <  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	1	replace
18	[BUG]  [BUGGY]  if(n  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(n  <  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(n  <  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	1	replace
19	[BUG]  [BUGGY]    double  n  =  this.data.size();  [CE]  cannot  find  symbol  data  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  this.data.size();  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  this.data.size();		non-compiled	[CE]  cannot  find  symbol  data	22	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  getN();  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  getN();		compilable	  [FE]  AssertionFailedError  	22	9	add
21	[BUG]  [BUGGY]    double  n  =  getN();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  getN();  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  getN();		compilable	  [FE]  AssertionFailedError  	22	9	add
22	[BUG]  [BUGGY]    double  n  =  this.data.get(x);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  this.data.get(x);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  this.data.get(x);		non-compiled	[CE]  cannot  find  symbol  data	22	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
24	[BUG]  [BUGGY]  if(x  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  <  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	2	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  >  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  >  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	8	replace
26	[BUG]  [BUGGY]  if(x  >  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]  if(x  >  0)  {  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  >  0)  {	if  (n  ==  0)  {  	compilable	  [FE]  AssertionFailedError  	21	8	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(1,  x);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.max(1,  x);		compilable	  [FE]  AssertionFailedError  	22	8	add
28	[BUG]  [BUGGY]    double  n  =  Math.max(1,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.max(1,  x);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.max(1,  x);		compilable	  [FE]  AssertionFailedError  	22	8	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.min(1,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	    double  n  =  Math.min(1,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
30	[BUG]  [BUGGY]    double  n  =  Math.min(1,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  [BUGGY]    double  n  =  Math.min(1,  y);  [BUGGY]  if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	    double  n  =  Math.min(1,  y);		compilable	  [FE]  AssertionFailedError  	22	8	add
