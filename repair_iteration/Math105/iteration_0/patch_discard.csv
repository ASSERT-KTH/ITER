compilation error,60,add,[CE] illegal start of type,,  return sumX /(SingleDouble.MAX_VALUE);
compilation error,60,add,[CE] illegal start of type,,  return sumX /(SingleNode.MAX_VALUE);
compilation error,60,add,[CE] illegal start of type,,  return sumX /(SingleDouble.MAX_VALUE)* Math.MAX_VALUE;
compilation error,60,add,[CE] illegal start of type,,  return sumX /(Supported.EXPR_RESULT);
compilation error,60,add,[CE] illegal start of type,,  return sumX /(SingleDouble.MAX_VALUE)* Math.sqrt(0);
compilation error,69,add,[CE] variable sumYY is already defined in class SimpleRegression,,  private double sumYY = 0d;
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(double)sumYY;
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(Since)sumYY.doubleValue();
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(Supported.doubleValue() * Math.sqrt(sumYY));
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(Supported.doubleValue() * Math.PI);
compilation error,90,replace,[CE] illegal start of expression,} ,setSemiZero(false);
compilation error,90,replace,[CE] illegal start of expression,} ,setSemiZeroRegression(null);
compilation error,90,replace,[CE] illegal start of expression,} ,this.sumY = Double.NaN;
compilation error,90,replace,[CE] illegal start of expression,} ,setSemiZeroRegression(false);
compilation error,90,replace,[CE] illegal start of expression,} , 
compilation error,78,replace,[CE] cannot find symbol xbar,private double xbar = 0; , 
increase failing tests,72,replace, [FE] AssertionFailedError testCorr,private double sumXY = 0d; ,private double sumXY = 1d;
compilation error,72,replace,[CE] hexadecimal numbers must contain at least one hexadecimal digit,private double sumXY = 0d; ,private double sumXY = 0x;
compilation error,72,replace,[CE] cannot find symbol sumXY,private double sumXY = 0d; , 
compilation error,81,replace,[CE] cannot find symbol ybar,private double ybar = 0; , 
increase failing tests,60,replace, [FE] AssertionFailedError testSSENonNegative,private double sumX = 0d; ,private double sumX = 1d;
compilation error,60,replace,[CE] hexadecimal numbers must contain at least one hexadecimal digit,private double sumX = 0d; ,private double sumX = 0x;
compilation error,89,replace,[CE] cannot find symbol,super(); ,setSemiZero(false);
compilation error,89,replace,[CE] cannot find symbol,super(); ,setSemiZeroRegression(false);
compilation error,89,replace,[CE] cannot find symbol,super(); ,setSemiZeroElements(false);
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(SingleDouble.MAX_VALUE);
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(SingleDouble.parseDouble(0x));
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(SingleDouble.parseDouble(0d));
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(Supported.doubleValue() * Math.PI);
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(SingleDouble.parseDouble(sumXY));
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  private double ybar = getBarWidth();
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getBarWidth() / 2.0);
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  double ybar = getBarWidth() * Math.random();
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  double ybar = getBarWidth();
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getBarWidth());
increase failing tests,75,replace, [FE] AssertionFailedError testClear,private long n = 0; ,private int n = 1;
compilation error,75,replace,[CE] cannot find symbol n,private long n = 0; , 
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = 0d;
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.max(sumXX, sumXX);
compilation error,63,add,[CE] illegal start of type,,  return sumXX * Math.sqrt(sumXX);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.min(0, sumXX - 1);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.min(0, sumXX);
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private long n = Math.random();
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private long n = getShortValue();
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private long n = Math.sqrt("NaN");
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private long n = Math.sqrt("n");
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private long n = 1;
increase failing tests,66,replace, [FE] AssertionFailedError testSSENonNegative,private double sumY = 0d; ,private double sumY = 1d;
increase failing tests,66,replace, [FE] AssertionFailedError testSSENonNegative,private double sumY = 0d; ,private double sumY = 0d + 1;
compilation error,66,replace,[CE] cannot find symbol sumY,private double sumY = 0d; , 
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(null, null);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(null);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(null, false);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(null, true);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(0, 0, 0);
increase failing tests,63,replace, [FE] AssertionFailedError testCorr,private double sumXX = 0d; ,private double sumXX = 1d;
compilation error,63,replace,[CE] hexadecimal numbers must contain at least one hexadecimal digit,private double sumXX = 0d; ,private double sumXX = 0x;
compilation error,90,add,[CE] cannot find symbol,,  setSlope(getSlope());
compilation error,78,add,[CE] illegal start of type,,  return Double.valueOf(xbar);
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope().getWidth();
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope().getWidth() * Math.random();
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope();
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope() * Math.min(0, xbar);
compilation error,66,add,[CE] illegal start of type,,  return sumY /(double)sumY;
compilation error,66,add,[CE] variable sumY is already defined in class SimpleRegression,,  private double sumY = Math.min(1d, sumY);
compilation error,66,add,[CE] variable sumY is already defined in class SimpleRegression,,  private double sumY = Math.max(sumY, true);
compilation error,66,add,[CE] variable sumY is already defined in class SimpleRegression,,  private double sumY = Math.max(sumY, 0d);
increase failing tests,69,replace, [FE] AssertionFailedError testCorr,private double sumYY = 0d; ,private double sumYY = 1d;
increase failing tests,69,replace, [FE] AssertionFailedError testCorr,private double sumYY = 0d; ,private double sumYY = 0d + 1;
compilation error,89,replace,[CE] cannot reference n before supertype constructor has been called,super(); ,super(n - 1);
compilation error,89,replace,[CE] cannot reference n before supertype constructor has been called,super(); ,super(n - 2);
compilation error,89,replace,[CE] constructor Object in class Object cannot be applied to given types;,super(); ,super(0, 0);
compilation error,90,replace,[CE] illegal start of expression,} ,setSummaryIndex(sumYY);
compilation error,90,replace,[CE] illegal start of expression,} ,setSummaryIndex(sumMilliseconds());
compilation error,90,replace,[CE] illegal start of expression,} ,setSummaryIndex(sumMillis());
compilation error,90,replace,[CE] illegal start of expression,} ,setSlope(getRootNode());
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  private double ybar = getNegative().doubleValue();
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  private double ybar = getSlope();
compilation error,81,add,[CE] variable ybar is already defined in class SimpleRegression,,  private double ybar = getNegative();
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getResult());
compilation error,60,add,[CE] <identifier> expected,,  sumX += Math.sqrt(sumX /(double)NaN).doubleValue();
compilation error,60,add,[CE] <identifier> expected,,  sumX += Math.sqrt(sumX /(double)null);
compilation error,60,add,[CE] <identifier> expected,,  sumX += Math.sqrt(sumX /(double)NaN);
compilation error,60,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.max(sumX, sumY);
compilation error,60,add,[CE] <identifier> expected,,  sumX += Math.sqrt(sumX, sumX);
compilation error,75,replace,[CE] possible loss of precision,private long n = 0; ,private int n = 0L;
compilation error,89,add,[CE] cannot reference n before supertype constructor has been called,,  this(n, Double.POSITIVE_INFINITY);
compilation error,89,add,[CE] ';' expected,,  this(sumXX, sumYX, sumXX + 1));
compilation error,89,add,[CE] cannot reference sumXX before supertype constructor has been called,,  this(sumXX, sumYX, sumXX);
compilation error,89,add,[CE] ';' expected,,  this(n - 1));
compilation error,78,add,[CE] illegal start of type,,  return Math.sqrt(getResult());
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope() * Math.sqrt(getSlope());
compilation error,78,add,[CE] variable xbar is already defined in class SimpleRegression,,  private double xbar = getSlope() * Math.pow(1 - Math.sqrt(xbar));
compilation error,63,add,[CE] <identifier> expected,,  sumXX += Math.sqrt(sumXX);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.max(sumXX, sumXY);
compilation error,63,add,[CE] illegal start of type,,  return sumXX /(double)sumXX;
compilation error,66,add,[CE] <identifier> expected,,  sumY += Math.sqrt(sumY /(double)n.doubleValue());
compilation error,66,add,[CE] <identifier> expected,,  sumY += Math.sqrt(sumOf(null));
compilation error,66,add,[CE] <identifier> expected,,  sumY += Math.sqrt(sumOf(negative));
compilation error,66,add,[CE] <identifier> expected,,  sumY += Math.sqrt(sumY /(double)null);
compilation error,72,add,[CE] <identifier> expected,,  sumXY = Math.max(sumXY, sumXY);
compilation error,72,add,[CE] variable sumXY is already defined in class SimpleRegression,,  private double sumXY = Math.max(sumXY, sumXY);
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(double)sumXY;
compilation error,72,add,[CE] variable sumXY is already defined in class SimpleRegression,,  double sumXY = Math.max(sumXY, sumXY);
compilation error,72,add,[CE] illegal start of type,,  return sumXY /(double)sumOf(0);
compilation error,69,add,[CE] <identifier> expected,,  sumYY = Math.sqrt(sumYY);
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(double)sum();
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(double)sumOf(0);
compilation error,69,add,[CE] illegal start of type,,  return sumYY /(double)separator;
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private final long n = Math.sqrt(NumberInput.INSTANCE);
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private final long n = Math.sqrt(NumberInput.inHtml());
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private final long n = Math.sqrt(NumberInput.inRange());
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private final long n = Math.sqrt(getN());
compilation error,75,add,[CE] variable n is already defined in class SimpleRegression,,  private final long n = Math.sqrt(Negative.valueOf(n));
compilation error,90,add,[CE] cannot find symbol,,  setSummaryIndex(sumMillis(), sumXX);
compilation error,90,replace,[CE] illegal start of expression,} ,setNumberRegression(getSlope());
compilation error,90,replace,[CE] illegal start of expression,} ,setNumberOfLinks(1);
compilation error,90,replace,[CE] illegal start of expression,} ,setNumberOfLinks(getSlope());
compilation error,90,replace,[CE] illegal start of expression,} ,setNumberRegression(n);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.exp(-sumXX);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  double sumXX = Math.exp(-sumXX);
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  double sumXX = Math.max(sumXX, Math.sqrt(getSlope()));
compilation error,63,add,[CE] variable sumXX is already defined in class SimpleRegression,,  private double sumXX = Math.max(sumXX, Math.sqrt(getSlope()));
compilation error,63,add,[CE] illegal start of type,,  return Math.sqrt(sumXX / sumXX);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(0.0, 1.0);
compilation error,89,add,[CE] cannot reference n before supertype constructor has been called,,  this(n, 0.0);
compilation error,89,add,[CE] constructor SimpleRegression in class SimpleRegression cannot be applied to given types;,,  this(0.0, 0.0);
compilation error,89,add,[CE] cannot find symbol,,  setResult(n, false);
compilation error,89,add,[CE] cannot reference n before supertype constructor has been called,,  this(n - 1, false);
compilation error,66,add,[CE] variable sumY is already defined in class SimpleRegression,,  double sumY = Math.sqrt(getN());
compilation error,66,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.sqrt(getN());
compilation error,66,add,[CE] illegal start of type,,  return Math.sqrt(sumY /(double)Negative.valueOf(getSlope()));
compilation error,66,add,[CE] variable sumY is already defined in class SimpleRegression,,  private double sumY = Math.sqrt(getSquareErrorIndex() * Math.log(0, 2));
compilation error,66,add,[CE] illegal start of type,,  return Math.sqrt(sumY /(double)Negative.valueOf('S'));
compilation error,89,replace,[CE] no suitable constructor found for Integer(long),super(); ,checkSimpleRegression(new Integer(n));
compilation error,89,replace,[CE] cannot find symbol,super(); ,checkSimpleRegression();
compilation error,89,replace,[CE] no suitable constructor found for Integer(double),super(); ,checkSimpleRegression(new Integer(sumXX));
compilation error,69,add,[CE] illegal start of type,,  return Math.sqrt(sumYY /(double)Negative).doubleValue();
compilation error,69,add,[CE] illegal start of type,,  return Math.sqrt(sumYY /(double)Negative.valueOf(getSlope()));
compilation error,69,add,[CE] illegal start of type,,  return Math.sqrt(sumYY / getSlope());
compilation error,69,add,[CE] illegal start of type,,  return Math.sqrt(sumYY /(double)Negative).doubleValue() *(double)Negative.doubleValue();
compilation error,69,add,[CE] illegal start of type,,  return Math.sqrt(sumYY / getSquareErrorCount());
compilation error,60,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.sqrt(getN());
compilation error,60,add,[CE] illegal start of type,,  return Math.sqrt(sumX /(double)Negative).doubleValue();
compilation error,60,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.sqrt(getSquareErrorIndex() / sumX);
compilation error,60,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.sqrt(getSquareErrorIndex());
compilation error,60,add,[CE] variable sumX is already defined in class SimpleRegression,,  double sumX = Math.sqrt(getN() / sumX);
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getMean() / getSquareErrorIndex());
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getMean() / getNegative());
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getMean() / getSquareErrorIndex() * 2);
compilation error,81,add,[CE] illegal start of type,,  return Math.sqrt(getMean());
compilation error,90,add,[CE] cannot find symbol,,  setNumberOfLinks(getMean());
compilation error,78,add,[CE] illegal start of type,,  return Math.sqrt(Math.abs(xbar)| Math.abs(xbar)) * Math.abs(xbar - 1)* Math.abs(xbar - 1)* Math.abs(xbar - xbar));
compilation error,78,add,[CE] illegal start of type,,  return Math.sqrt(getResult() * Math.log(xbar)) / getNegative());
compilation error,78,add,[CE] illegal start of type,,  return Math.sqrt(Math.abs(xbar)| Math.abs(xbar));
compilation error,78,add,[CE] illegal start of type,,  return Math.sqrt(Math.abs(xbar)/ Math.abs(xbar));
compilation error,75,add,[CE] illegal start of type,,  return Math.sqrt(N - 1);
compilation error,75,add,[CE] illegal start of type,,  return Math.sqrt(n);
compilation error,75,add,[CE] illegal start of type,,  return Math.sqrt(n - 1);
compilation error,75,add,[CE] illegal start of type,,  return Math.sqrt(n - 1, false);
compilation error,75,add,[CE] illegal start of type,,  return Math.sqrt(variance);
compilation error,72,add,[CE] illegal start of type,,  return Math.sqrt(sumXY / sumXY);
compilation error,72,add,[CE] illegal start of type,,  return Math.sqrt(sumXY /(double)Negative).doubleValue();
compilation error,72,add,[CE] variable sumXY is already defined in class SimpleRegression,,  private double sumXY = Math.sqrt(getN());
compilation error,72,add,[CE] illegal start of type,,  return Math.sqrt(sumXY /(double)NaN);
compilation error,72,add,[CE] illegal start of type,,  return Math.sqrt(sumXY / sumX);
