bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +  1;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +  1;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
2	[BUG]  [BUGGY]  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +  1;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +  1;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  0;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  0;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
4	[BUG]  [BUGGY]  xbar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  0;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  n;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
6	[BUG]  [BUGGY]  xbar  =  n;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  n;  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n;	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	  	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
8	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	  	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	5	replace
9	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    addData(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	    addData(x,  y);		compilable	  [FE]  StackOverflowError  	24	9	add
10	[BUG]  [BUGGY]    addData(x,  y);  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    addData(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    addData(x,  y);		compilable	  [FE]  StackOverflowError  	24	9	add
11	[BUG]  [BUGGY]    double  x  =  x.doubleValue();  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  x  =  x.doubleValue();  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  x  =  x.doubleValue();		non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	24	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    x  =  Math.min(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	    x  =  Math.min(x,  y);		compilable	  [FE]  AssertionFailedError  	24	5	add
13	[BUG]  [BUGGY]    x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    x  =  Math.min(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    x  =  Math.min(x,  y);		compilable	  [FE]  AssertionFailedError  	24	5	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    x  =  Math.max(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	    x  =  Math.max(x,  y);		compilable	  [FE]  AssertionFailedError  	24	1	add
15	[BUG]  [BUGGY]    x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    x  =  Math.max(x,  y);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    x  =  Math.max(x,  y);		compilable	  [FE]  AssertionFailedError  	24	1	add
16	[BUG]  [BUGGY]    double  x  =  x.doubleValue()  +  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  x  =  x.doubleValue()  +  n;  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  x  =  x.doubleValue()  +  n;		non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	24	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	6	replace
18	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	6	replace
19	[BUG]  [BUGGY]    add(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    add(new  Double(x),  new  Double(y));  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    add(new  Double(x),  new  Double(y));		non-compiled	[CE]  cannot  find  symbol	24	None	add
20	[BUG]  [BUGGY]    add(new  Double(x));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    add(new  Double(x));  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    add(new  Double(x));		non-compiled	[CE]  cannot  find  symbol	24	None	add
21	[BUG]  [BUGGY]    add(new  Double(x),  new  double(y));  [CE]  '['  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    add(new  Double(x),  new  double(y));  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    add(new  Double(x),  new  double(y));		non-compiled	[CE]  '['  expected	24	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n);	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	1	replace
23	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n);	xbar  =  x;  	compilable	  [FE]  AssertionFailedError  	23	1	replace
24	[BUG]  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x));  [CE]  variable  n  might  not  have  been  initialized  [FE]    AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x));  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  n  =  Math.min(n,  Math.abs(x));		non-compiled	[CE]  variable  n  might  not  have  been  initialized	24	None	add
25	[BUG]  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x),  Math.abs(y));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]      AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x),  Math.abs(y));  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  n  =  Math.min(n,  Math.abs(x),  Math.abs(y));		non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	24	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  n  =  Math.abs(x);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	    double  n  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	24	1	add
27	[BUG]  [BUGGY]    double  n  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  n  =  Math.abs(x);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  n  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	24	1	add
28	[BUG]  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x)-  1);  [CE]  variable  n  might  not  have  been  initialized  [FE]          AssertionFailedError  [CONTEXT]  public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  [BUGGY]    double  n  =  Math.min(n,  Math.abs(x)-  1);  [BUGGY]  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	    double  n  =  Math.min(n,  Math.abs(x)-  1);		non-compiled	[CE]  variable  n  might  not  have  been  initialized	24	None	add
