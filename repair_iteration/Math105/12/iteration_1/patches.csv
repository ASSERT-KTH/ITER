bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    0;    xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
2	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  double  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    0;    double  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	3	5	add
4	[BUG]  [BUGGY]  xbar  =  0;  double  xbar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  double  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    double  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	3	5	add
5	[BUG]  [BUGGY]  xbar  =  0;  int  xbar  =  0;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  int  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    int  xbar  =  0;	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
6	[BUG]  [BUGGY]  xbar  =  0;  ||  xbar  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  ||  xbar  ==  0)  {  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    ||  xbar  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
7	[BUG]  [BUGGY]  xbar  =  0;  (xbar  =  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  (xbar  =  0);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    (xbar  =  0);	  	non-compiled	[CE]  not  a  statement	3	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(y);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
9	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(y);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.log(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.log(x);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
11	[BUG]  [BUGGY]  double  n  =  Math.log(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.log(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(x);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(x  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x  +  1);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
13	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(x  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  +  1);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	24	5	replace
15	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	24	5	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	24	5	replace
17	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	24	5	replace
18	[BUG]  [BUGGY]  double  n  =  Math.min(double,  Math.abs(x));  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(double,  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(double,  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x));    	non-compiled	[CE]  '.class'  expected	24	None	replace
19	[BUG]  [BUGGY]  double  n  =  Math.min(value,  Math.abs(x));  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(value,  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(value,  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  value	24	None	replace
20	[BUG]  [BUGGY]  remove(new  Double(x),  new  double(y));  [CE]  '['  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  remove(new  Double(x),  new  double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x),  new  double(y));	      add(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	21	None	replace
21	[BUG]  [BUGGY]  _add(new  Double(x),  new  double(y));  [CE]  '['  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  _add(new  Double(x),  new  double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x),  new  double(y));	      add(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	21	None	replace
22	[BUG]  [BUGGY]  add(new  Double(x,  new  double(y));  [CE]  '['  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(x,  new  double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  double(y));	      add(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	21	None	replace
23	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	9	9	add
24	[BUG]  [BUGGY]      addData(x,  y);  addData(x,  y);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	9	9	add
25	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
26	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
27	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
28	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
29	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	9	None	add
30	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
31	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
32	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  *  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  x.doubleValue()  *  n;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  *  n;	      double    x    =    x.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	16	None	replace
33	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  +  x;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  n.doubleValue()  +  x;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  +  x;	      double    x    =    x.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	16	None	replace
34	[BUG]  [BUGGY]  double  x  =  y.doubleValue()  +  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  y.doubleValue()  +  n;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  y.doubleValue()  +  n;	      double    x    =    x.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	16	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
36	[BUG]  [BUGGY]  xbar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  double  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    n;    double  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	5	5	add
38	[BUG]  [BUGGY]  xbar  =  n;  double  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  double  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    double  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	5	5	add
39	[BUG]  [BUGGY]  xbar  =  n;  int  xbar  =  n;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  int  xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    int  xbar  =  n;	  	non-compiled	[CE]  possible  loss  of  precision	5	None	add
40	[BUG]  [BUGGY]  xbar  =  n;  (xbar  =  n;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  (xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    (xbar  =  n;	  	non-compiled	[CE]  ')'  expected	5	None	add
41	[BUG]  [BUGGY]  xbar  =  n;  xbar  =  n);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  xbar  =  n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    xbar  =  n);	  	non-compiled	[CE]  ';'  expected	5	None	add
42	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	25	None	replace
43	[BUG]  [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y));  [CE]  cannot  find  symbol  mapping  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  mapping	25	None	replace
44	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(n));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(n));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(n));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	25	None	replace
45	[BUG]  [BUGGY]  double  n  =  Math.min(data,  Math.abs(x),  Math.abs(y));  [CE]  cannot  find  symbol  data  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(data,  Math.abs(x),  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(data,  Math.abs(x),  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  data	25	None	replace
46	[BUG]  [BUGGY]  add(new  Double(x),  y);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(x),  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  y);	      add(new    Double(x));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
47	[BUG]  [BUGGY]  add(new  Double(x,  y));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(x,  y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  y));	      add(new    Double(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	20	None	replace
48	[BUG]  [BUGGY]  add(new  Double(y));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(y));	      add(new    Double(x));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
49	[BUG]  [BUGGY]  remove(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  remove(new  Double(x),  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x),  new  Double(y));	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
50	[BUG]  [BUGGY]  _add(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  _add(new  Double(x),  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x),  new  Double(y));	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
51	[BUG]  [BUGGY]  add(new  Double(x),  new  Double(y),  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(x),  new  Double(y),  n);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  new  Double(y),  n);	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  2;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +  2;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
53	[BUG]  [BUGGY]  xbar  =  x  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  2;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +  2;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +  1.0;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
55	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +  1.0;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n  +  1;	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	6	4	replace
57	[BUG]  [BUGGY]  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n  +  1;	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	6	4	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  new  Double(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  new  Double(x);	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
59	[BUG]  [BUGGY]  xbar  =  new  Double(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  new  Double(x);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(x);	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.min(x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.min(x,  y);	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
61	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.min(x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.min(x,  y);	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  n  /(double)x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  n  /(double)x;	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
63	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  n  /(double)x;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  /(double)x;	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y  +  1);	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
65	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y  +  1);	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(x,  y)-  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y)-  1;	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
67	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(x,  y)-  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y)-  1;	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(y)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
69	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
71	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
72	[BUG]  [BUGGY]  double  n  =  Math.min(double,  Math.abs(x)-  1);  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(double,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(double,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	non-compiled	[CE]  '.class'  expected	28	None	replace
73	[BUG]  [BUGGY]  double  n  =  Math.min(value,  Math.abs(x)-  1);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(value,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(value,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	non-compiled	[CE]  cannot  find  symbol  value	28	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	17	1	add
75	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	17	1	add
76	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10));	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	17	None	add
77	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [CE]  cannot  find  symbol  Y  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));	  	non-compiled	[CE]  cannot  find  symbol  Y	17	None	add
78	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  i));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  i));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  i));	  	non-compiled	[CE]  cannot  find  symbol  i	17	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        x    =    Math.max(x,    y);    x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
80	[BUG]  [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.max(x,    y);    x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
82	[BUG]  [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	14	5	add
83	[BUG]  [BUGGY]      x  =  Math.max(x,  y);  double  x  =  Math.max(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  double  x  =  Math.max(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.max(x,    y);    double  x  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	14	None	add
84	[BUG]  [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  y));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.max(x,    y);    x  =  Math.max(x,  y));	  	non-compiled	[CE]  ';'  expected	14	None	add
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  1.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  1.0;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
86	[BUG]  [BUGGY]  xbar  =  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  1.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1.0;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  1;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
88	[BUG]  [BUGGY]  xbar  =  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  0.0;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	5	replace
90	[BUG]  [BUGGY]  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0.0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0.0;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	4	5	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	12	5	add
92	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	12	5	add
93	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    double  x  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	12	None	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	12	5	add
95	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	12	5	add
96	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y));	  	non-compiled	[CE]  ';'  expected	12	None	add
97	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  addData(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,  y  +  1);	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
98	[BUG]  [BUGGY]  addData(x,  y  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  addData(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y  +  1);	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
99	[BUG]  [BUGGY]  _addData(x,  y);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  _addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(x,  y);	      addData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
100	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  this.addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,  y);	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
101	[BUG]  [BUGGY]  this.addData(x,  y);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  this.addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,  y);	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  ybar  =  n  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        double  ybar  =  n  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	7	4	add
103	[BUG]  [BUGGY]      double  ybar  =  n  -  xbar;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  ybar  =  n  -  xbar;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double  ybar  =  n  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	7	4	add
104	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  0);	  xbar    =    x    +(int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	23	None	replace
105	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y);	  xbar    =    x    +(int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	23	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n  +  1);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	5	replace
107	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n  +  1);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	5	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	7	replace
109	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	7	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	6	replace
111	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	6	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
113	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
114	[BUG]  [BUGGY]  double  x  =  n.doubleValue();  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  n.doubleValue();  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue();	      double    x    =    x.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	11	None	replace
115	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  x.doubleValue()  +  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  +  1;	      double    x    =    x.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	11	None	replace
116	[BUG]  [BUGGY]  double  x  =  y.doubleValue();  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  y.doubleValue();  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  y.doubleValue();	      double    x    =    x.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	11	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
118	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
119	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(Int)Math.rint((  double)n);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(Int)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(Int)Math.rint((  double)n);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
120	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double    n    =    Math.abs(x);    double  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	26	None	add
121	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  Double  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  n  =  Math.abs(x);  Double  n  =  Math.abs(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double    n    =    Math.abs(x);    Double  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	26	None	add
122	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  long  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  n  =  Math.abs(x);  long  n  =  Math.abs(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double    n    =    Math.abs(x);    long  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	26	None	add
123	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double    n    =    Math.abs(x);    double  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	26	None	add
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  +  1);	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
125	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y  +  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  +  1);	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y  -  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  -  1);	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
127	[BUG]  [BUGGY]  x  =  Math.max(x,  y  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y  -  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  -  1);	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    1;    xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
129	[BUG]  [BUGGY]  xbar  =  x  +  1;  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    1;    double  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	5	add
131	[BUG]  [BUGGY]  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    double  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	5	add
132	[BUG]  [BUGGY]  xbar  =  x  +  1;  int  xbar  =  x  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  int  xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    int  xbar  =  x  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	1	None	add
133	[BUG]  [BUGGY]  xbar  =  x  +  1;  (xbar  =  x  +  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  (xbar  =  x  +  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    (xbar  =  x  +  1;	  	non-compiled	[CE]  ')'  expected	1	None	add
134	[BUG]  [BUGGY]  xbar  =  x  +  1;  (xbar  =  x  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  (xbar  =  x  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    (xbar  =  x  +  1);	  	non-compiled	[CE]  not  a  statement	1	None	add
135	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
136	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
137	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
138	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
139	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
140	[BUG]  [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	9	9	add
141	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	25	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  y);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
143	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  y);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y)+  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y)+  1;	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
145	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y)+  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y)+  1;	      x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	15	5	replace
146	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  addData(new  Double(x),  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new  Double(x),  new  Double(y));	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
147	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  addData(new  Double(x),  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new  Double(x),  new  Double(y));	      addData(x,    y);    	compilable	  [FE]  StackOverflowError  	10	9	replace
148	[BUG]  [BUGGY]  add(x,  y);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(x,  y);	      addData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
149	[BUG]  [BUGGY]  xbar  =  n;  ||  xbar  ==  n)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  ||  xbar  ==  n)  {  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    ||  xbar  ==  n)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
150	[BUG]  [BUGGY]  xbar  =  n;  ||  xbar  ==  n;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  ||  xbar  ==  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    ||  xbar  ==  n;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
151	[BUG]  [BUGGY]  xbar  =  x  +  1;  xbar  =  x  +  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +  1;  xbar  =  x  +  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1;    xbar  =  x  +  1);	  	non-compiled	[CE]  ';'  expected	1	None	add
152	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  int  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  int  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    int  x  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	12	None	add
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  *  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  *  1;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
154	[BUG]  [BUGGY]  xbar  =  x  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  *  1;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  *  1;	  xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
155	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  x  =  Math.abs(x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  n  =  Math.abs(x);  double  x  =  Math.abs(x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double    n    =    Math.abs(x);    double  x  =  Math.abs(x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	26	None	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n  -  1);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	5	replace
157	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n  -  1);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	5	replace
158	[BUG]  [BUGGY]  xbar  =  0;  (xbar  =  0;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  (xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    (xbar  =  0;	  	non-compiled	[CE]  ')'  expected	3	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
160	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(ybar,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
162	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(ybar,  Math.abs(x)-  1);	      double    n    =    Math.min(n,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	28	5	replace
163	[BUG]  [BUGGY]  rehash(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  rehash(new  Double(x),  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehash(new  Double(x),  new  Double(y));	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
164	[BUG]  [BUGGY]  add(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(x,  new  Double(y));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  Double(y));	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	19	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(y,  x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(y,  x);	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
166	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.min(y,  x);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  x);	      x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	17	6	add
168	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	17	6	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	17	1	add
170	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	17	1	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
172	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
173	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y));	      	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	8	None	replace
174	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y));  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y));	      	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	8	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.sqrt(new  Double(x));	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
176	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x));	      	compilable	  [FE]  AssertionFailedError  	8	5	replace
177	[BUG]  [BUGGY]  add(new  Double(y),  new  Double(x));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  add(new  Double(y),  new  Double(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(y),  new  Double(x));	      add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
178	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  +  n  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  x  =  x.doubleValue()  +  n  +  1;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  +  n  +  1;	      double    x    =    x.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	16	None	replace
179	[BUG]  [BUGGY]  x  =  Math.max(x,  y)/;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  x  =  Math.max(x,  y)/;  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y)/;	      x    =    Math.max(x,    y);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
180	[BUG]  [BUGGY]      addData(x,  y);  setData(x,  y);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  setData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    setData(x,  y);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
181	[BUG]  [BUGGY]      addData(x,  y);  removeData(x,  y);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  removeData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    removeData(x,  y);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
182	[BUG]  [BUGGY]      addData(x,  y);  setResult(x,  y);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  setResult(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    setResult(x,  y);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
183	[BUG]  [BUGGY]      addData(x,  y);  addData(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]          StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      addData(x,  y);  addData(x,  Y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        addData(x,    y);    addData(x,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	9	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(Math.abs(y),  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	25	5	replace
185	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(y),  Math.abs(x));	      double    n    =    Math.min(n,    Math.abs(x),    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	25	5	replace
186	[BUG]  [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.max(x,  y);  x  =  Math.max(x,  Y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.max(x,    y);    x  =  Math.max(x,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	14	None	add
187	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(x  -  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x  -  1);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
189	[BUG]  [BUGGY]  double  n  =  Math.abs(x  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  double  n  =  Math.abs(x  -  1);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  -  1);	      double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	27	5	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
191	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
192	[BUG]  [BUGGY]      double  ybar  =  Math.sqrt(new  Integer(x));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      double  ybar  =  Math.sqrt(new  Integer(x));  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        double  ybar  =  Math.sqrt(new  Integer(x));	  	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	7	None	add
193	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  }  else  {  x  =  Math.min(x,  y);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  }  else  {  x  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  }  else  {  x  =  Math.min(x,  y);	  	non-compiled	[CE]  'else'  without  'if'	12	None	add
194	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  y);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y).min(x,  y);	  	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	add
195	[BUG]  [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);  [CE]  cannot  find  symbol  setX  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]      x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);	  	non-compiled	[CE]  cannot  find  symbol  setX	12	None	add
196	[BUG]  [BUGGY]  rehashTable(x,  y);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  rehashTable(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(x,  y);	      addData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
197	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    ((  Double)n).doubleValue();  xbar  =  0;	  	non-compiled	[CE]  inconvertible  types	3	None	add
198	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    ((  Double)n).doubleValue()  /((  Double)n).doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
199	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y);  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y);  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    ((  Double)n).doubleValue().computeValue(x,  y);	  	non-compiled	[CE]  inconvertible  types	3	None	add
200	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0;    ((  Double)n).doubleValue());  xbar  =  0;	  	non-compiled	[CE]  ';'  expected	3	None	add
201	[BUG]  [BUGGY]  xbar  =  n;  (double)xbar  =  n;  [CE]  unexpected  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {    [BUGGY]  xbar  =  n;  (double)xbar  =  n;  [BUGGY]    ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n;    (double)xbar  =  n;	  	non-compiled	[CE]  unexpected  type	5	None	add
