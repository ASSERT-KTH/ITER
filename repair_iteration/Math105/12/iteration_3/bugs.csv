bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    int    x    =    Math.min(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	152	None	replace
2	[BUG]  [BUGGY]  int  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  int  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	int  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    int    x    =    Math.min(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	152	None	replace
3	[BUG]  [BUGGY]  int  x  =  Math.min(y,  x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  int  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	int  x  =  Math.min(y,  x);	          x    =    Math.min(x,    y);    int    x    =    Math.min(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	152	None	replace
4	[BUG]  [BUGGY]  double  n  =  Math.abs(x,  y);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x,  y);	          double    n    =    Math.abs(x);    Double    n    =    Math.abs(x);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	121	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  n  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	Double  n  =  Math.abs(x);	          double    n    =    Math.abs(x);    Double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	121	5	replace
6	[BUG]  [BUGGY]  Double  n  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  n  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	Double  n  =  Math.abs(x);	          double    n    =    Math.abs(x);    Double    n    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	121	5	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  IllegalArgumentException  	151	9	replace
8	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  IllegalArgumentException  	151	9	replace
9	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  addData(x,  y);  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  StackOverflowError  	151	9	replace
10	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  addData(x,  y);  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  StackOverflowError  	151	9	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  AssertionFailedError  	151	5	replace
12	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  AssertionFailedError  	151	5	replace
13	[BUG]  [BUGGY]  double  n  =  Math.log(x,  y);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(x,  y);	  double    n    =    Math.min(x,    y);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	143	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  x);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
15	[BUG]  [BUGGY]  double  n  =  Math.min(y,  x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  x);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(0,  x);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
17	[BUG]  [BUGGY]  double  n  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(0,  x);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(x)-  1);	  double    n    =    Math.min(value,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	73	5	replace
19	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(x)-  1);  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(x)-  1);	  double    n    =    Math.min(value,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	73	5	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  +  2);	  x    =    Math.max(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	125	5	replace
21	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  +  2);	  x    =    Math.max(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	125	5	replace
22	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  this.addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,    y);    this.addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	100	9	add
23	[BUG]  [BUGGY]  this.addData(x,  y);  this.addData(x,  y);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  this.addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    this.addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	100	9	add
24	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
25	[BUG]  [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
26	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
27	[BUG]  [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
28	[BUG]  [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
29	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
30	[BUG]  [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(n  ==  0)  {  this.addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	100	9	add
31	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  *  n  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x.doubleValue()  *  n  +  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  *  n  +  1;	  double    x    =    x.doubleValue()    +    n    +    1;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	178	None	replace
32	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  +  n  *  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x.doubleValue()  +  n  *  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  +  n  *  1;	  double    x    =    x.doubleValue()    +    n    +    1;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	178	None	replace
33	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  +  y  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x.doubleValue()  +  y  +  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  +  y  +  1;	  double    x    =    x.doubleValue()    +    n    +    1;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	178	None	replace
34	[BUG]  [BUGGY]  xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));  [CE]  inconvertible  types  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(Int)Math.pow(10,    Math.pow(10,    y));    	non-compiled	[CE]  inconvertible  types	187	None	replace
35	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  ybar  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,  ybar  +  1);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
36	[BUG]  [BUGGY]  addData(x,  ybar  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  ybar  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  ybar  +  1);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
37	[BUG]  [BUGGY]  _addData(x,  y  +  1);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _addData(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(x,  y  +  1);	  addData(x,    y    +    1);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
38	[BUG]  [BUGGY]  xbar  =  n;  ((  Double)n).doubleValue());  xbar  =  0;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n;  ((  Double)n).doubleValue());  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n;  ((  Double)n).doubleValue());  xbar  =  0;	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  ';'  expected	200	None	replace
39	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0.0;  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0.0;	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	200	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
41	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  2);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  2);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	4	replace
43	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  2);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  2);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	4	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	5	replace
45	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n)-  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	5	replace
46	[BUG]  [BUGGY]  xbar    =    n;    double  xbar  =  n;  xbar  =  n;  double  xbar  =  n;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    double  xbar  =  n;  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        double    xbar    =    n;    xbar  =  n;  double  xbar  =  n;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	37	None	add
47	[BUG]  [BUGGY]  xbar    =    n;    double  xbar  =  n;  double  xbar  =  n;  double  xbar  =  n;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    double  xbar  =  n;  double  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        double    xbar    =    n;    double  xbar  =  n;  double  xbar  =  n;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	37	None	add
48	[BUG]  [BUGGY]  xbar    =    n;    double  xbar  =  n;  xbar  =  n;  Double  xbar  =  n;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    double  xbar  =  n;  xbar  =  n;  Double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        double    xbar    =    n;    xbar  =  n;  Double  xbar  =  n;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	37	None	add
49	[BUG]  [BUGGY]  xbar    =    n;    double  xbar  =  n;  int  xbar  =  n;  double  xbar  =  n;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    double  xbar  =  n;  int  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        double    xbar    =    n;    int  xbar  =  n;  double  xbar  =  n;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	37	None	add
50	[BUG]  [BUGGY]  xbar    =    n;    double  xbar  =  n;  Double  xbar  =  n;  double  xbar  =  n;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    double  xbar  =  n;  Double  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        double    xbar    =    n;    Double  xbar  =  n;  double  xbar  =  n;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	37	None	add
51	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    addData(x,  y);  addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	23	9	add
52	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  addData(x,  y);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    addData(x,  y);  addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	23	9	add
53	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
54	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
55	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
56	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  addData(x,  y);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(y  <  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
57	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
58	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(n  ==  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
59	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	23	9	add
60	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    addData(x,  y);	  	compilable	  [FE]  StackOverflowError  	23	9	add
61	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    addData(new  Double(x),  new  Double(y));	  	compilable	  [FE]  StackOverflowError  	146	9	add
62	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(x),  new  Double(y));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    addData(new  Double(x),  new  Double(y));	  	compilable	  [FE]  StackOverflowError  	146	9	add
63	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
64	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
65	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	146	None	add
66	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
67	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
68	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
69	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  ==  0)  {  addData(new  Double(x),  new  Double(y));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
70	[BUG]  [BUGGY]  double  x  =  Math.abs(x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  Math.abs(x);	          double    n    =    Math.abs(x);    double    x    =    Math.abs(x);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	155	None	replace
71	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n,  0);	  xbar    =    x    +(double)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	172	None	replace
72	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  y);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n,  y);	  xbar    =    x    +(double)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	172	None	replace
73	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  1.0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n,  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n,  1.0);	  xbar    =    x    +(double)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	172	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  Math.abs(x)/  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
75	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)/  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x)/  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(x,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(x,  Math.abs(y)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
77	[BUG]  [BUGGY]  double  n  =  Math.max(x,  Math.abs(y)-  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(x,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(x,  Math.abs(y)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
78	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(ybar,    Math.abs(x)-    1);    double  n  =  Math.min(ybar,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	161	None	add
79	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  Double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  Double  n  =  Math.min(ybar,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(ybar,    Math.abs(x)-    1);    Double  n  =  Math.min(ybar,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	161	None	add
80	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  double  n  =  Math.min(ybar,  Math.abs(x)-  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  double  n  =  Math.min(ybar,  Math.abs(x)-  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(ybar,    Math.abs(x)-    1);    double  n  =  Math.min(ybar,  Math.abs(x)-  1));	  	non-compiled	[CE]  ';'  expected	161	None	add
81	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  long  n  =  Math.min(ybar,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)-  1);  long  n  =  Math.min(ybar,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(ybar,    Math.abs(x)-    1);    long  n  =  Math.min(ybar,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	161	None	add
82	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  0,  n);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
83	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  1,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  1,  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  1,  0);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
84	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  y);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  0,  y);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
85	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0),  ybar);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0),  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  0),  ybar);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  ';'  expected	104	None	replace
86	[BUG]  [BUGGY]  xbar  =  x;  ||  xbar  ==  n)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  ||  xbar  ==  n)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  ||  xbar  ==  n)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
87	[BUG]  [BUGGY]  ||  xbar  ==  n)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ||  xbar  ==  n)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	||  xbar  ==  n)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
88	[BUG]  [BUGGY]  ||  xbar  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ||  xbar  ==  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	||  xbar  ==  0)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
89	[BUG]  [BUGGY]  xbar  =  x;  ||  xbar!=  n)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  ||  xbar!=  n)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  ||  xbar!=  n)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
90	[BUG]  [BUGGY]  this.setX  =  Math.min(x,  y);  [CE]  cannot  find  symbol  setX  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.setX  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.setX  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
91	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);  [CE]  cannot  find  symbol  setX  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
92	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.max(x,  y);  [CE]  cannot  find  symbol  setX  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  this.setX  =  Math.max(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
93	[BUG]  [BUGGY]  x  =  Math.max(x,  y);  this.setX  =  Math.min(x,  y);  [CE]  cannot  find  symbol  setX  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y);  this.setX  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y);  this.setX  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
94	[BUG]  [BUGGY]  xbar  =  0;  ||  ybar  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ||  ybar  ==  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ||  ybar  ==  0)  {	  xbar    =    0;    ||    xbar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  xbar  =  0;  ||  n  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ||  n  ==  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ||  n  ==  0)  {	  xbar    =    0;    ||    xbar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  ybar  =  0;  ||  xbar  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ybar  =  0;  ||  xbar  ==  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	ybar  =  0;  ||  xbar  ==  0)  {	  xbar    =    0;    ||    xbar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  y);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x),  y);	  double    ybar    =    Math.sqrt(new    Double(x));    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	176	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.sqrt(new  Double(x)+  1);	  double    ybar    =    Math.sqrt(new    Double(x));    	compilable	  [FE]  AssertionFailedError  	176	5	replace
99	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x)+  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x)+  1);	  double    ybar    =    Math.sqrt(new    Double(x));    	compilable	  [FE]  AssertionFailedError  	176	5	replace
100	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x,  y));	  double    ybar    =    Math.sqrt(new    Double(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	176	None	replace
101	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  double  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  double  n  =  Math.abs(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(y);    double  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
102	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  Double  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  Double  n  =  Math.abs(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(y);    Double  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
103	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  long  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  long  n  =  Math.abs(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(y);    long  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
104	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  double  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  double  n  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(y);    double  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
106	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  double  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        n;        xbar    =    n;    double  xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	35	5	add
108	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  double  xbar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  double  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    double  xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	35	5	add
109	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xBar  =  n;  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xBar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xbar  =  n;  xBar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  xBar	35	None	add
110	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n);	  	non-compiled	[CE]  ';'  expected	35	None	add
111	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n);  xbar  =  n;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n);  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xbar  =  n);  xbar  =  n;	  	non-compiled	[CE]  ';'  expected	35	None	add
112	[BUG]  [BUGGY]  recalculate(new  Double(x),  new  double(y));  [CE]  '['  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  recalculate(new  Double(x),  new  double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	recalculate(new  Double(x),  new  double(y));	  remove(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	20	None	replace
113	[BUG]  [BUGGY]  addData(new  Double(x),  new  double(y));  [CE]  '['  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new  Double(x),  new  double(y));	  remove(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	20	None	replace
114	[BUG]  [BUGGY]  add(new  Double(x,  y),  n);  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  y),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  y),  n);	  add(new    Double(x,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	47	None	replace
115	[BUG]  [BUGGY]  add(new  Double(x,  y),  false);  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  y),  false);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  y),  false);	  add(new    Double(x,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	47	None	replace
116	[BUG]  [BUGGY]  add(new  Double(x,  y),  this);  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  y),  this);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  y),  this);	  add(new    Double(x,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	47	None	replace
117	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(ybar));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(ybar));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(ybar));	  double    n    =    Math.min(x,    Math.abs(y),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	141	None	replace
118	[BUG]  [BUGGY]  double  n  =  Math.log(x,  Math.abs(y));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(x,  Math.abs(y));	  double    n    =    Math.min(x,    Math.abs(y));    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	15	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(x,  Math.abs(y));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
120	[BUG]  [BUGGY]  double  n  =  Math.max(x,  Math.abs(y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(x,  Math.abs(y));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
121	[BUG]  [BUGGY]  _addData(x,  y,  n);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _addData(x,  y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(x,  y,  n);	  _addData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.max(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y)+    1;    x  =  Math.max(x,  y)+  1;	  	compilable	  [FE]  AssertionFailedError  	144	5	add
123	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.max(x,  y)+  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.max(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y)+    1;    x  =  Math.max(x,  y)+  1;	  	compilable	  [FE]  AssertionFailedError  	144	5	add
124	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  double  x  =  Math.max(x,  y)+  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  double  x  =  Math.max(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y)+    1;    double  x  =  Math.max(x,  y)+  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	144	None	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.min(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y)+    1;    x  =  Math.min(x,  y)+  1;	  	compilable	  [FE]  AssertionFailedError  	144	5	add
126	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.min(x,  y)+  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.min(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y)+    1;    x  =  Math.min(x,  y)+  1;	  	compilable	  [FE]  AssertionFailedError  	144	5	add
127	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  *  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  *  n;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  *  n;	  double    x    =    x.doubleValue()    *    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	32	None	replace
128	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  /  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x.doubleValue()  /  n;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  /  n;	  double    x    =    x.doubleValue()    *    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	32	None	replace
129	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  *  x;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  *  x;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  *  x;	  double    x    =    x.doubleValue()    *    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	32	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x;  xbar  =  y;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	5	replace
131	[BUG]  [BUGGY]  xbar  =  x;  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  xbar  =  y;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	5	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x;  xbar  =  n;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	5	replace
133	[BUG]  [BUGGY]  xbar  =  x;  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  xbar  =  n;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	5	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  1.0;  xbar  =  1.0;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	4	replace
135	[BUG]  [BUGGY]  xbar  =  1.0;  xbar  =  1.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1.0;  xbar  =  1.0;	  xbar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	36	4	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
137	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(x),  Math.abs(y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
139	[BUG]  [BUGGY]  double  n  =  Math.max(Math.abs(x),  Math.abs(y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
140	[BUG]  [BUGGY]  double  n  =  Math.log(Math.abs(x),  Math.abs(y));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	185	None	replace
141	[BUG]  [BUGGY]  double  n  =  Math.abs(Math.abs(x),  Math.abs(y));  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	185	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(y,    x);    x  =  Math.min(y,  x);	  	compilable	  [FE]  AssertionFailedError  	165	5	add
143	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    x  =  Math.min(y,  x);	  	compilable	  [FE]  AssertionFailedError  	165	5	add
144	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  double  x  =  Math.min(y,  x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  double  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    double  x  =  Math.min(y,  x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	165	None	add
145	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  int  x  =  Math.min(y,  x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  int  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    int  x  =  Math.min(y,  x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	165	None	add
146	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    x  =  Math.min(y,  x));	  	non-compiled	[CE]  ';'  expected	165	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  	compilable	  [FE]  AssertionFailedError  	112	1	add
148	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  	compilable	  [FE]  AssertionFailedError  	112	1	add
149	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1));	  	non-compiled	[CE]  ';'  expected	112	None	add
150	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)-  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)-  1);	  	non-compiled	[CE]  cannot  find  symbol	112	None	add
151	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)-  1);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10)-  1);	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	112	None	add
152	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  double  n  =  Math.abs(x  +  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1);  double  n  =  Math.abs(x  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    +    1);    double  n  =  Math.abs(x  +  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	12	None	add
153	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  Double  n  =  Math.abs(x  +  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1);  Double  n  =  Math.abs(x  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    +    1);    Double  n  =  Math.abs(x  +  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	12	None	add
154	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  long  n  =  Math.abs(x  +  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1);  long  n  =  Math.abs(x  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    +    1);    long  n  =  Math.abs(x  +  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	12	None	add
155	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  double  n  =  Math.abs(x  +  1));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1);  double  n  =  Math.abs(x  +  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    +    1);    double  n  =  Math.abs(x  +  1));	  	non-compiled	[CE]  ';'  expected	12	None	add
156	[BUG]  [BUGGY]  x  =  Math.ceil(x,  y);  x  =  Math.ceil(x,  y);  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.ceil(x,  y);  x  =  Math.ceil(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.ceil(x,  y);  x  =  Math.ceil(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	92	None	replace
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.pow(10,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.pow(10,  y);  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
158	[BUG]  [BUGGY]  x  =  Math.pow(10,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.pow(10,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.pow(10,  y);  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(y  -  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
160	[BUG]  [BUGGY]  double  n  =  Math.abs(y  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(y  -  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  /  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x  /  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
162	[BUG]  [BUGGY]  double  n  =  Math.abs(x  /  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  /  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  /  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
163	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  double  n  =  Math.min(x,  Math.abs(y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  double  n  =  Math.min(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y));    double  n  =  Math.min(x,  Math.abs(y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	14	None	add
164	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  Double  n  =  Math.min(x,  Math.abs(y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  Double  n  =  Math.min(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y));    Double  n  =  Math.min(x,  Math.abs(y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	14	None	add
165	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  long  n  =  Math.min(x,  Math.abs(y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  long  n  =  Math.min(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y));    long  n  =  Math.min(x,  Math.abs(y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	14	None	add
166	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  int  n  =  Math.min(x,  Math.abs(y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  int  n  =  Math.min(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y));    int  n  =  Math.min(x,  Math.abs(y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	14	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    n    +    1;    xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	56	1	add
168	[BUG]  [BUGGY]  xbar  =  n  +  1;  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	56	1	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  double  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    n    +    1;    double  xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	56	4	add
170	[BUG]  [BUGGY]  xbar  =  n  +  1;  double  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  double  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    double  xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	56	4	add
171	[BUG]  [BUGGY]  xbar  =  n  +  1;  int  xbar  =  n  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  int  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    int  xbar  =  n  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	56	None	add
172	[BUG]  [BUGGY]  xbar  =  n  +  1;  (double)xbar  =  n  +  1;  [CE]  unexpected  type  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  (double)xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    (double)xbar  =  n  +  1;	  	non-compiled	[CE]  unexpected  type	56	None	add
173	[BUG]  [BUGGY]  xbar  =  n  +  1;  xbar  =  n  +  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  xbar  =  n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    xbar  =  n  +  1);	  	non-compiled	[CE]  ';'  expected	56	None	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        0;        xbar    =    0;    xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
175	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  double  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        0;        xbar    =    0;    double  xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	1	5	add
177	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  double  xbar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  double  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    double  xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	1	5	add
178	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  int  xbar  =  0;  xbar  =  0;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  int  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    int  xbar  =  0;  xbar  =  0;	  	non-compiled	[CE]  possible  loss  of  precision	1	None	add
179	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  (xbar  =  0;  xbar  =  0;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  (xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    (xbar  =  0;  xbar  =  0;	  	non-compiled	[CE]  ')'  expected	1	None	add
180	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  (xbar  =  0;  xbar  =  0);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  (xbar  =  0;  xbar  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    (xbar  =  0;  xbar  =  0);	  	non-compiled	[CE]  ')'  expected	1	None	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    1;    xbar  =  1;	  	compilable	  [FE]  AssertionFailedError  	87	1	add
182	[BUG]  [BUGGY]  xbar  =  1;  xbar  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    xbar  =  1;	  	compilable	  [FE]  AssertionFailedError  	87	1	add
183	[BUG]  [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	87	None	add
184	[BUG]  [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	87	None	add
185	[BUG]  [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	87	None	add
186	[BUG]  [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    xbar  =  1;  this.serialVersionUID  =  SerialVersionUID.fromString(x);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	87	None	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	89	1	add
188	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	89	1	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  double  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    0.0;    double  xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	89	5	add
190	[BUG]  [BUGGY]  xbar  =  0.0;  double  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  double  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    double  xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	89	5	add
191	[BUG]  [BUGGY]  xbar  =  0.0;  int  xbar  =  0.0;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  int  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    int  xbar  =  0.0;	  	non-compiled	[CE]  possible  loss  of  precision	89	None	add
192	[BUG]  [BUGGY]  xbar  =  0.0;  (xbar  =  0.0;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  (xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    (xbar  =  0.0;	  	non-compiled	[CE]  ')'  expected	89	None	add
193	[BUG]  [BUGGY]  xbar  =  0.0;  (xbar  =  0.0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  (xbar  =  0.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    (xbar  =  0.0);	  	non-compiled	[CE]  not  a  statement	89	None	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  0;	  xbar    =    0;    int    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
195	[BUG]  [BUGGY]  double  xbar  =  0;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;	  xbar    =    0;    int    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	5	5	replace
196	[BUG]  [BUGGY]  Double  xbar  =  0;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	Double  xbar  =  0;	  xbar    =    0;    int    xbar    =    0;    	non-compiled	[CE]  incompatible  types	5	None	replace
197	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  n  =  Math.min(y,  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  n  =  Math.min(y,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x));    double  n  =  Math.min(y,  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	16	None	add
198	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  Double  n  =  Math.min(y,  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  Double  n  =  Math.min(y,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x));    Double  n  =  Math.min(y,  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	16	None	add
199	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  n  =  Math.min(x,  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  n  =  Math.min(x,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x));    double  n  =  Math.min(x,  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	16	None	add
200	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  long  n  =  Math.min(y,  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  long  n  =  Math.min(y,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x));    long  n  =  Math.min(y,  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	16	None	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(y)/  1);	  double    n    =    Math.min(x,    Math.abs(y)-    1);    	compilable	  [FE]  AssertionFailedError  	69	5	replace
202	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)/  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y)/  1);	  double    n    =    Math.min(x,    Math.abs(y)-    1);    	compilable	  [FE]  AssertionFailedError  	69	5	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  x  +  1;	  xbar    =    x    +    1;    double    xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	131	5	replace
204	[BUG]  [BUGGY]  double  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +  1;	  xbar    =    x    +    1;    double    xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	131	5	replace
205	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  +  y;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  +  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  +  y;	  double    x    =    n.doubleValue()    +    x;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	33	None	replace
206	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  /  x;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  /  x;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  /  x;	  double    x    =    n.doubleValue()    +    x;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	33	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(x,    y)-    1;    x  =  Math.min(x,  y)-  1;	  	compilable	  [FE]  AssertionFailedError  	66	5	add
208	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    x  =  Math.min(x,  y)-  1;	  	compilable	  [FE]  AssertionFailedError  	66	5	add
209	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  double  x  =  Math.min(x,  y)-  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  double  x  =  Math.min(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    double  x  =  Math.min(x,  y)-  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	66	None	add
210	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  int  x  =  Math.min(x,  y)-  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  int  x  =  Math.min(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    int  x  =  Math.min(x,  y)-  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	66	None	add
211	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  (x  =  Math.min(x,  y)-  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  (x  =  Math.min(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    (x  =  Math.min(x,  y)-  1;	  	non-compiled	[CE]  ')'  expected	66	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  	compilable	  [FE]  AssertionFailedError  	108	1	add
213	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  	compilable	  [FE]  AssertionFailedError  	108	1	add
214	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1));	  	non-compiled	[CE]  ';'  expected	108	None	add
215	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)+  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)+  1);	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
216	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	140	9	replace
217	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	140	9	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
219	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
220	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
221	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	140	9	replace
222	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	140	9	replace
223	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0;  double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
224	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  double  xbar  =  0;  double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  double  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    double  xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
225	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  Double  xbar  =  0;  double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  Double  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    Double  xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
226	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  long  xbar  =  0;  double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  long  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    long  xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
227	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0;  Double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0;  Double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    xbar  =  0;  Double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
228	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(n));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(n));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(n));	  double    n    =    Math.min(x,    Math.abs(y),    Math.abs(n));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	44	None	replace
229	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(double));  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(double));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(double));	  double    n    =    Math.min(x,    Math.abs(y),    Math.abs(n));    	non-compiled	[CE]  '.class'  expected	44	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
231	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y);  x  =  Math.max(x,  y  +  1);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
233	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  y  +  1);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  n);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  n);  x  =  Math.max(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
235	[BUG]  [BUGGY]  x  =  Math.min(x,  n);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  n);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  n);  x  =  Math.max(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
236	[BUG]  [BUGGY]  remove(new  Double(x),  new  Double(y),  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(x),  new  Double(y),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x),  new  Double(y),  n);	  remove(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
237	[BUG]  [BUGGY]  remove(new  Double(x),  new  Double(y,  n));  [CE]  no  suitable  constructor  found  for  Double(double,long)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(x),  new  Double(y,  n));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x),  new  Double(y,  n));	  remove(new    Double(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,long)	49	None	replace
238	[BUG]  [BUGGY]  remove(new  Double(y),  new  Double(x));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(y),  new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(y),  new  Double(x));	  remove(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
239	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  y));	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	non-compiled	[CE]  ';'  expected	84	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  -  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  -  1));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	5	replace
241	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  -  1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  -  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  -  1));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	5	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  *  2));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  *  2));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
243	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  *  2));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  *  2));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n  *  2));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    1.0;    xbar  =  x  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
245	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  xbar  =  x  +  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    xbar  =  x  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  double  xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    1.0;    double  xbar  =  x  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	54	5	add
247	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  double  xbar  =  x  +  1.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  double  xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    double  xbar  =  x  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	54	5	add
248	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  int  xbar  =  x  +  1.0;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  int  xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    int  xbar  =  x  +  1.0;	  	non-compiled	[CE]  possible  loss  of  precision	54	None	add
249	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  ||  xbar  ==  x  +  1.0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  ||  xbar  ==  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    ||  xbar  ==  x  +  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
250	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  (xbar  =  x  +  1.0;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  (xbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    (xbar  =  x  +  1.0;	  	non-compiled	[CE]  ')'  expected	54	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	39	5	replace
252	[BUG]  [BUGGY]  double  xbar  =  n;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	39	5	replace
253	[BUG]  [BUGGY]  Double  xbar  =  n;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	Double  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	non-compiled	[CE]  incompatible  types	39	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  long  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	long  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	39	5	replace
255	[BUG]  [BUGGY]  long  xbar  =  n;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  long  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	long  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	39	5	replace
256	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(x));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(x));	  double    n    =    Math.min(data,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	45	None	replace
257	[BUG]  [BUGGY]  xbar  =  new  Double(x,  y);  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(x,  y);	  xbar    =    new    Double(x);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	59	None	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  new  Double(y);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
259	[BUG]  [BUGGY]  xbar  =  new  Double(y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(y);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  new  Double(x  +  1);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
261	[BUG]  [BUGGY]  xbar  =  new  Double(x  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(x  +  1);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
262	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y),  n);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y),  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y),  n);	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	174	None	replace
263	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y),  n);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y),  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y),  n);	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	174	None	replace
264	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y,  n));  [CE]  no  suitable  constructor  found  for  Double(double,long)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x),  new  Double(y,  n));	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,long)	174	None	replace
265	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(n));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(n));	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	174	None	replace
266	[BUG]  [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  [CE]  inconvertible  types  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;	  xbar    =    0;    ((    Double)n).doubleValue();    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	197	None	replace
267	[BUG]  [BUGGY]  xbar  =  new  Double((  Double)n).doubleValue();  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double((  Double)n).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double((  Double)n).doubleValue();	  xbar    =    0;    ((    Double)n).doubleValue();    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	197	None	replace
268	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1,  y);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  +  1,  y);	          double    n    =    Math.abs(x);    double    n    =    Math.abs(y);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	123	None	replace
269	[BUG]  [BUGGY]  long  n  =  Math.abs(x);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  long  n  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	long  n  =  Math.abs(x);	          double    n    =    Math.abs(x);    long    n    =    Math.abs(x);    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
270	[BUG]  [BUGGY]  long  n  =  Math.abs(x,  y);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  long  n  =  Math.abs(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	long  n  =  Math.abs(x,  y);	          double    n    =    Math.abs(x);    long    n    =    Math.abs(x);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	122	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  2);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  2);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    	compilable	  [FE]  AssertionFailedError  	109	7	replace
272	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  2);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  2);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    	compilable	  [FE]  AssertionFailedError  	109	7	replace
273	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
274	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
275	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
276	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
277	[BUG]  [BUGGY]  (xbar  =  x  +  1;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  (xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	(xbar  =  x  +  1;	  xbar    =    x    +    1;    (xbar    =    x    +    1;    	non-compiled	[CE]  ')'  expected	133	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
279	[BUG]  [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x));  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(1.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
281	[BUG]  [BUGGY]  double  n  =  Math.max(1.0,  Math.abs(x));  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(1.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(x));	  double    n    =    Math.min(value,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	19	5	replace
283	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(x));  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(x));	  double    n    =    Math.min(value,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	19	5	replace
284	[BUG]  [BUGGY]  add(new  Double(x,  new  double(y),  n);  [CE]  '['  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  new  double(y),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  double(y),  n);	  add(new    Double(x,    new    double(y));    	non-compiled	[CE]  '['  expected	22	None	replace
285	[BUG]  [BUGGY]  remove(new  Double(x,  new  double(y));  [CE]  '['  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(x,  new  double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x,  new  double(y));	  add(new    Double(x,    new    double(y));    	non-compiled	[CE]  '['  expected	22	None	replace
286	[BUG]  [BUGGY]  _add(new  Double(x,  new  double(y));  [CE]  '['  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x,  new  double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x,  new  double(y));	  add(new    Double(x,    new    double(y));    	non-compiled	[CE]  '['  expected	22	None	replace
287	[BUG]  [BUGGY]  add(x,  y,  n);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(x,  y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(x,  y,  n);	  add(x,    y);    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
288	[BUG]  [BUGGY]  add(x,  y  +  1);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(x,  y  +  1);	  add(x,    y);    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
289	[BUG]  [BUGGY]  add(x,  y,  false);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(x,  y,  false);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(x,  y,  false);	  add(x,    y);    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.rint(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.rint(x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
291	[BUG]  [BUGGY]  double  n  =  Math.rint(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.rint(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.rint(x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
292	[BUG]  [BUGGY]  double  n  =  Math.log(x  +  1,  y);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x  +  1,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(x  +  1,  y);	  double    n    =    Math.log(x);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	11	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.floor(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.floor(x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
294	[BUG]  [BUGGY]  double  n  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.floor(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.floor(x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
295	[BUG]  [BUGGY]  xbar  =  x;  (xbar  =  n;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  (xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  (xbar  =  n;	  xbar    =    n;    (xbar    =    n;    	non-compiled	[CE]  ')'  expected	40	None	replace
296	[BUG]  [BUGGY]  xbar  =  0;  (xbar  =  n;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (xbar  =  n;	  xbar    =    n;    (xbar    =    n;    	non-compiled	[CE]  ')'  expected	40	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  *  2;	  xbar    =    x    +    2;    	compilable	  [FE]  AssertionFailedError  	53	5	replace
298	[BUG]  [BUGGY]  xbar  =  x  *  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  *  2;	  xbar    =    x    +    2;    	compilable	  [FE]  AssertionFailedError  	53	5	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	81	5	add
300	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	81	5	add
301	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  double  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  double  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    double  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	81	None	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	81	5	add
303	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	81	5	add
304	[BUG]  [BUGGY]  x  =  Math.max(0,  x);  x  =  Math.min(x,  y));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  x  =  Math.min(x,  y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0,  x);  x  =  Math.min(x,  y));	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y));    	non-compiled	[CE]  ';'  expected	96	None	replace
305	[BUG]  [BUGGY]  x  =  Math.log(x,  y);  x  =  Math.min(x,  y));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.log(x,  y);  x  =  Math.min(x,  y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.log(x,  y);  x  =  Math.min(x,  y));	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y));    	non-compiled	[CE]  ';'  expected	96	None	replace
306	[BUG]  [BUGGY]  add(new  Double(x),  y,  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  y,  n);	  add(new    Double(x),    y);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
307	[BUG]  [BUGGY]  add(new  Double(x),  y  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  y  +  1);	  add(new    Double(x),    y);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
308	[BUG]  [BUGGY]  add(new  Double(x),  y));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  y));	  add(new    Double(x),    y);    	non-compiled	[CE]  ';'  expected	46	None	replace
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  int)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  int)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	118	1	replace
310	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  int)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  int)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  int)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	118	1	replace
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(y  +  1);	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
312	[BUG]  [BUGGY]  double  n  =  Math.abs(y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(y  +  1);	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x)/  1;	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
314	[BUG]  [BUGGY]  double  n  =  Math.abs(x)/  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x)/  1;	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
315	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  double  n  =  Math.min(x,  Math.abs(y)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  double  n  =  Math.min(x,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y)-    1);    double  n  =  Math.min(x,  Math.abs(y)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	68	None	add
316	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  Double  n  =  Math.min(x,  Math.abs(y)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  Double  n  =  Math.min(x,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y)-    1);    Double  n  =  Math.min(x,  Math.abs(y)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	68	None	add
317	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  double  n  =  Math.min(x,  Math.abs(y)-  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  double  n  =  Math.min(x,  Math.abs(y)-  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y)-    1);    double  n  =  Math.min(x,  Math.abs(y)-  1));	  	non-compiled	[CE]  ';'  expected	68	None	add
318	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  long  n  =  Math.min(x,  Math.abs(y)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)-  1);  long  n  =  Math.min(x,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y)-    1);    long  n  =  Math.min(x,  Math.abs(y)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	68	None	add
319	[BUG]  [BUGGY]  remove(new  Double(x));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x));	  add(new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
320	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(y,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    double  n  =  Math.min(y,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	70	None	add
321	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  Double  n  =  Math.min(y,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  Double  n  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    Double  n  =  Math.min(y,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	70	None	add
322	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  long  n  =  Math.min(y,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  long  n  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    long  n  =  Math.min(y,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	70	None	add
323	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(y,  Math.abs(x)-  1));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(y,  Math.abs(x)-  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    double  n  =  Math.min(y,  Math.abs(x)-  1));	  	non-compiled	[CE]  ';'  expected	70	None	add
324	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(x,  Math.abs(x)-  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  n  =  Math.min(x,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    double  n  =  Math.min(x,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	70	None	add
325	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  *((  Double)n).doubleValue());  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  *((  Double)n).doubleValue());  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue()  *((  Double)n).doubleValue());	  xbar    =    0;    ((    Double)n).doubleValue()    /((    Double)n).doubleValue());    	non-compiled	[CE]  not  a  statement	198	None	replace
326	[BUG]  [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());	  xbar    =    0;    ((    Double)n).doubleValue()    /((    Double)n).doubleValue());    	non-compiled	[CE]  not  a  statement	198	None	replace
327	[BUG]  [BUGGY]  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	((  Double)n).doubleValue()  /((  Double)n).doubleValue());	  xbar    =    0;    ((    Double)n).doubleValue()    /((    Double)n).doubleValue());    	non-compiled	[CE]  not  a  statement	198	None	replace
328	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
329	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
330	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
332	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
334	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
335	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    double  x  =  Math.min(x,  y);  x  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	91	None	add
336	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.min(x,  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y;	  	non-compiled	[CE]  ')'  expected	91	None	add
337	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  Y);  x  =  Math.min(x,  y);  [CE]  cannot  find  symbol  Y  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  Y);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  Y);  x  =  Math.min(x,  y);	  	non-compiled	[CE]  cannot  find  symbol  Y	91	None	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n    -    1);    xbar  =  x  +(int)Math.rint((  double)n  -  1);	  	compilable	  [FE]  AssertionFailedError  	156	1	add
339	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    -    1);    xbar  =  x  +(int)Math.rint((  double)n  -  1);	  	compilable	  [FE]  AssertionFailedError  	156	1	add
340	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(int)Math.rint((  double)n  -  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(int)Math.rint((  double)n  -  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    -    1);    xbar  =  x  +(int)Math.rint((  double)n  -  1));	  	non-compiled	[CE]  ';'  expected	156	None	add
341	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(Int)Math.rint((  double)n  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  xbar  =  x  +(Int)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    -    1);    xbar  =  x  +(Int)Math.rint((  double)n  -  1);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
342	[BUG]  [BUGGY]  double  n  =  Math.abs(x  -  1);  double  n  =  Math.abs(x  -  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  -  1);  double  n  =  Math.abs(x  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    -    1);    double  n  =  Math.abs(x  -  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	188	None	add
343	[BUG]  [BUGGY]  double  n  =  Math.abs(x  -  1);  Double  n  =  Math.abs(x  -  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  -  1);  Double  n  =  Math.abs(x  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    -    1);    Double  n  =  Math.abs(x  -  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	188	None	add
344	[BUG]  [BUGGY]  double  n  =  Math.abs(x  -  1);  long  n  =  Math.abs(x  -  1);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  -  1);  long  n  =  Math.abs(x  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    -    1);    long  n  =  Math.abs(x  -  1);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	188	None	add
345	[BUG]  [BUGGY]  double  n  =  Math.abs(x  -  1);  double  n  =  Math.abs(x  -  1));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  -  1);  double  n  =  Math.abs(x  -  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(x    -    1);    double  n  =  Math.abs(x  -  1));	  	non-compiled	[CE]  ';'  expected	188	None	add
346	[BUG]  [BUGGY]  addData(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x,  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new  Double(x,  new  Double(y));	  addData(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	147	None	replace
347	[BUG]  [BUGGY]  _addData(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _addData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(new  Double(x),  new  Double(y));	  addData(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
348	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new  Double(x),  new  Double(y)+  1);	  addData(new    Double(x),    new    Double(y));    	compilable	  [FE]  StackOverflowError  	147	9	replace
349	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y)+  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new  Double(x),  new  Double(y)+  1);	  addData(new    Double(x),    new    Double(y));    	compilable	  [FE]  StackOverflowError  	147	9	replace
350	[BUG]  [BUGGY]  n  =  Math.min(x,  y);  [CE]  possible  loss  of  precision  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  Math.min(x,  y);	          addData(x,    y);    addData(x,    y);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.max(1,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	n  =  Math.max(1,  n);	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
352	[BUG]  [BUGGY]  n  =  Math.max(1,  n);  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.max(1,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  Math.max(1,  n);	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.max(0,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	n  =  Math.max(0,  n);	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
354	[BUG]  [BUGGY]  n  =  Math.max(0,  n);  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.max(0,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  Math.max(0,  n);	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
355	[BUG]  [BUGGY]  n  =  addData(x,  y);  [CE]  incompatible  types  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  addData(x,  y);	          addData(x,    y);    addData(x,    Y);    	non-compiled	[CE]  incompatible  types	183	None	replace
356	[BUG]  [BUGGY]  removeData(x,  y);  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  removeData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	removeData(x,  y);	          addData(x,    y);    addData(x,    Y);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  	compilable	  [FE]  AssertionFailedError  	110	1	add
358	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  	compilable	  [FE]  AssertionFailedError  	110	1	add
359	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10));	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	110	None	add
360	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  n));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  n));	  	non-compiled	[CE]  cannot  find  symbol	110	None	add
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y)/  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
362	[BUG]  [BUGGY]  x  =  Math.min(x,  y)/  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y)/  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y)-  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
364	[BUG]  [BUGGY]  x  =  Math.max(x,  y)-  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y)-  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y)/  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
366	[BUG]  [BUGGY]  x  =  Math.max(x,  y)/  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)/  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y)/  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
367	[BUG]  [BUGGY]  ||  xbar  ==  n;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ||  xbar  ==  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	||  xbar  ==  n;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
368	[BUG]  [BUGGY]  xbar  =  x;  ||  xbar  ==  n;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  ||  xbar  ==  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  ||  xbar  ==  n;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
369	[BUG]  [BUGGY]  ||  xbar  ==  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ||  xbar  ==  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	||  xbar  ==  0;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
370	[BUG]  [BUGGY]  xbar  =  x;  ||  ybar  ==  n;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  ||  ybar  ==  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  ||  ybar  ==  n;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
371	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [CE]  cannot  find  symbol  Y  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10));    	non-compiled	[CE]  cannot  find  symbol  Y	76	None	replace
372	[BUG]  [BUGGY]  this.addData(new  double[]  {  x,  y  }  );  [CE]  no  suitable  method  found  for  addData(double[])  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(new  double[]  {  x,  y  }  );  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(new  double[]  {  x,  y  }  );	  this.addData(x,    y);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double[])	101	None	replace
373	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(x,  y  +  1);	  this.addData(x,    y);    	compilable	  [FE]  StackOverflowError  	101	9	replace
374	[BUG]  [BUGGY]  this.addData(x,  y  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,  y  +  1);	  this.addData(x,    y);    	compilable	  [FE]  StackOverflowError  	101	9	replace
375	[BUG]  [BUGGY]  x  =  Math.ceil(x,  y);  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.ceil(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.ceil(x,  y);	  x    =    Math.min(y,    x);    	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	166	None	replace
376	[BUG]  [BUGGY]  x  =  Math.log(x,  y);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.log(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.log(x,  y);	  x    =    Math.min(y,    x);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	166	None	replace
377	[BUG]  [BUGGY]  double  xbar  =  0;  (xbar  =  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  (xbar  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  (xbar  =  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
378	[BUG]  [BUGGY]  xbar  =  0;  (xbar  <  =  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (xbar  <  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (xbar  <  =  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  n);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
380	[BUG]  [BUGGY]  x  =  Math.max(x,  n);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  n);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  0);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
382	[BUG]  [BUGGY]  x  =  Math.max(x,  0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  0);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
384	[BUG]  [BUGGY]  x  =  Math.max(x,  ybar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
385	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n  /  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
386	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  /  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n  /  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n  *  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
388	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  *  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n  *  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)y  -  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	5	replace
390	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)y  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)y  -  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	5	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    new    Double(x);    xbar  =  new  Double(x);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
392	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
393	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEncoding(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEncoding(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEncoding(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	58	None	add
394	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacters(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacters(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacters(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	58	None	add
395	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.fromString(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	58	None	add
396	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEscape(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEscape(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.serialVersionUID  =  SerialVersionUID.decodeXMLCharacterEscape(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	58	None	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  n  /  xbar;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
398	[BUG]  [BUGGY]  double  ybar  =  n  /  xbar;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  /  xbar;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  n  -  1;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
400	[BUG]  [BUGGY]  double  ybar  =  n  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  -  1;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  x  -  xbar;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
402	[BUG]  [BUGGY]  double  ybar  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  x  -  xbar;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
403	[BUG]  [BUGGY]  double  ybar  =  n  -  ybar;  [CE]  variable  ybar  might  not  have  been  initialized  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  -  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  -  ybar;	          double    ybar    =    n    -    xbar;    	non-compiled	[CE]  variable  ybar  might  not  have  been  initialized	103	None	replace
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.5;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  0.5;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	90	5	replace
405	[BUG]  [BUGGY]  xbar  =  0.5;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.5;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0.5;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	90	5	replace
406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  /  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n  /  1;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
407	[BUG]  [BUGGY]  xbar  =  n  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  /  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n  /  1;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n  +  2;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
409	[BUG]  [BUGGY]  xbar  =  n  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n  +  2;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  /(double)n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  x  /(double)n;	  double    ybar    =    n    /(double)x;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
411	[BUG]  [BUGGY]  double  ybar  =  x  /(double)n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  /(double)n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  x  /(double)n;	  double    ybar    =    n    /(double)x;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  n  /(double)x  +  1;	  double    ybar    =    n    /(double)x;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
413	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  /(double)x  +  1;	  double    ybar    =    n    /(double)x;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
414	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x.doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  /(double)x.doubleValue();	  double    ybar    =    n    /(double)x;    	non-compiled	[CE]  double  cannot  be  dereferenced	63	None	replace
415	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y,  n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y,  n);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
416	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)y,(double)n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)y,(double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)y,(double)n);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
417	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y,  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y,  0);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
418	[BUG]  [BUGGY]  xbar  =  y  +(int)Math.rint((  double)n,  x);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  y  +(int)Math.rint((  double)n,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  y  +(int)Math.rint((  double)n,  x);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y  -  1);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
420	[BUG]  [BUGGY]  x  =  Math.min(x,  y  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y  -  1);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  /  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  /  1);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
422	[BUG]  [BUGGY]  x  =  Math.max(x,  y  /  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  /  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  /  1);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  -  2);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
424	[BUG]  [BUGGY]  x  =  Math.max(x,  y  -  2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  -  2);	  x    =    Math.max(x,    y    -    1);    	compilable	  [FE]  AssertionFailedError  	127	5	replace
425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  x  +(int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    double    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	160	5	replace
426	[BUG]  [BUGGY]  double  xbar  =  x  +(int)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +(int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    double    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	160	5	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  double  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x;  double  xbar  =  y;	  xbar    =    n;    double    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
428	[BUG]  [BUGGY]  xbar  =  x;  double  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  double  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  double  xbar  =  y;	  xbar    =    n;    double    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x;  double  xbar  =  n;	  xbar    =    n;    double    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
430	[BUG]  [BUGGY]  xbar  =  x;  double  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  double  xbar  =  n;	  xbar    =    n;    double    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
431	[BUG]  [BUGGY]  RectangleEdge  rehash(new  Double(x),  new  Double(y));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RectangleEdge  rehash(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RectangleEdge  rehash(new  Double(x),  new  Double(y));	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ';'  expected	163	None	replace
432	[BUG]  [BUGGY]  RectangleEdge.rehash(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  RectangleEdge  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RectangleEdge.rehash(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RectangleEdge.rehash(new  Double(x),  new  Double(y));	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol  RectangleEdge	163	None	replace
433	[BUG]  [BUGGY]  rehash(new  Double(x),  new  Double(y),  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehash(new  Double(x),  new  Double(y),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehash(new  Double(x),  new  Double(y),  n);	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
434	[BUG]  [BUGGY]  xbar  =  x  +(Integer)Math.rint((  double)n);  xbar  =  x  +(Int)Math.rint((  double)n);  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(Integer)Math.rint((  double)n);  xbar  =  x  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(Integer)Math.rint((  double)n);  xbar  =  x  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  inconvertible  types	119	None	replace
435	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
436	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  x  =  x;  y  =  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    x  =  x;  y  =  y;	  	compilable	  [FE]  StackOverflowError  	135	9	add
437	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  x  =  x;  y  =  y;  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  x  =  x;  y  =  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    x  =  x;  y  =  y;	  	compilable	  [FE]  StackOverflowError  	135	9	add
438	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
439	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
440	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	135	9	add
441	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	135	9	add
442	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	135	9	add
443	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	135	9	add
444	[BUG]  [BUGGY]  x  =  Math.max(x,  y  -  1);  x  =  Math.max(x,  y  -  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  1);  x  =  Math.max(x,  y  -  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    -    1);    x  =  Math.max(x,  y  -  1));	  	non-compiled	[CE]  ';'  expected	126	None	add
445	[BUG]  [BUGGY]  x  =  Math.max(x,  y  -  1);  double  x  =  Math.max(x,  y  -  1);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  1);  double  x  =  Math.max(x,  y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    -    1);    double  x  =  Math.max(x,  y  -  1);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	126	None	add
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  1);  x  =  Math.min(x,  y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y    -    1);    x  =  Math.min(x,  y  -  1);	  	compilable	  [FE]  AssertionFailedError  	126	4	add
447	[BUG]  [BUGGY]  x  =  Math.max(x,  y  -  1);  x  =  Math.min(x,  y  -  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  -  1);  x  =  Math.min(x,  y  -  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    -    1);    x  =  Math.min(x,  y  -  1);	  	compilable	  [FE]  AssertionFailedError  	126	4	add
448	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n    +    1);    xbar  =  x  +(int)Math.rint((  double)n  +  1);	  	compilable	  [FE]  AssertionFailedError  	106	1	add
449	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    +    1);    xbar  =  x  +(int)Math.rint((  double)n  +  1);	  	compilable	  [FE]  AssertionFailedError  	106	1	add
450	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(int)Math.rint((  double)n  +  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(int)Math.rint((  double)n  +  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    +    1);    xbar  =  x  +(int)Math.rint((  double)n  +  1));	  	non-compiled	[CE]  ';'  expected	106	None	add
451	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(Int)Math.rint((  double)n  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  xbar  =  x  +(Int)Math.rint((  double)n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    +    1);    xbar  =  x  +(Int)Math.rint((  double)n  +  1);	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
452	[BUG]  [BUGGY]  setResult(x,  y);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  setResult(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	setResult(x,  y);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
453	[BUG]  [BUGGY]  addData(x,  y);  setResult(x,  ybar);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y);  setResult(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y);  setResult(x,  ybar);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
454	[BUG]  [BUGGY]  rehashData(x,  y);  setResult(x,  y);  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashData(x,  y);  setResult(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashData(x,  y);  setResult(x,  y);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
455	[BUG]  [BUGGY]  n  =  addData(x,  y);  setResult(x,  y);  [CE]  incompatible  types  [FE]                  StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  addData(x,  y);  setResult(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  addData(x,  y);  setResult(x,  y);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  incompatible  types	182	None	replace
456	[BUG]  [BUGGY]  append(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  append(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	append(new  Double(x),  new  Double(y));	  add(new    Double(y),    new    Double(x));    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
457	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  double  ybar  =  n  /(double)x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  double  ybar  =  n  /(double)x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    n    /(double)x;    double  ybar  =  n  /(double)x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	62	None	add
458	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  Double  ybar  =  n  /(double)x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  Double  ybar  =  n  /(double)x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    n    /(double)x;    Double  ybar  =  n  /(double)x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	62	None	add
459	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  double  ybar  =  n  /(double)x);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  double  ybar  =  n  /(double)x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    n    /(double)x;    double  ybar  =  n  /(double)x);	  	non-compiled	[CE]  ';'  expected	62	None	add
460	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  long  ybar  =  n  /(double)x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  long  ybar  =  n  /(double)x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    n    /(double)x;    long  ybar  =  n  /(double)x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	62	None	add
461	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
462	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
463	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
464	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	139	9	add
465	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	139	9	add
466	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	139	9	add
467	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	139	9	add
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y  +  1.0);	  x    =    Math.min(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	65	5	replace
469	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y  +  1.0);	  x    =    Math.min(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	65	5	replace
470	[BUG]  [BUGGY]  add(new  Double(x),  new  Double(y),  n  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  new  Double(y),  n  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  new  Double(y),  n  +  1);	  add(new    Double(x),    new    Double(y),    n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
471	[BUG]  [BUGGY]  add(new  Double(x),  new  Double(y)/  2,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  new  Double(y)/  2,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  new  Double(y)/  2,  n);	  add(new    Double(x),    new    Double(y),    n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
472	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
473	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
474	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
475	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	28	5	replace
477	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	28	5	replace
478	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
479	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
480	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  double  ybar  =  Math.min(x,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  ybar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    double  ybar  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	60	None	add
481	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  Double  ybar  =  Math.min(x,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  Double  ybar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    Double  ybar  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	60	None	add
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  xbar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    Math.min(x,    y);    double  xbar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	5	add
483	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  double  xbar  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  xbar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    double  xbar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	5	add
484	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  long  ybar  =  Math.min(x,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  long  ybar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    long  ybar  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	60	None	add
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  y)+  1;	  x    =    Math.max(x,    y)+    1;    	compilable	  [FE]  AssertionFailedError  	145	5	replace
486	[BUG]  [BUGGY]  x  =  Math.min(x,  y)+  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y)+  1;	  x    =    Math.max(x,    y)+    1;    	compilable	  [FE]  AssertionFailedError  	145	5	replace
487	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)+  1);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)+  1);	  double    n    =    Math.min(y,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	42	None	replace
488	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)-  1);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(y)-  1);	  double    n    =    Math.min(y,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	42	None	replace
489	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
490	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
491	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
492	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
493	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
494	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
495	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
496	[BUG]  [BUGGY]  double  x  =  Math.max(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  Math.max(x,  y);	          x    =    Math.max(x,    y);    double    x    =    Math.max(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	83	None	replace
497	[BUG]  [BUGGY]  double  x  =  Math.max(y,  x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  Math.max(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  Math.max(y,  x);	          x    =    Math.max(x,    y);    double    x    =    Math.max(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	83	None	replace
498	[BUG]  [BUGGY]  double  x  =  Math.min(y,  x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  Math.min(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  Math.min(y,  x);	          x    =    Math.min(x,    y);    double    x    =    Math.min(x,    y);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	93	None	replace
499	[BUG]  [BUGGY]  n  =  addData(x,  y);  removeData(x,  y);  [CE]  incompatible  types  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  addData(x,  y);  removeData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  addData(x,  y);  removeData(x,  y);	          addData(x,    y);    removeData(x,    y);    	non-compiled	[CE]  incompatible  types	181	None	replace
500	[BUG]  [BUGGY]  double  x  =  y.doubleValue()  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  y.doubleValue()  +  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  y.doubleValue()  +  1;	  double    x    =    y.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	116	None	replace
501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	Double  xbar  =  x  +  1;	  xbar    =    x    +    1;    int    xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	132	5	replace
502	[BUG]  [BUGGY]  Double  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  Double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	Double  xbar  =  x  +  1;	  xbar    =    x    +    1;    int    xbar    =    x    +    1;    	compilable	  [FE]  AssertionFailedError  	132	5	replace
503	[BUG]  [BUGGY]  int  xbar  =  x  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  int  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	int  xbar  =  x  +  1;	  xbar    =    x    +    1;    int    xbar    =    x    +    1;    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    *    1;    xbar  =  x  *  1;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
505	[BUG]  [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    xbar  =  x  *  1;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  double  xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    *    1;    double  xbar  =  x  *  1;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
507	[BUG]  [BUGGY]  xbar  =  x  *  1;  double  xbar  =  x  *  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  double  xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    double  xbar  =  x  *  1;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
508	[BUG]  [BUGGY]  xbar  =  x  *  1;  int  xbar  =  x  *  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  int  xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    int  xbar  =  x  *  1;	  	non-compiled	[CE]  possible  loss  of  precision	153	None	add
509	[BUG]  [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  *  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    (xbar  =  x  *  1;	  	non-compiled	[CE]  ')'  expected	153	None	add
510	[BUG]  [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    xbar  =  x  *  1);	  	non-compiled	[CE]  ';'  expected	153	None	add
511	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	non-compiled	[CE]  cannot  find  symbol  Y	191	None	replace
512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  x)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  x)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	5	replace
513	[BUG]  [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  x)/  2.0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  x)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  x)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	5	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(1,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(1,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	6	replace
515	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(1,  Math.pow(10,  y)/  2.0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(1,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(1,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	6	replace
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(double)Math.rint((    double)n);    xbar  =  x  +(double)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	171	1	add
517	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  xbar  =  x  +(double)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(double)Math.rint((    double)n);    xbar  =  x  +(double)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	171	1	add
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  double  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(double)Math.rint((    double)n);    double  xbar  =  x  +(double)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	171	1	add
519	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  double  xbar  =  x  +(double)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n);  double  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(double)Math.rint((    double)n);    double  xbar  =  x  +(double)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	171	1	add
520	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
521	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
522	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
523	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
524	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	31	9	replace
525	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	31	9	replace
526	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(mapping));  [CE]  cannot  find  symbol  mapping  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(mapping));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(mapping));	  double    n    =    Math.min(mapping,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  mapping	43	None	replace
527	[BUG]  [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(y),  Math.abs(x));  [CE]  cannot  find  symbol  mapping  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(y),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(mapping,  Math.abs(y),  Math.abs(x));	  double    n    =    Math.min(mapping,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  mapping	43	None	replace
528	[BUG]  [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y  +  1));  [CE]  cannot  find  symbol  mapping  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y  +  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(mapping,  Math.abs(x),  Math.abs(y  +  1));	  double    n    =    Math.min(mapping,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  mapping	43	None	replace
529	[BUG]  [BUGGY]          double  ybar  =  n  -  xbar;  double  ybar  =  n  -  xbar;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          double  ybar  =  n  -  xbar;  double  ybar  =  n  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                double    ybar    =    n    -    xbar;    double  ybar  =  n  -  xbar;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	102	None	add
530	[BUG]  [BUGGY]          double  ybar  =  n  -  xbar;  Double  ybar  =  n  -  xbar;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          double  ybar  =  n  -  xbar;  Double  ybar  =  n  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                double    ybar    =    n    -    xbar;    Double  ybar  =  n  -  xbar;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	102	None	add
531	[BUG]  [BUGGY]          double  ybar  =  n  -  xbar;  long  ybar  =  n  -  xbar;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          double  ybar  =  n  -  xbar;  long  ybar  =  n  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                double    ybar    =    n    -    xbar;    long  ybar  =  n  -  xbar;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	102	None	add
532	[BUG]  [BUGGY]          double  ybar  =  n  -  xbar;  double  xbar  =  n  -  xbar;  [CE]  variable  xbar  might  not  have  been  initialized  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          double  ybar  =  n  -  xbar;  double  xbar  =  n  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                double    ybar    =    n    -    xbar;    double  xbar  =  n  -  xbar;	  	non-compiled	[CE]  variable  xbar  might  not  have  been  initialized	102	None	add
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0f;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +  1.0f;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	5	replace
534	[BUG]  [BUGGY]  xbar  =  x  +  1.0f;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0f;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +  1.0f;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	5	replace
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  *  1.0;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
536	[BUG]  [BUGGY]  xbar  =  x  *  1.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  *  1.0;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
537	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        double    xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	159	None	add
538	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        double    xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	159	None	add
539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  0));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  0));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	75	6	replace
540	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  0));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  0));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  0));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	75	6	replace
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	75	6	replace
542	[BUG]  [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  y  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	75	6	replace
543	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    double    x    =    x;    y    =    y;    }    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	29	None	replace
544	[BUG]  [BUGGY]  double  x  =  x;  y  =  y;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x;  y  =  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x;  y  =  y;	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    double    x    =    x;    y    =    y;    }    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	29	None	replace
545	[BUG]  [BUGGY]  xbar  =  x;  (double)xbar  =  n;  [CE]  unexpected  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  (double)xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  (double)xbar  =  n;	  xbar    =    n;    (double)xbar    =    n;    	non-compiled	[CE]  unexpected  type	201	None	replace
546	[BUG]  [BUGGY]  xbar  =  0;  (double)xbar  =  0;  [CE]  unexpected  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (double)xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (double)xbar  =  0;	  xbar    =    n;    (double)xbar    =    n;    	non-compiled	[CE]  unexpected  type	201	None	replace
547	[BUG]  [BUGGY]  xbar  =  x;  (double)xbar  =  y;  [CE]  unexpected  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  (double)xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  (double)xbar  =  y;	  xbar    =    n;    (double)xbar    =    n;    	non-compiled	[CE]  unexpected  type	201	None	replace
548	[BUG]  [BUGGY]  remove(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  remove(new  Double(x,  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	remove(new  Double(x,  new  Double(y));	  add(new    Double(x,    new    Double(y));    	non-compiled	[CE]  ')'  expected	164	None	replace
549	[BUG]  [BUGGY]  add(new  Double(x,  new  Double(y),  n);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  new  Double(y),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  Double(y),  n);	  add(new    Double(x,    new    Double(y));    	non-compiled	[CE]  ')'  expected	164	None	replace
550	[BUG]  [BUGGY]  _add(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x,  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x,  new  Double(y));	  add(new    Double(x,    new    Double(y));    	non-compiled	[CE]  ')'  expected	164	None	replace
551	[BUG]  [BUGGY]  _add(new  Double(x),  new  Double(y,  n));  [CE]  no  suitable  constructor  found  for  Double(double,long)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x),  new  Double(y,  n));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x),  new  Double(y,  n));	  _add(new    Double(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,long)	50	None	replace
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  /  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  /  1;	  xbar    =    x    *    1;    	compilable	  [FE]  AssertionFailedError  	154	1	replace
553	[BUG]  [BUGGY]  xbar  =  x  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  /  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  /  1;	  xbar    =    x    *    1;    	compilable	  [FE]  AssertionFailedError  	154	1	replace
554	[BUG]  [BUGGY]  xbar  =  x;  (xbar  =  x  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  (xbar  =  x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  (xbar  =  x  +  1);	  xbar    =    x    +    1;    (xbar    =    x    +    1);    	non-compiled	[CE]  not  a  statement	134	None	replace
555	[BUG]  [BUGGY]  (xbar  =  x  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  (xbar  =  x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	(xbar  =  x  +  1);	  xbar    =    x    +    1;    (xbar    =    x    +    1);    	non-compiled	[CE]  not  a  statement	134	None	replace
556	[BUG]  [BUGGY]  xbar  =  x;  (xbar  =  y  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  (xbar  =  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  (xbar  =  y  +  1);	  xbar    =    x    +    1;    (xbar    =    x    +    1);    	non-compiled	[CE]  not  a  statement	134	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.rint((  double)n  +  1.0);	  xbar    =    x    +(int)Math.rint((    double)n    +    1);    	compilable	  [FE]  AssertionFailedError  	107	5	replace
558	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n  +  1.0);	  xbar    =    x    +(int)Math.rint((    double)n    +    1);    	compilable	  [FE]  AssertionFailedError  	107	5	replace
559	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
560	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
561	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
562	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
563	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	26	9	replace
564	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	26	9	replace
565	[BUG]  [BUGGY]  setData(x,  y);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  setData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	setData(x,  y);	          addData(x,    y);    setData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
566	[BUG]  [BUGGY]  addData(x,  y);  setData(x,  ybar);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y);  setData(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y);  setData(x,  ybar);	          addData(x,    y);    setData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
567	[BUG]  [BUGGY]  n  =  addData(x,  y);  setData(x,  y);  [CE]  incompatible  types  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  addData(x,  y);  setData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  addData(x,  y);  setData(x,  y);	          addData(x,    y);    setData(x,    y);    	non-compiled	[CE]  incompatible  types	180	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    2;    xbar  =  x  +  2;	  	compilable	  [FE]  AssertionFailedError  	52	1	add
569	[BUG]  [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    2;    xbar  =  x  +  2;	  	compilable	  [FE]  AssertionFailedError  	52	1	add
570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  double  xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    2;    double  xbar  =  x  +  2;	  	compilable	  [FE]  AssertionFailedError  	52	5	add
571	[BUG]  [BUGGY]  xbar  =  x  +  2;  double  xbar  =  x  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  double  xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    2;    double  xbar  =  x  +  2;	  	compilable	  [FE]  AssertionFailedError  	52	5	add
572	[BUG]  [BUGGY]  xbar  =  x  +  2;  int  xbar  =  x  +  2;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  int  xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    2;    int  xbar  =  x  +  2;	  	non-compiled	[CE]  possible  loss  of  precision	52	None	add
573	[BUG]  [BUGGY]  xbar  =  x  +  2;  (xbar  =  x  +  2;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  (xbar  =  x  +  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    2;    (xbar  =  x  +  2;	  	non-compiled	[CE]  ')'  expected	52	None	add
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  3;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +    2;    xbar  =  x  +  3;	  	compilable	  [FE]  AssertionFailedError  	52	1	add
575	[BUG]  [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  3;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  2;  xbar  =  x  +  3;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    2;    xbar  =  x  +  3;	  	compilable	  [FE]  AssertionFailedError  	52	1	add
576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  double  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    1.0;    double  xbar  =  1.0;	  	compilable	  [FE]  AssertionFailedError  	85	4	add
577	[BUG]  [BUGGY]  xbar  =  1.0;  double  xbar  =  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  double  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    double  xbar  =  1.0;	  	compilable	  [FE]  AssertionFailedError  	85	4	add
578	[BUG]  [BUGGY]  xbar  =  1.0;  (double)xbar  =  1.0;  [CE]  unexpected  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  (double)xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    (double)xbar  =  1.0;	  	non-compiled	[CE]  unexpected  type	85	None	add
579	[BUG]  [BUGGY]  xbar  =  1.0;  int  xbar  =  1.0;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  int  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    int  xbar  =  1.0;	  	non-compiled	[CE]  possible  loss  of  precision	85	None	add
580	[BUG]  [BUGGY]  xbar  =  1.0;  ||  xbar  ==  1.0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ||  xbar  ==  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    ||  xbar  ==  1.0;	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n;  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n;  xbar  =  n  +  1;	  xbar    =    n;    xbar    =    n);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
582	[BUG]  [BUGGY]  xbar  =  n;  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n;  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n;  xbar  =  n  +  1;	  xbar    =    n;    xbar    =    n);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
583	[BUG]  [BUGGY]  xbar  =  x;  xbar  =  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  xbar  =  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  xbar  =  n);	  xbar    =    n;    xbar    =    n);    	non-compiled	[CE]  ';'  expected	41	None	replace
584	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	138	9	replace
585	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	138	9	replace
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
587	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
588	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
589	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	138	9	replace
590	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	138	9	replace
591	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(x,    y    +    1);    x  =  Math.min(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	4	add
592	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    x  =  Math.min(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	4	add
593	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    x  =  Math.min(x,  y  +  1));	  	non-compiled	[CE]  ';'  expected	64	None	add
594	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  double  x  =  Math.min(x,  y  +  1);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  double  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    double  x  =  Math.min(x,  y  +  1);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	64	None	add
595	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(x,    y    +    1);    x  =  Math.max(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	5	add
596	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    x  =  Math.max(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	5	add
597	[BUG]  [BUGGY]  _add(new  Double(x),  new  double(y)+  1);  [CE]  '['  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x),  new  double(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x),  new  double(y)+  1);	  _add(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	21	None	replace
598	[BUG]  [BUGGY]  _add(new  Double(x),  new  double(y,  n));  [CE]  '['  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x),  new  double(y,  n));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x),  new  double(y,  n));	  _add(new    Double(x),    new    double(y));    	non-compiled	[CE]  '['  expected	21	None	replace
599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.rint((        double)n);        xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
600	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
601	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.rint((        double)n);        xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(long)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
602	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(long)Math.rint((  double)n);  xbar  =  x  +(long)Math.rint((  double)n);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
603	[BUG]  [BUGGY]  double  n  =  Math.log(x);  double  n  =  Math.log(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x);  double  n  =  Math.log(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.log(x);    double  n  =  Math.log(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	10	None	add
604	[BUG]  [BUGGY]  double  n  =  Math.log(x);  Double  n  =  Math.log(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x);  Double  n  =  Math.log(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.log(x);    Double  n  =  Math.log(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	10	None	add
605	[BUG]  [BUGGY]  double  n  =  Math.log(x);  long  n  =  Math.log(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x);  long  n  =  Math.log(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.log(x);    long  n  =  Math.log(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	10	None	add
606	[BUG]  [BUGGY]  double  n  =  Math.log(x);  int  n  =  Math.log(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(x);  int  n  =  Math.log(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.log(x);    int  n  =  Math.log(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	10	None	add
607	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  y));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x,  y));	          double    ybar    =    Math.sqrt(new    Integer(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	192	None	replace
608	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  y);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  y);	          double    ybar    =    Math.sqrt(new    Integer(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	192	None	replace
609	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  n);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  n);	          double    ybar    =    Math.sqrt(new    Integer(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	192	None	replace
610	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(0));  [timeout]  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(0));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(0));	          double    ybar    =    Math.sqrt(new    Integer(x));    	non-compiled	[timeout]	192	None	replace
611	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
612	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
613	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	74	None	add
614	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
615	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
617	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	74	1	add
618	[BUG]  [BUGGY]  rehashTable(x,  y,  n);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashTable(x,  y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(x,  y,  n);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
619	[BUG]  [BUGGY]  RehashTable.this.addData(x,  y);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RehashTable.this.addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RehashTable.this.addData(x,  y);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
620	[BUG]  [BUGGY]  RegressionMap.this.addData(x,  y);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RegressionMap.this.addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RegressionMap.this.addData(x,  y);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
621	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	136	9	replace
622	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	136	9	replace
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
624	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
625	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
626	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	136	9	replace
627	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  StackOverflowError  	136	9	replace
628	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y    +    1);    x  =  Math.max(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	3	add
629	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    +    1);    x  =  Math.max(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	3	add
630	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  1));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    +    1);    x  =  Math.max(x,  y  +  1));	  	non-compiled	[CE]  ';'  expected	124	None	add
631	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  double  x  =  Math.max(x,  y  +  1);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  double  x  =  Math.max(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    +    1);    double  x  =  Math.max(x,  y  +  1);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	124	None	add
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y    +    1);    x  =  Math.min(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	5	add
633	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    +    1);    x  =  Math.min(x,  y  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	5	add
634	[BUG]  [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y);  [CE]  inconvertible  types  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y);	  xbar    =    0;    ((    Double)n).doubleValue().computeValue(x,    y);    	non-compiled	[CE]  inconvertible  types	199	None	replace
635	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y  +  1);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  y  +  1);	  xbar    =    0;    ((    Double)n).doubleValue().computeValue(x,    y);    	non-compiled	[CE]  inconvertible  types	199	None	replace
636	[BUG]  [BUGGY]  ((  Double)n).doubleValue().computeValue(x,  y);  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ((  Double)n).doubleValue().computeValue(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	((  Double)n).doubleValue().computeValue(x,  y);	  xbar    =    0;    ((    Double)n).doubleValue().computeValue(x,    y);    	non-compiled	[CE]  inconvertible  types	199	None	replace
637	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  ybar  =  Math.sqrt(new  Double(x));  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.sqrt(new    Double(x));    double  ybar  =  Math.sqrt(new  Double(x));	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	175	None	add
638	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  Double  ybar  =  Math.sqrt(new  Double(x));  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  Double  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.sqrt(new    Double(x));    Double  ybar  =  Math.sqrt(new  Double(x));	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	175	None	add
639	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  long  ybar  =  Math.sqrt(new  Double(x));  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  long  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.sqrt(new    Double(x));    long  ybar  =  Math.sqrt(new  Double(x));	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	175	None	add
640	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  xbar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    Math.sqrt(new    Double(x));    double  xbar  =  Math.sqrt(new  Double(x));	  	compilable	  [FE]  AssertionFailedError  	175	5	add
641	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  xbar  =  Math.sqrt(new  Double(x));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  xbar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.sqrt(new    Double(x));    double  xbar  =  Math.sqrt(new  Double(x));	  	compilable	  [FE]  AssertionFailedError  	175	5	add
642	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
643	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
644	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	94	5	add
646	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	94	5	add
647	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  double  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  double  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    double  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	94	None	add
648	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y;	  	non-compiled	[CE]  ')'  expected	94	None	add
649	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  Y);  x  =  Math.max(x,  y);  [CE]  cannot  find  symbol  Y  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  Y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  Y);  x  =  Math.max(x,  y);	  	non-compiled	[CE]  cannot  find  symbol  Y	94	None	add
650	[BUG]  [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        double    xbar    =    x    +    1;    xbar  =  x  +  1;  double  xbar  =  x  +  1;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	130	None	add
651	[BUG]  [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        double    xbar    =    x    +    1;    double  xbar  =  x  +  1;  double  xbar  =  x  +  1;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	130	None	add
652	[BUG]  [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;  Double  xbar  =  x  +  1;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;  Double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        double    xbar    =    x    +    1;    xbar  =  x  +  1;  Double  xbar  =  x  +  1;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	130	None	add
653	[BUG]  [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  int  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  int  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        double    xbar    =    x    +    1;    int  xbar  =  x  +  1;  double  xbar  =  x  +  1;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	130	None	add
654	[BUG]  [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  Double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    double  xbar  =  x  +  1;  Double  xbar  =  x  +  1;  double  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        double    xbar    =    x    +    1;    Double  xbar  =  x  +  1;  double  xbar  =  x  +  1;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	130	None	add
655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	79	1	add
656	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	79	1	add
657	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	79	5	add
658	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	79	5	add
659	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  double  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  double  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    double  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	79	None	add
660	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  x  =  Math.max(x,  y;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  x  =  Math.max(x,  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  y;	  	non-compiled	[CE]  ')'  expected	79	None	add
661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)/  2;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y)/  2;	  x    =    Math.max(x,    y)/;    	compilable	  [FE]  AssertionFailedError  	179	5	replace
662	[BUG]  [BUGGY]  x  =  Math.max(x,  y)/  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)/  2;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y)/  2;	  x    =    Math.max(x,    y)/;    	compilable	  [FE]  AssertionFailedError  	179	5	replace
663	[BUG]  [BUGGY]  x  =  Math.min(x,  y)/;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)/;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y)/;	  x    =    Math.max(x,    y)/;    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
665	[BUG]  [BUGGY]  x  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
666	[BUG]  [BUGGY]  x  =  Math.min(x,  y).min(x,  ybar);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y).min(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y).min(x,  ybar);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
667	[BUG]  [BUGGY]  x  =  Math.min(x,  y).min(x,  y);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y).min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y).min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
668	[BUG]  [BUGGY]  x  =  Math.min(y,  x).min(x,  y);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x).min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  x).min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
669	[BUG]  [BUGGY]  x  =  Math.min(x,  y).min(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y).min(x,  yBar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y).min(x,  yBar);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	194	None	replace
670	[BUG]  [BUGGY]  double  x  =  y.doubleValue()  *  n;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  y.doubleValue()  *  n;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  y.doubleValue()  *  n;	  double    x    =    y.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	34	None	replace
671	[BUG]  [BUGGY]  double  x  =  y.doubleValue()  +  n  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  y.doubleValue()  +  n  +  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  y.doubleValue()  +  n  +  1;	  double    x    =    y.doubleValue()    +    n;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	34	None	replace
672	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  +  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  +  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  +  1;	  double    x    =    n.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	114	None	replace
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.min(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y);  x  =  Math.min(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
674	[BUG]  [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.min(x,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.min(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y);  x  =  Math.min(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  n);  x  =  Math.min(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
676	[BUG]  [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  n);  x  =  Math.min(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
677	[BUG]  [BUGGY]  double  n  =  Math.min(double,  Math.abs(y)-  1);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(double,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(double,  Math.abs(y)-  1);	  double    n    =    Math.min(double,    Math.abs(x)-    1);    	non-compiled	[CE]  '.class'  expected	72	None	replace
678	[BUG]  [BUGGY]  double  n  =  Math.min(double,  Math.abs(x)/  1);  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(double,  Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(double,  Math.abs(x)/  1);	  double    n    =    Math.min(double,    Math.abs(x)-    1);    	non-compiled	[CE]  '.class'  expected	72	None	replace
679	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  double  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  y);  double  n  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    y);    double  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	142	None	add
680	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  Double  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  y);  Double  n  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    y);    Double  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	142	None	add
681	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  long  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  y);  long  n  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    y);    long  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	142	None	add
682	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  int  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  y);  int  n  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    y);    int  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	142	None	add
683	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  n);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  n);	  double    ybar    =    Math.sqrt(new    Integer(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	173	None	replace
684	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y)+  1);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y)+  1);	  double    ybar    =    Math.sqrt(new    Integer(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	173	None	replace
685	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  0);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x),  new  Double(y),  0);	  double    ybar    =    Math.sqrt(new    Integer(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	173	None	replace
686	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(Math.abs(y),    Math.abs(x));    double  n  =  Math.min(Math.abs(y),  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	184	None	add
687	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  Double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  Double  n  =  Math.min(Math.abs(y),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(Math.abs(y),    Math.abs(x));    Double  n  =  Math.min(Math.abs(y),  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	184	None	add
688	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  double  n  =  Math.min(Math.abs(x),  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  double  n  =  Math.min(Math.abs(x),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(Math.abs(y),    Math.abs(x));    double  n  =  Math.min(Math.abs(x),  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	184	None	add
689	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  long  n  =  Math.min(Math.abs(y),  Math.abs(x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x));  long  n  =  Math.min(Math.abs(y),  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(Math.abs(y),    Math.abs(x));    long  n  =  Math.min(Math.abs(y),  Math.abs(x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	184	None	add
690	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  	compilable	  [FE]  AssertionFailedError  	190	1	add
691	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  	compilable	  [FE]  AssertionFailedError  	190	1	add
692	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  	non-compiled	[CE]  cannot  find  symbol	190	None	add
693	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);  [CE]  cannot  find  symbol  Y  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)/  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Y	190	None	add
694	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0;	  	non-compiled	[CE]  ')'  expected	190	None	add
695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	169	1	add
696	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	169	1	add
697	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(11,  y));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(11,  y));	  	non-compiled	[CE]  ';'  expected	169	None	add
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	169	1	add
699	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	compilable	  [FE]  AssertionFailedError  	169	1	add
700	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(12,  y));  xbar  =  x  +(int)Math.pow(11,  y));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(12,  y));  xbar  =  x  +(int)Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(12,  y));  xbar  =  x  +(int)Math.pow(11,  y));	  	non-compiled	[CE]  ';'  expected	169	None	add
701	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
702	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
703	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	27	9	add
704	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	27	9	add
705	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
706	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  [CE]  'else'  without  'if'  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {	  	non-compiled	[CE]  'else'  without  'if'	27	None	add
707	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +        1;        xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	128	1	add
708	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	128	1	add
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  double  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar        =        x        +        1;        xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	128	5	add
710	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  double  xbar  =  x  +  1;  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  double  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    double  xbar  =  x  +  1;  xbar  =  x  +  1;	  	compilable	  [FE]  AssertionFailedError  	128	5	add
711	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  int  xbar  =  x  +  1;  xbar  =  x  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  int  xbar  =  x  +  1;  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    int  xbar  =  x  +  1;  xbar  =  x  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	128	None	add
712	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xBar  =  x  +  1;  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xBar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    xbar  =  x  +  1;  xBar  =  x  +  1;	  	non-compiled	[CE]  cannot  find  symbol  xBar	128	None	add
713	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xbar  =  x  +  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1;  xbar  =  x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1);	  	non-compiled	[CE]  ';'  expected	128	None	add
714	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  addData(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    addData(x,  y  +  1);	  	compilable	  [FE]  StackOverflowError  	97	9	add
715	[BUG]  [BUGGY]  addData(x,  y  +  1);  addData(x,  y  +  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  addData(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    addData(x,  y  +  1);	  	compilable	  [FE]  StackOverflowError  	97	9	add
716	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  y  +  1);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  y  +  1);  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
717	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  y  +  1);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  y  +  1);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  y  +  1);  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
718	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
719	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
720	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	97	None	add
721	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
722	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
723	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(y,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.min(y,  x);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
724	[BUG]  [BUGGY]  double  ybar  =  Math.min(y,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(y,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.min(y,  x);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
725	[BUG]  [BUGGY]  double  ybar  =  Math.log(x,  y);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.log(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.log(x,  y);	  double    ybar    =    Math.min(x,    y);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	61	None	replace
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.max(0,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
727	[BUG]  [BUGGY]  double  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.max(0,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	168	5	replace
729	[BUG]  [BUGGY]  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	168	5	replace
730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	168	5	replace
731	[BUG]  [BUGGY]  double  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	compilable	  [FE]  AssertionFailedError  	168	5	replace
732	[BUG]  [BUGGY]  (xbar  =  0;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  (xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	(xbar  =  0;	  xbar    =    0;    (xbar    =    0;    	non-compiled	[CE]  ')'  expected	158	None	replace
733	[BUG]  [BUGGY]  double  x  =  x.doubleValue()  *  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  x.doubleValue()  *  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  x.doubleValue()  *  1;	  double    x    =    x.doubleValue()    +    1;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	115	None	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x  +  1.0);	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
735	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  +  1.0);	  double    n    =    Math.abs(x    +    1);    	compilable	  [FE]  AssertionFailedError  	13	5	replace
736	[BUG]  [BUGGY]  rehash(new  Double(x));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehash(new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehash(new  Double(x));	  add(new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
737	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    double    x    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
738	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    double    x    =    x;    y    =    y;    }    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	29	None	replace
739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y);  x  =  Math.max(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
740	[BUG]  [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.max(x,  ybar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y);  x  =  Math.max(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y);  x  =  Math.max(x,  ybar);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  n);  x  =  Math.max(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
742	[BUG]  [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  n);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  n);  x  =  Math.max(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	compilable	  [FE]  AssertionFailedError  	186	5	replace
743	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x)+  1);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x)+  1);	          double    ybar    =    Math.sqrt(new    Integer(x));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	192	None	replace
744	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  ybar  +  1);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  ybar  +  1);  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
745	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  ybar  +  1);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  ybar  +  1);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  addData(x,  ybar  +  1);  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	6	replace
747	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)/  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)/  2.0);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    	compilable	  [FE]  AssertionFailedError  	191	6	replace
748	[BUG]  [BUGGY]  _add(new  Double(x));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(x));	  _add(new    Double(x),    new    double(y));    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
749	[BUG]  [BUGGY]  _add(new  Double(y),  new  Double(x));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(y),  new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(y),  new  Double(x));	  _add(new    Double(x),    new    double(y));    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
750	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar,  n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  ybar,  n);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	105	None	replace
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n  *  1;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
752	[BUG]  [BUGGY]  xbar  =  n  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  *  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n  *  1;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	5	replace
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(ybar,  Math.abs(x)/  1);	  double    n    =    Math.min(ybar,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	162	5	replace
754	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)/  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(ybar,  Math.abs(x)/  1);	  double    n    =    Math.min(ybar,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	162	5	replace
755	[BUG]  [BUGGY]  xbar  =  0;  ||  xbar  ==  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ||  xbar  ==  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ||  xbar  ==  0;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
756	[BUG]  [BUGGY]  xbar  =  n;  ||  xbar  ==  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n;  ||  xbar  ==  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n;  ||  xbar  ==  0;	  xbar    =    n;    ||    xbar    ==    n;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
757	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  ybar));	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	non-compiled	[CE]  ';'  expected	84	None	replace
758	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y)+  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  y)+  1);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	non-compiled	[CE]  ';'  expected	84	None	replace
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  0);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  0);  x  =  Math.min(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
760	[BUG]  [BUGGY]  x  =  Math.max(x,  0);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  0);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  0);  x  =  Math.min(x,  y);	          x    =    Math.max(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	82	5	replace
761	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(0.0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
762	[BUG]  [BUGGY]  x  =  Math.max(0.0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0.0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(0,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
764	[BUG]  [BUGGY]  x  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    }    else    {    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	193	5	replace
765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  	compilable	  [FE]  AssertionFailedError  	190	5	add
766	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);	  	compilable	  [FE]  AssertionFailedError  	190	5	add
767	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)/  2.0);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)/  2.0);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)/  2.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)/    2.0);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10)/  2.0);	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	190	None	add
768	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  (x  =  Math.max(x,  y)+  1;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  (x  =  Math.max(x,  y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y)+    1;    (x  =  Math.max(x,  y)+  1;	  	non-compiled	[CE]  ')'  expected	144	None	add
769	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }	  xbar    =    x    +    1;    (xbar    =    x    +    1;    	non-compiled	[CE]  ')'  expected	133	None	replace
770	[BUG]  [BUGGY]  double  xbar  =  x  +  1;  (xbar  =  x  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +  1;  (xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +  1;  (xbar  =  x  +  1;	  xbar    =    x    +    1;    (xbar    =    x    +    1;    	non-compiled	[CE]  ')'  expected	133	None	replace
771	[BUG]  [BUGGY]  add(new  Double(y,  new  Double(x));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(y,  new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(y,  new  Double(x));	  add(new    Double(x,    new    Double(y));    	non-compiled	[CE]  ')'  expected	164	None	replace
772	[BUG]  [BUGGY]  _addData(x,  ybar);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _addData(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(x,  ybar);	  _addData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
773	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  double  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n    -    1);    double  xbar  =  x  +(int)Math.rint((  double)n  -  1);	  	compilable	  [FE]  AssertionFailedError  	156	5	add
774	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  double  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  -  1);  double  xbar  =  x  +(int)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    -    1);    double  xbar  =  x  +(int)Math.rint((  double)n  -  1);	  	compilable	  [FE]  AssertionFailedError  	156	5	add
775	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
776	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
777	[BUG]  [BUGGY]  if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
778	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  n  +  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  n  +  1);	  xbar    =    x    +(int)Math.rint((    double)n    +    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
780	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  n));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
781	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)+  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    	compilable	  [FE]  AssertionFailedError  	109	8	replace
782	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)+  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    	compilable	  [FE]  AssertionFailedError  	109	8	replace
783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  	compilable	  [FE]  AssertionFailedError  	112	5	add
784	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  	compilable	  [FE]  AssertionFailedError  	112	5	add
785	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  int  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  int  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    int  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);	  	non-compiled	[CE]  possible  loss  of  precision	112	None	add
786	[BUG]  [BUGGY]  xbar  =  1;  (xbar  =  0;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  (xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1;  (xbar  =  0;	  xbar    =    0;    (xbar    =    0;    	non-compiled	[CE]  ')'  expected	158	None	replace
787	[BUG]  [BUGGY]  double  xbar  =  0;  (xbar  =  0;  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  (xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  (xbar  =  0;	  xbar    =    0;    (xbar    =    0;    	non-compiled	[CE]  ')'  expected	158	None	replace
788	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
789	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
790	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	28	9	replace
791	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  ybar);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  0,  ybar);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
792	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  1);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
793	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  Math.pow(10,  n),  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  Math.pow(10,  n),  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  Math.pow(10,  n),  0);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
794	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  2);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  2);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  2);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
795	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0,  Math.abs(y)-  1);	  double    n    =    Math.min(x,    Math.abs(y)-    1);    	compilable	  [FE]  AssertionFailedError  	69	5	replace
796	[BUG]  [BUGGY]  double  n  =  Math.min(0,  Math.abs(y)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0,  Math.abs(y)-  1);	  double    n    =    Math.min(x,    Math.abs(y)-    1);    	compilable	  [FE]  AssertionFailedError  	69	5	replace
797	[BUG]  [BUGGY]  xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [CE]  inconvertible  types  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(Integer)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(Int)Math.pow(10,    Math.pow(10,    y));    	non-compiled	[CE]  inconvertible  types	187	None	replace
798	[BUG]  [BUGGY]  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(Int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(Int)Math.pow(10,    Math.pow(10,    y));    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
799	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  y  =  Math.min(y,  Math.abs(x)-  1);  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)-  1);  double  y  =  Math.min(y,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x)-    1);    double  y  =  Math.min(y,  Math.abs(x)-  1);	  	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	70	None	add
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  ybar  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(x,  ybar  +  1);	  x    =    Math.min(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	65	5	replace
801	[BUG]  [BUGGY]  x  =  Math.min(x,  ybar  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  ybar  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  ybar  +  1);	  x    =    Math.min(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	65	5	replace
802	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  StackOverflowError  	24	9	replace
803	[BUG]  [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  StackOverflowError  	24	9	replace
804	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  StackOverflowError  	24	9	replace
805	[BUG]  [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  StackOverflowError  	24	9	replace
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(n  >  0)  {  addData(x,  y);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
807	[BUG]  [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  addData(x,  y);  }	          addData(x,    y);    addData(x,    y);    	compilable	  [FE]  AssertionFailedError  	24	5	replace
808	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,  y  +  2);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
809	[BUG]  [BUGGY]  addData(x,  y  +  2);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y  +  2);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
810	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  ybar);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  ybar);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
811	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(xbar,  y);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(xbar,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(xbar,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
812	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(x,  y).min(x,  y);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(x,  y).min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  x);  x  =  Math.min(x,  y).min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	194	None	replace
813	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  yBar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.min(x,  y).min(x,  yBar);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y).min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	194	None	replace
814	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  ybar));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.min(x,  ybar));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.min(x,  ybar));	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y));    	non-compiled	[CE]  ';'  expected	96	None	replace
815	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
816	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
817	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  StackOverflowError  	30	9	add
818	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  StackOverflowError  	30	9	add
819	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(float)Math.rint((  double)n);  xbar  =  x  +(float)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(float)Math.rint((  double)n);  xbar  =  x  +(float)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	118	1	replace
820	[BUG]  [BUGGY]  xbar  =  x  +(float)Math.rint((  double)n);  xbar  =  x  +(float)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(float)Math.rint((  double)n);  xbar  =  x  +(float)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(float)Math.rint((  double)n);  xbar  =  x  +(float)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	118	1	replace
821	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.min(0,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
822	[BUG]  [BUGGY]  double  ybar  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.min(0,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0.0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
824	[BUG]  [BUGGY]  double  n  =  Math.min(0.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0.0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
825	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
826	[BUG]  [BUGGY]  double  n  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
827	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  int  x  =  Math.min(x,  y  +  1);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  int  x  =  Math.min(x,  y  +  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    int  x  =  Math.min(x,  y  +  1);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	64	None	add
828	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  [CE]  inconvertible  types  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue();	  xbar    =    0;    ((    Double)n).doubleValue();    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	197	None	replace
829	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  	compilable	  [FE]  AssertionFailedError  	110	6	add
830	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  	compilable	  [FE]  AssertionFailedError  	110	6	add
831	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  n));	  	compilable	  [FE]  AssertionFailedError  	110	1	add
832	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  n));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    n));    xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  n));	  	compilable	  [FE]  AssertionFailedError  	110	1	add
833	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(x,  Math.abs(y)+  1);	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
834	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y)+  1);	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0,  Math.abs(y));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
836	[BUG]  [BUGGY]  double  n  =  Math.min(0,  Math.abs(y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0,  Math.abs(y));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
837	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  ybar);  [CE]  cannot  find  symbol  setX  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  this.setX  =  Math.min(x,  ybar);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
838	[BUG]  [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y);  x  =  Math.max(x,  yBar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(x,  y);  x  =  Math.max(x,  yBar);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	80	None	replace
839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(0,  x);  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
840	[BUG]  [BUGGY]  x  =  Math.max(0,  x);  x  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0,  x);  x  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
841	[BUG]  [BUGGY]  xbar  =  n  +  1;  (n  +  1)  {  xbar  =  n  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1;  (n  +  1)  {  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    n    +    1;    (n  +  1)  {  xbar  =  n  +  1;	  	non-compiled	[CE]  not  a  statement	56	None	add
842	[BUG]  [BUGGY]  double  xbar  =  n;  ||  xbar  ==  n)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  n;  ||  xbar  ==  n)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  n;  ||  xbar  ==  n)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
843	[BUG]  [BUGGY]  xbar  =  x;  ||  xbar  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x;  ||  xbar  ==  null)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x;  ||  xbar  ==  null)  {	  xbar    =    n;    ||    xbar    ==    n)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
844	[BUG]  [BUGGY]  rehashTable(this.data,  x,  y);  [CE]  cannot  find  symbol  data  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashTable(this.data,  x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(this.data,  x,  y);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol  data	196	None	replace
845	[BUG]  [BUGGY]  RegressionMap.this.rehashTable(x,  y);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RegressionMap.this.rehashTable(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RegressionMap.this.rehashTable(x,  y);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
846	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0,  xbar  =  0;  xbar  =  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0,  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    xbar  =  0,  xbar  =  0;  xbar  =  0;	  	non-compiled	[CE]  ';'  expected	1	None	add
847	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0;  xBar  =  0;  [CE]  cannot  find  symbol  xBar  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  xbar  =  0;  xBar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    xbar  =  0;  xBar  =  0;	  	non-compiled	[CE]  cannot  find  symbol  xBar	1	None	add
848	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0  *  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +  1.0  *  y;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	5	replace
849	[BUG]  [BUGGY]  xbar  =  x  +  1.0  *  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0  *  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +  1.0  *  y;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	5	replace
850	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  xbar  =  x;  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  AssertionFailedError  	151	1	replace
851	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  xbar  =  x;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +  1;  xbar  =  x  +  1;  }  else  {  xbar  =  x;  }	  xbar    =    x    +    1;    xbar    =    x    +    1);    	compilable	  [FE]  AssertionFailedError  	151	1	replace
852	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  Math.abs(y)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
853	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(y)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(y)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
854	[BUG]  [BUGGY]  double  xbar  =  0;  ||  xbar  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  0;  ||  xbar  ==  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  0;  ||  xbar  ==  0)  {	  xbar    =    0;    ||    xbar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
855	[BUG]  [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x),  Math.abs(y));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(ybar,  Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(ybar,  Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(mapping,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	43	None	replace
856	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(y,  x)-  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
857	[BUG]  [BUGGY]  x  =  Math.min(y,  x)-  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  x)-  1;	  x    =    Math.min(x,    y)-    1;    	compilable	  [FE]  AssertionFailedError  	67	5	replace
858	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
859	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  yBar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    Math.min(x,    y);    double  yBar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	4	add
860	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  double  yBar  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  yBar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    double  yBar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	4	add
861	[BUG]  [BUGGY]  RegressionMap.this.rehash(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RegressionMap.this.rehash(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RegressionMap.this.rehash(new  Double(x),  new  Double(y));	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
862	[BUG]  [BUGGY]  rehash(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehash(new  Double(x,  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehash(new  Double(x,  new  Double(y));	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	163	None	replace
863	[BUG]  [BUGGY]  rehashTable(x,  y);  setResult(x,  y);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashTable(x,  y);  setResult(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(x,  y);  setResult(x,  y);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
864	[BUG]  [BUGGY]  addData(x,  y);  setResult(xbar,  y);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y);  setResult(xbar,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y);  setResult(xbar,  y);	          addData(x,    y);    setResult(x,    y);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
865	[BUG]  [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue();  xbar  =  1.0;  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue();  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1.0;  ((  Double)n).doubleValue();  xbar  =  1.0;	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	200	None	replace
866	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue();  xbar  =  0.0;  [CE]  inconvertible  types  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue();  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0.0;  ((  Double)n).doubleValue();  xbar  =  0.0;	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	200	None	replace
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    new    Double(x);    xbar  =  new  Double(x).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	58	1	add
868	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).doubleValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	58	1	add
869	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerCase(y);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerCase(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x).setLowerCase(y);	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
870	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerBound(1.0,  1.0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerBound(1.0,  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x).setLowerBound(1.0,  1.0);	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
871	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerCase(n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x).setLowerCase(n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x).setLowerCase(n);	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
872	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.pow(10,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.pow(10,  x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
873	[BUG]  [BUGGY]  double  n  =  Math.pow(10,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.pow(10,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.pow(10,  x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
874	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.log(y);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
875	[BUG]  [BUGGY]  double  n  =  Math.log(y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.log(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.log(y);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
876	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  x  =  Math.min(x,  Y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	81	None	add
877	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(y));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(y));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
878	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(y));  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(y));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(y));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
879	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(x));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(x));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
880	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(x));  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(x));  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  addData(new  Double(x),  new  Double(x));  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
881	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
882	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  xbar  =  x;  ybar  =  y;  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	146	9	add
883	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    if(n  >  0)  {  addData(new  Double(x),  new  Double(y));  }  else  {  double  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	146	None	add
884	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar);  xbar  =  x  +(Int)Math.rint((  double)n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar);  xbar  =  x  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  ybar);  xbar  =  x  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	119	None	replace
885	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  x  +(Int)Math.rint((  double)n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  x  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  x  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	119	None	replace
886	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  Math.PI);  xbar  =  x  +(Int)Math.rint((  double)n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  Math.PI);  xbar  =  x  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  Math.PI);  xbar  =  x  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	119	None	replace
887	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
888	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
889	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  y  =  Math.min(y,  Math.abs(x));  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x));  double  y  =  Math.min(y,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(y,    Math.abs(x));    double  y  =  Math.min(y,  Math.abs(x));	  	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	16	None	add
890	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  int  xbar  =  n;  xbar  =  n;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  int  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    int  xbar  =  n;  xbar  =  n;	  	non-compiled	[CE]  possible  loss  of  precision	35	None	add
891	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue();	  xbar    =    0;    ((    Double)n).doubleValue()    /((    Double)n).doubleValue());    	non-compiled	[CE]  not  a  statement	198	None	replace
892	[BUG]  [BUGGY]  RemoveData(x,  y);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  RemoveData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	RemoveData(x,  y);	          addData(x,    y);    removeData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
893	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
894	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
895	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
896	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  	compilable	  [FE]  AssertionFailedError  	108	7	add
898	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);	  	compilable	  [FE]  AssertionFailedError  	108	7	add
899	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)+  1);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10)+  1);	  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	108	None	add
900	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)xbar).doubleValue()  =  0.0;  [CE]  unexpected  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)xbar).doubleValue()  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)xbar).doubleValue()  =  0.0;	  	non-compiled	[CE]  unexpected  type	89	None	add
901	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)xbar).doubleValue()  <  =  0.0;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)xbar).doubleValue()  <  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)xbar).doubleValue()  <  =  0.0;	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
902	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)xbar).setValue((  double)y);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)xbar).setValue((  double)y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)xbar).setValue((  double)y);	  	non-compiled	[CE]  cannot  find  symbol	89	None	add
903	[BUG]  [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  *  1;  (xbar  =  x  +  1);	  xbar    =    x    +    1;    (xbar    =    x    +    1);    	non-compiled	[CE]  not  a  statement	134	None	replace
904	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [CE]  cannot  find  symbol  Y  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    Y));    	non-compiled	[CE]  cannot  find  symbol  Y	77	None	replace
905	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  cannot  find  symbol  Y  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    Y));    	non-compiled	[CE]  cannot  find  symbol  Y	77	None	replace
906	[BUG]  [BUGGY]  rehashTable(x,  y);  setData(x,  y);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashTable(x,  y);  setData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(x,  y);  setData(x,  y);	          addData(x,    y);    setData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
907	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  double  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    +(int)Math.rint((    double)n    +    1);    double  xbar  =  x  +(int)Math.rint((  double)n  +  1);	  	compilable	  [FE]  AssertionFailedError  	106	5	add
908	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  double  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n  +  1);  double  xbar  =  x  +(int)Math.rint((  double)n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.rint((    double)n    +    1);    double  xbar  =  x  +(int)Math.rint((  double)n  +  1);	  	compilable	  [FE]  AssertionFailedError  	106	5	add
909	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	this.addData(new  Double(x),  new  Double(y));	  this.addData(x,    y);    	compilable	  [FE]  StackOverflowError  	101	9	replace
910	[BUG]  [BUGGY]  this.addData(new  Double(x),  new  Double(y));  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(new  Double(x),  new  Double(y));	  this.addData(x,    y);    	compilable	  [FE]  StackOverflowError  	101	9	replace
911	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  new  Double(x  +  1.0);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
912	[BUG]  [BUGGY]  xbar  =  new  Double(x  +  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(x  +  1.0);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	5	replace
913	[BUG]  [BUGGY]  add(new  Double(x,  y),  0);  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  y),  0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  y),  0);	  add(new    Double(x,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	47	None	replace
914	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)xbar).doubleValue());  xbar  =  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)xbar).doubleValue());  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)xbar).doubleValue());  xbar  =  1;	  	non-compiled	[CE]  ';'  expected	87	None	add
915	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)xbar).setValue((  double)y);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)xbar).setValue((  double)y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)xbar).setValue((  double)y);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
916	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)xbar).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    1;    ((  Double)xbar).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	87	1	add
917	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)xbar).doubleValue();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)xbar).doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)xbar).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	87	1	add
918	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)xbar).setValue((  double)ybar);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)xbar).setValue((  double)ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)xbar).setValue((  double)ybar);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
919	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
920	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
921	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
922	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(n  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
923	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(y,  n);	  x    =    Math.min(y,    x);    	compilable	  [FE]  AssertionFailedError  	166	5	replace
924	[BUG]  [BUGGY]  x  =  Math.min(y,  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  n);	  x    =    Math.min(y,    x);    	compilable	  [FE]  AssertionFailedError  	166	5	replace
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  yBar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    Math.sqrt(new    Double(x));    double  yBar  =  Math.sqrt(new  Double(x));	  	compilable	  [FE]  AssertionFailedError  	175	4	add
926	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  yBar  =  Math.sqrt(new  Double(x));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x));  double  yBar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.sqrt(new    Double(x));    double  yBar  =  Math.sqrt(new  Double(x));	  	compilable	  [FE]  AssertionFailedError  	175	4	add
927	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  double  x  =  Math.abs(x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  double  x  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(y);  double  x  =  Math.abs(x);	          double    n    =    Math.abs(x);    double    x    =    Math.abs(x);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	155	None	replace
928	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  double  xbar  =  n  /(double)x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    n    /(double)x;    double  xbar  =  n  /(double)x;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
929	[BUG]  [BUGGY]  double  ybar  =  n  /(double)x;  double  xbar  =  n  /(double)x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)x;  double  xbar  =  n  /(double)x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    n    /(double)x;    double  xbar  =  n  /(double)x;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
930	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.rint((  double)n  -  1);	  xbar    =    x    +(double)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	172	5	replace
931	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n  -  1);	  xbar    =    x    +(double)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	172	5	replace
932	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
933	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
934	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
935	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(0.0,  Math.abs(x)-  1);	  double    n    =    Math.min(double,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	72	5	replace
936	[BUG]  [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x)-  1);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(0.0,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(0.0,  Math.abs(x)-  1);	  double    n    =    Math.min(double,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	72	5	replace
937	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  double  x  =  Math.min(x,  Math.abs(y));  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y));  double  x  =  Math.min(x,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    Math.abs(y));    double  x  =  Math.min(x,  Math.abs(y));	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	14	None	add
938	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.max(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  Y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.max(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	94	None	add
939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.max(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(y,  x);  x  =  Math.max(y,  x);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
940	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.max(y,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.max(y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(y,  x);  x  =  Math.max(y,  x);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
941	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(0,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.min(0,  y);  x  =  Math.max(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
942	[BUG]  [BUGGY]  x  =  Math.min(0,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(0,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.min(0,  y);  x  =  Math.max(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.max(x,    y);    	compilable	  [FE]  AssertionFailedError  	95	5	replace
943	[BUG]  [BUGGY]  double  x  =  0.doubleValue();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  0.doubleValue();  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  0.doubleValue();	  double    x    =    y.doubleValue();    	non-compiled	[CE]  ';'  expected	116	None	replace
944	[BUG]  [BUGGY]  add(new  Double(x),  new  Double(y),  this.n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  new  Double(y),  this.n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  new  Double(y),  this.n);	  add(new    Double(x),    new    Double(y),    n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
945	[BUG]  [BUGGY]  xbar  =  1;  (xbar  =  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  (xbar  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  1;  (xbar  =  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
946	[BUG]  [BUGGY]  xbar  =  0;  (ybar  =  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (ybar  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (ybar  =  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
947	[BUG]  [BUGGY]  add(new  Double(x,  new  double(y),  0);  [CE]  '['  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  new  double(y),  0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  double(y),  0);	  add(new    Double(x,    new    double(y));    	non-compiled	[CE]  '['  expected	22	None	replace
948	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  +  2;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  +  2;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  +  2;	  double    x    =    n.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	114	None	replace
949	[BUG]  [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y)+  1);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(x,  Math.abs(y),  Math.abs(y)+  1);	  double    n    =    Math.min(x,    Math.abs(y),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	141	None	replace
950	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  >  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  >  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(y  >  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
951	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  Double  xbar  =  x  +(int)Math.rint((  double)n);  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  xbar  =  x  +(int)Math.rint((  double)n);  Double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        double    xbar    =    x    +(int)Math.rint((    double)n);    xbar  =  x  +(int)Math.rint((  double)n);  Double  xbar  =  x  +(int)Math.rint((  double)n);	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	159	None	add
952	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(y));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x,  y),  new  Double(y));	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	174	None	replace
953	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
954	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
955	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    i));    	compilable	  [FE]  AssertionFailedError  	78	6	replace
956	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  n));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    i));    	compilable	  [FE]  AssertionFailedError  	78	6	replace
957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    x    *    1;    xbar  =  x  *  2;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
958	[BUG]  [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  xbar  =  x  *  2;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    xbar  =  x  *  2;	  	compilable	  [FE]  AssertionFailedError  	153	1	add
959	[BUG]  [BUGGY]  n  =  Math.min(y,  n);  [CE]  possible  loss  of  precision  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  n  =  Math.min(y,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	n  =  Math.min(y,  n);	          addData(x,    y);    addData(x,    Y);    	non-compiled	[CE]  possible  loss  of  precision	183	None	replace
960	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  xbar  =  x  +(double)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    double    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	160	5	replace
961	[BUG]  [BUGGY]  double  xbar  =  x  +(double)Math.rint((  double)n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  xbar  =  x  +(double)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  xbar  =  x  +(double)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    double    xbar    =    x    +(int)Math.rint((    double)n);    	compilable	  [FE]  AssertionFailedError  	160	5	replace
962	[BUG]  [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }  [CE]  'void'  type  not  allowed  here  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  this.addData(x,  y);  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	100	None	add
963	[BUG]  [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }  [CE]  'void'  type  not  allowed  here  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  super.addData(x,  y);  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	100	None	add
964	[BUG]  [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  [CE]  'void'  type  not  allowed  here  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	100	None	add
965	[BUG]  [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [CE]  'void'  type  not  allowed  here  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    if(this.addData(x,  y)!=  null)  {  this.addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	100	None	add
966	[BUG]  [BUGGY]  add(new  Double(x),  ybar);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  ybar);	  add(new    Double(x),    y);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
967	[BUG]  [BUGGY]  xbar  =  1.0;  ((  xbar  =  1.0)  >=  +  1.0);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ((  xbar  =  1.0)  >=  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    ((  xbar  =  1.0)  >=  +  1.0);	  	non-compiled	[CE]  not  a  statement	85	None	add
968	[BUG]  [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  yBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ((  Double)n).doubleValue().computeValue(x,  yBar);	  xbar    =    0;    ((    Double)n).doubleValue().computeValue(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	199	None	replace
969	[BUG]  [BUGGY]  ((  Double)n).doubleValue().computeValue(x,  ybar);  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  ((  Double)n).doubleValue().computeValue(x,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	((  Double)n).doubleValue().computeValue(x,  ybar);	  xbar    =    0;    ((    Double)n).doubleValue().computeValue(x,    y);    	non-compiled	[CE]  inconvertible  types	199	None	replace
970	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  int  xbar  =  0;  double  xbar  =  0;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  int  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    int  xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	3	None	add
971	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  -  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  x  -  n;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
972	[BUG]  [BUGGY]  double  ybar  =  x  -  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  x  -  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  x  -  n;	          double    ybar    =    n    -    xbar;    	compilable	  [FE]  AssertionFailedError  	103	5	replace
973	[BUG]  [BUGGY]  if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }	  xbar    =    n;    (xbar    =    n;    	non-compiled	[CE]  ')'  expected	40	None	replace
974	[BUG]  [BUGGY]  if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  xbar  =  n;  (xbar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  xbar    =    n;    (xbar    =    n;    	non-compiled	[CE]  	40	None	replace
975	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.sqrt(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.sqrt(x);	  double    n    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	9	5	replace
976	[BUG]  [BUGGY]  double  n  =  Math.sqrt(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.sqrt(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.sqrt(x);	  double    n    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	9	5	replace
977	[BUG]  [BUGGY]  double  n  =  Math.min(double,  Math.abs(y));  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(double,  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(double,  Math.abs(y));	  double    n    =    Math.min(double,    Math.abs(x));    	non-compiled	[CE]  '.class'  expected	18	None	replace
978	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(y,  Math.abs(x)+  1);	  double    n    =    Math.min(y,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	17	5	replace
979	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x)+  1);	  double    n    =    Math.min(y,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	17	5	replace
980	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
981	[BUG]  [BUGGY]  if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0.0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
982	[BUG]  [BUGGY]  double  n  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(x,  y);  double  x  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.min(x,    y);    double  x  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	142	None	add
983	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(Math.abs(y),  Math.abs(x)+  1);	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
984	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(y),  Math.abs(x)+  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(y),  Math.abs(x)+  1);	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
985	[BUG]  [BUGGY]  add(x,  ybar);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(x,  ybar);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(x,  ybar);	  add(x,    y);    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
986	[BUG]  [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  ==  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
987	[BUG]  [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
988	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  (xbar  =  x  +  1.0);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  (xbar  =  x  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    (xbar  =  x  +  1.0);	  	non-compiled	[CE]  not  a  statement	54	None	add
989	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  y),  new  Double(y));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  y),  new  Double(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x,  y),  new  Double(y));	  double    ybar    =    Math.sqrt(new    Integer(x),    new    Double(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	173	None	replace
990	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  xbar  =  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  xbar  =  0);	  xbar    =    n;    xbar    =    n);    	non-compiled	[CE]  ';'  expected	41	None	replace
991	[BUG]  [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  Y);  x  =  Math.max(x,  y);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.max(x,    y);    x  =  Math.max(x,  y);  x  =  Math.max(x,  Y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.max(x,        y);        x    =    Math.max(x,    y);    x  =  Math.max(x,  Y);  x  =  Math.max(x,  y);	  	non-compiled	[CE]  cannot  find  symbol  Y	79	None	add
992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  -1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  -1;	  xbar    =    0;    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
993	[BUG]  [BUGGY]  xbar  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  -1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  -1;	  xbar    =    0;    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	2	5	replace
994	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
995	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
996	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	137	9	add
997	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  Double.POSITIVE_INFINITY;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  Double.POSITIVE_INFINITY;	  xbar    =    0;    ((    Double)n).doubleValue();    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	197	9	replace
998	[BUG]  [BUGGY]  xbar  =  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  Double.POSITIVE_INFINITY;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  Double.POSITIVE_INFINITY;	  xbar    =    0;    ((    Double)n).doubleValue();    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	197	9	replace
999	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(x)/  1);  [CE]  no  suitable  method  found  for  min(double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x)/  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(x)/  1);	  double    n    =    Math.min(double,    Math.abs(x)-    1);    	non-compiled	[CE]  no  suitable  method  found  for  min(double)	72	None	replace
1000	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  /  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  /  1.0;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
1001	[BUG]  [BUGGY]  xbar  =  x  /  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  /  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  /  1.0;	  xbar    =    x    +    1.0;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
1002	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
1003	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  xbar  =  x;  ybar  =  y;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  double  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
1004	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
1005	[BUG]  [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  xbar  =  x;  ybar  =  y;  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1);  if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  xbar  =  x;  ybar  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,    y    +    1);    if(y  <  0)  {  addData(x,  y  +  1);  }  else  {  xbar  =  x;  ybar  =  y;  }	  	compilable	  [FE]  StackOverflowError  	97	9	add
1006	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+(int)Math.pow(10,  Math.pow(10,  y));  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10));    	non-compiled	[CE]  ')'  expected	76	None	replace
1007	[BUG]  [BUGGY]  xbar  =  xbar  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  xbar  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  xbar  +(int)Math.rint((  double)n);  xbar  =  xbar  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1008	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  xbar  +(Int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y);  xbar  =  xbar  +(Int)Math.rint((  double)n);	  xbar    =    x    +(int)Math.rint((    double)n);    xbar    =    x    +(Int)Math.rint((    double)n);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	119	None	replace
1009	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  y);  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    addData(x,    y);    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1010	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  new  Double(y));  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Integer(x,  new  Double(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Integer(x,  new  Double(y));	  double    ybar    =    Math.sqrt(new    Integer(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	173	None	replace
1011	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  Ybar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double    ybar    =    Math.min(x,    y);    double  Ybar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	4	add
1012	[BUG]  [BUGGY]  double  ybar  =  Math.min(x,  y);  double  Ybar  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(x,  y);  double  Ybar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    ybar    =    Math.min(x,    y);    double  Ybar  =  Math.min(x,  y);	  	compilable	  [FE]  AssertionFailedError  	60	4	add
1013	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(1,  Math.abs(x)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
1014	[BUG]  [BUGGY]  double  n  =  Math.max(1,  Math.abs(x)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1,  Math.abs(x)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(1,  Math.abs(x)-  1);	  double    n    =    Math.min(y,    Math.abs(x)-    1);    	compilable	  [FE]  AssertionFailedError  	71	5	replace
1015	[BUG]  [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1,  xbar  =  x  +  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +    1;    xbar  =  x  +  1;  xbar  =  x  +  1,  xbar  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +        1;        xbar    =    x    +    1;    xbar  =  x  +  1,  xbar  =  x  +  1;	  	non-compiled	[CE]  ';'  expected	128	None	add
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
1017	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
1018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
1019	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	140	6	replace
1020	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  Y)-  1;  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  Y)-  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    x  =  Math.min(x,  Y)-  1;	  	non-compiled	[CE]  cannot  find  symbol  Y	66	None	add
1021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  2;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(x,    y)-    1;    x  =  Math.min(x,  y)-  2;	  	compilable	  [FE]  AssertionFailedError  	66	5	add
1022	[BUG]  [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y)-  1;  x  =  Math.min(x,  y)-  2;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y)-    1;    x  =  Math.min(x,  y)-  2;	  	compilable	  [FE]  AssertionFailedError  	66	5	add
1023	[BUG]  [BUGGY]  double  n  =  Math.min(value,  Math.abs(x),  Math.abs(y));  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(value,  Math.abs(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(value,  Math.abs(x),  Math.abs(y));	  double    n    =    Math.min(data,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  cannot  find  symbol  value	45	None	replace
1024	[BUG]  [BUGGY]  rehashCode(x,  y);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashCode(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashCode(x,  y);	          addData(x,    y);    removeData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
1025	[BUG]  [BUGGY]  rehashCode();  removeData(x,  y);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashCode();  removeData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashCode();  removeData(x,  y);	          addData(x,    y);    removeData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
1026	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(x));  [CE]  no  suitable  method  found  for  min(double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(x));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	non-compiled	[CE]  no  suitable  method  found  for  min(double)	185	None	replace
1027	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.log(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(Math.log(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
1028	[BUG]  [BUGGY]  double  n  =  Math.min(Math.log(x),  Math.abs(y));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.log(x),  Math.abs(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.log(x),  Math.abs(y));	  double    n    =    Math.min(Math.abs(y),    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	185	5	replace
1029	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	compilable	  [FE]  IllegalArgumentException  	84	9	replace
1030	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	compilable	  [FE]  IllegalArgumentException  	84	9	replace
1031	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	compilable	  [FE]  AssertionFailedError  	84	5	replace
1032	[BUG]  [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  x  =  Math.max(x,  y);  x  =  Math.max(x,  y);  }	          x    =    Math.max(x,    y);    x    =    Math.max(x,    y));    	compilable	  [FE]  AssertionFailedError  	84	5	replace
1033	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  }  else  {  xbar  =  new  Double(x);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  }  else  {  xbar  =  new  Double(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  }  else  {  xbar  =  new  Double(x);	  	non-compiled	[CE]  'else'  without  'if'	58	None	add
1034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  ((  Double)xbar).doubleValue();  xbar  =  new  Double(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    new    Double(x);    ((  Double)xbar).doubleValue();  xbar  =  new  Double(x);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
1035	[BUG]  [BUGGY]  xbar  =  new  Double(x);  ((  Double)xbar).doubleValue();  xbar  =  new  Double(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  ((  Double)xbar).doubleValue();  xbar  =  new  Double(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    ((  Double)xbar).doubleValue();  xbar  =  new  Double(x);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
1036	[BUG]  [BUGGY]  xbar  =  new  Double(x);  ((  Double)xbar).doubleValue().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  ((  Double)xbar).doubleValue().doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    ((  Double)xbar).doubleValue().doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	add
1037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.ybar  =  new  Double(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.ybar  =  new  Double(y);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
1038	[BUG]  [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.ybar  =  new  Double(y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x);  xbar  =  new  Double(x);  this.ybar  =  new  Double(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    new    Double(x);    xbar  =  new  Double(x);  this.ybar  =  new  Double(y);	  	compilable	  [FE]  AssertionFailedError  	58	1	add
1039	[BUG]  [BUGGY]  rehashCode();  setData(x,  y);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashCode();  setData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashCode();  setData(x,  y);	          addData(x,    y);    setData(x,    y);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1040	[BUG]  [BUGGY]  (double)xbar  =  n;  [CE]  unexpected  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  (double)xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	(double)xbar  =  n;	  xbar    =    n;    (double)xbar    =    n;    	non-compiled	[CE]  unexpected  type	201	None	replace
1041	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)-  1);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)-  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)-  1);	  	non-compiled	[CE]  cannot  find  symbol  Y	112	None	add
1042	[BUG]  [BUGGY]  this.addData(x,  y);  This.addData(x,  y);  [CE]  cannot  find  symbol  This  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  This.addData(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    This.addData(x,  y);	  	non-compiled	[CE]  cannot  find  symbol  This	100	None	add
1043	[BUG]  [BUGGY]  this.addData(x,  y);  this.addData(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  this.addData(x,  y);  this.addData(x,  Y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	this.addData(x,    y);    this.addData(x,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	100	None	add
1044	[BUG]  [BUGGY]  rehash(new  Double(y),  new  Double(x));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehash(new  Double(y),  new  Double(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehash(new  Double(y),  new  Double(x));	  rehash(new    Double(x),    new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1045	[BUG]  [BUGGY]          double  ybar  =  n  -  xbar;  double  ybar  =  n  -  xBar;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          double  ybar  =  n  -  xbar;  double  ybar  =  n  -  xBar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                double    ybar    =    n    -    xbar;    double  ybar  =  n  -  xBar;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	102	None	add
1046	[BUG]  [BUGGY]  double  x  =  X.doubleValue();  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  X.doubleValue();  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  X.doubleValue();	  double    x    =    y.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	116	None	replace
1047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(1,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(1,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y));    	compilable	  [FE]  AssertionFailedError  	96	5	replace
1048	[BUG]  [BUGGY]  x  =  Math.max(1,  x);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(1,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(1,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y));    	compilable	  [FE]  AssertionFailedError  	96	5	replace
1049	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  double  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    double    x    =    x;    y    =    y;    }    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	29	None	replace
1050	[BUG]  [BUGGY]  xbar    =    0;    xbar  =  0;  xxbar  =  0;  xbar  =  0;  [CE]  cannot  find  symbol  xxbar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    xbar  =  0;  xxbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        xbar    =    0;    xxbar  =  0;  xbar  =  0;	  	non-compiled	[CE]  cannot  find  symbol  xxbar	1	None	add
1051	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
1052	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(1.0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
1053	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(1.0,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
1054	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(1,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
1055	[BUG]  [BUGGY]  double  n  =  Math.min(1,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(1,  y);	  double    n    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	143	5	replace
1056	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
1057	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
1058	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        addData(x,    y);    if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
1059	[BUG]  [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    addData(x,  y);  if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        addData(x,    y);    if(y  >  0)  {  addData(x,  y);  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	  	compilable	  [FE]  StackOverflowError  	23	9	add
1060	[BUG]  [BUGGY]  xbar  =  0;  (xbar  >  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (xbar  >  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (xbar  >  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
1061	[BUG]  [BUGGY]  xbar  =  0;  (xbar  <  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  (xbar  <  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  (xbar  <  0);	  xbar    =    0;    (xbar    =    0);    	non-compiled	[CE]  not  a  statement	7	None	replace
1062	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(x  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1063	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(y  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1064	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  x;  y  =  y;  }  if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    sumXY    =    x;    y    =    y;    }    if(n  <  0)  {  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXY  =  y;  }	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
1065	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  cannot  find  symbol  Y	74	None	add
1066	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
1067	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	31	9	replace
1068	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	31	9	replace
1069	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalStateException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	31	9	replace
1070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1071	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1072	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1073	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(11,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1074	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0.0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0.0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1075	[BUG]  [BUGGY]  if(x  <  0.0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0.0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0.0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(11,    y));    	compilable	  [FE]  AssertionFailedError  	170	5	replace
1076	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(n,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  ybar  =  Math.min(n,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
1077	[BUG]  [BUGGY]  double  ybar  =  Math.min(n,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.min(n,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.min(n,  y);	  double    ybar    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	61	5	replace
1078	[BUG]  [BUGGY]  double  n  =  Math.min(data.length,  Math.abs(x));  [CE]  cannot  find  symbol  data  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(data.length,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(data.length,  Math.abs(x));	  double    n    =    Math.min(value,    Math.abs(x));    	non-compiled	[CE]  cannot  find  symbol  data	19	None	replace
1079	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  -  1;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  -  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  -  1;	  double    x    =    n.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	114	None	replace
1080	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }	          addData(x,    y);    addData(x,    Y);    	compilable	  [FE]  StackOverflowError  	183	9	replace
1081	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [FE]  StackOverflowError  [FE]              StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  addData(x,  ybar);  }	          addData(x,    y);    addData(x,    Y);    	compilable	  [FE]  StackOverflowError  	183	9	replace
1082	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(x,  y  +  1.0);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
1083	[BUG]  [BUGGY]  addData(x,  y  +  1.0);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(x,  y  +  1.0);	  addData(x,    y    +    1);    	compilable	  [FE]  StackOverflowError  	98	9	replace
1084	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(1.0,  x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
1085	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(1.0,  x);	  double    n    =    Math.log(x);    	compilable	  [FE]  AssertionFailedError  	11	5	replace
1086	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  else  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  else  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  }  else  {	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
1087	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.rint((  double)n  /  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
1088	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  /  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.rint((  double)n  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.rint((  double)n  /  1);	  xbar    =    x    +(int)Math.rint((    double)n    -    1);    	compilable	  [FE]  AssertionFailedError  	157	1	replace
1089	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  new  Double(x  +  n);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	1	replace
1090	[BUG]  [BUGGY]  xbar  =  new  Double(x  +  n);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  new  Double(x  +  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  new  Double(x  +  n);	  xbar    =    new    Double(x);    	compilable	  [FE]  AssertionFailedError  	59	1	replace
1091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  *  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.abs(x  *  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
1092	[BUG]  [BUGGY]  double  n  =  Math.abs(x  *  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(x  *  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.abs(x  *  1);	  double    n    =    Math.abs(x    -    1);    	compilable	  [FE]  AssertionFailedError  	189	5	replace
1093	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  n  +  1.0;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	4	replace
1094	[BUG]  [BUGGY]  xbar  =  n  +  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  n  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  n  +  1.0;	  xbar    =    n    +    1;    	compilable	  [FE]  AssertionFailedError  	57	4	replace
1095	[BUG]  [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue());  xbar  =  1.0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue());  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    ((  Double)n).doubleValue());  xbar  =  1.0;	  	non-compiled	[CE]  ';'  expected	85	None	add
1096	[BUG]  [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [CE]  inconvertible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    ((  Double)n).doubleValue().computeValue(this,  x,  y);	  	non-compiled	[CE]  inconvertible  types	85	None	add
1097	[BUG]  [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue().computeValue(x,  y);  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1.0;  ((  Double)n).doubleValue().computeValue(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1.0;    ((  Double)n).doubleValue().computeValue(x,  y);	  	non-compiled	[CE]  inconvertible  types	85	None	add
1098	[BUG]  [BUGGY]  double  ybar  =  n  /(double)xBar;  [CE]  cannot  find  symbol  xBar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  n  /(double)xBar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  n  /(double)xBar;	  double    ybar    =    n    /(double)x;    	non-compiled	[CE]  cannot  find  symbol  xBar	63	None	replace
1099	[BUG]  [BUGGY]  int  n  =  Math.abs(x);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  int  n  =  Math.abs(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	int  n  =  Math.abs(x);	          double    n    =    Math.abs(x);    long    n    =    Math.abs(x);    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
1100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.max(1,  Math.abs(x));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
1101	[BUG]  [BUGGY]  double  n  =  Math.max(1,  Math.abs(x));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.max(1,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.max(1,  Math.abs(x));	  double    n    =    Math.min(x,    Math.abs(y));    	compilable	  [FE]  AssertionFailedError  	15	5	replace
1102	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  Y));  [CE]  cannot  find  symbol  Y  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  Y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  Y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    Y));    	non-compiled	[CE]  cannot  find  symbol  Y	77	None	replace
1103	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)n).doubleValue().computeValue(this,  x,  y);	  	non-compiled	[CE]  inconvertible  types	89	None	add
1104	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue().computeValue(x,  y);  [CE]  inconvertible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue().computeValue(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)n).doubleValue().computeValue(x,  y);	  	non-compiled	[CE]  inconvertible  types	89	None	add
1105	[BUG]  [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue());  xbar  =  0.0;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0.0;  ((  Double)n).doubleValue());  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    0.0;    ((  Double)n).doubleValue());  xbar  =  0.0;	  	non-compiled	[CE]  ';'  expected	89	None	add
1106	[BUG]  [BUGGY]  x  =  Math.max(0,  x);  this.setX  =  Math.min(x,  y);  [CE]  cannot  find  symbol  setX  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(0,  x);  this.setX  =  Math.min(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(0,  x);  this.setX  =  Math.min(x,  y);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    this.setX    =    Math.min(x,    y);    	non-compiled	[CE]  cannot  find  symbol  setX	195	None	replace
1107	[BUG]  [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.max(x,  Y)+  1;  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y)+  1;  x  =  Math.max(x,  Y)+  1;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y)+    1;    x  =  Math.max(x,  Y)+  1;	  	non-compiled	[CE]  cannot  find  symbol  Y	144	None	add
1108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.max(x,    y    +    1);    x  =  Math.max(x,  y  +  2);	  	compilable	  [FE]  AssertionFailedError  	124	5	add
1109	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1);  x  =  Math.max(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.max(x,    y    +    1);    x  =  Math.max(x,  y  +  2);	  	compilable	  [FE]  AssertionFailedError  	124	5	add
1110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(x,  y  +  1.0);	  x    =    Math.max(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	125	5	replace
1111	[BUG]  [BUGGY]  x  =  Math.max(x,  y  +  1.0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  y  +  1.0);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  y  +  1.0);	  x    =    Math.max(x,    y    +    1);    	compilable	  [FE]  AssertionFailedError  	125	5	replace
1112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
1113	[BUG]  [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)-  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)-  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(double)Math.pow(10,  Math.pow(10,  y)-  1);	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)-    1);    	compilable	  [FE]  AssertionFailedError  	113	6	replace
1114	[BUG]  [BUGGY]  xbar  =  x  +  1.0;  setbar  =  x  +  1.0;  [CE]  cannot  find  symbol  setbar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +  1.0;  setbar  =  x  +  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +    1.0;    setbar  =  x  +  1.0;	  	non-compiled	[CE]  cannot  find  symbol  setbar	54	None	add
1115	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  setData(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  setData(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    setData(new  Double(x),  new  Double(y));	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
1116	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(x),  new  Double(Y));  [CE]  cannot  find  symbol  Y  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(x),  new  Double(Y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    addData(new  Double(x),  new  Double(Y));	  	non-compiled	[CE]  cannot  find  symbol  Y	146	None	add
1117	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  setResult(new  Double(x),  new  Double(y));  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  setResult(new  Double(x),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    setResult(new  Double(x),  new  Double(y));	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
1118	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(y),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	addData(new    Double(x),    new    Double(y));    addData(new  Double(y),  new  Double(y));	  	compilable	  [FE]  StackOverflowError  	146	9	add
1119	[BUG]  [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(y),  new  Double(y));  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  addData(new  Double(x),  new  Double(y));  addData(new  Double(y),  new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	addData(new    Double(x),    new    Double(y));    addData(new  Double(y),  new  Double(y));	  	compilable	  [FE]  StackOverflowError  	146	9	add
1120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(1.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
1121	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  Math.abs(x));  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(1.0,  Math.abs(x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(1.0,  Math.abs(x));	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
1122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x),  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	double  n  =  Math.min(Math.abs(x),  y);	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
1123	[BUG]  [BUGGY]  double  n  =  Math.min(Math.abs(x),  y);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(Math.abs(x),  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(Math.abs(x),  y);	  double    n    =    Math.min(double,    Math.abs(x));    	compilable	  [FE]  AssertionFailedError  	18	5	replace
1124	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue()  /((  Double)n).doubleValue());  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)n).doubleValue()  /((  Double)n).doubleValue());	  	non-compiled	[CE]  not  a  statement	87	None	add
1125	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue();  xbar  =  1;  [CE]  inconvertible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue();  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)n).doubleValue();  xbar  =  1;	  	non-compiled	[CE]  inconvertible  types	87	None	add
1126	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue().computeValue(this,  x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)n).doubleValue().computeValue(this,  x,  y);	  	non-compiled	[CE]  inconvertible  types	87	None	add
1127	[BUG]  [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue());  xbar  =  1;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  1;  ((  Double)n).doubleValue());  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    1;    ((  Double)n).doubleValue());  xbar  =  1;	  	non-compiled	[CE]  ';'  expected	87	None	add
1128	[BUG]  [BUGGY]  _add(new  Double(y));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _add(new  Double(y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_add(new  Double(y));	  add(new    Double(y));    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1129	[BUG]  [BUGGY]  _addData(new  Double(x,  y));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]          StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  _addData(new  Double(x,  y));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	_addData(new  Double(x,  y));	  _addData(x,    y);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	99	None	replace
1130	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
1131	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	9	replace
1132	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	26	9	replace
1133	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0  ||  y  >  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  StackOverflowError  	26	9	replace
1134	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  yBar,  n);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  yBar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  yBar,  n);	  xbar    =    x    +(int)Math.rint((    double)n,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	105	None	replace
1135	[BUG]  [BUGGY]  x  =  Math.max(x,  Y);  [CE]  cannot  find  symbol  Y  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(x,  Y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(x,  Y);	          x    =    Math.max(x,    y);    x    =    Math.max(x,    Y);    	non-compiled	[CE]  cannot  find  symbol  Y	186	None	replace
1136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(1.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x  =  Math.max(1.0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
1137	[BUG]  [BUGGY]  x  =  Math.max(1.0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.max(1.0,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x  =  Math.max(1.0,  x);	          x    =    Math.min(x,    y);    x    =    Math.min(x,    y);    	compilable	  [FE]  AssertionFailedError  	92	5	replace
1138	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
1139	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  Double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  Double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.pow(10,        Math.pow(10,        y));        double    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    Double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  double  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	167	None	add
1140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	x    =    Math.min(x,    y    +    1);    x  =  Math.min(x,  y  +  2);	  	compilable	  [FE]  AssertionFailedError  	64	4	add
1141	[BUG]  [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(x,  y  +  1);  x  =  Math.min(x,  y  +  2);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(x,    y    +    1);    x  =  Math.min(x,  y  +  2);	  	compilable	  [FE]  AssertionFailedError  	64	4	add
1142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
1143	[BUG]  [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.min(x,  y);  x  =  Math.max(x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                x        =        Math.min(x,        y);        x    =    Math.min(x,    y);    x  =  Math.min(x,  y);  x  =  Math.max(x,  y);	  	compilable	  [FE]  AssertionFailedError  	91	5	add
1144	[BUG]  [BUGGY]  double  x  =  n.doubleValue()  +  x,  y;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  x  =  n.doubleValue()  +  x,  y;  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  x  =  n.doubleValue()  +  x,  y;	  double    x    =    n.doubleValue()    +    x;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	33	None	replace
1145	[BUG]  [BUGGY]  double  n  =  Math.min(value,  Math.abs(y)-  1);  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(value,  Math.abs(y)-  1);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(value,  Math.abs(y)-  1);	  double    n    =    Math.min(value,    Math.abs(x)-    1);    	non-compiled	[CE]  cannot  find  symbol  value	73	None	replace
1146	[BUG]  [BUGGY]  add(new  Double(x),  new  Double(y),  n,  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x),  new  Double(y),  n,  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x),  new  Double(y),  n,  n);	  add(new    Double(x),    new    Double(y),    n);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1147	[BUG]  [BUGGY]  add(new  Double(x,  new  Double(y)),  n);  [CE]  no  suitable  constructor  found  for  Double(double,Double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(x,  new  Double(y)),  n);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(x,  new  Double(y)),  n);	  add(new    Double(x),    new    Double(y),    n);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,Double)	51	None	replace
1148	[BUG]  [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  *  1);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  *  1;  (xbar  =  x  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    *    1;    (xbar  =  x  *  1);	  	non-compiled	[CE]  not  a  statement	153	None	add
1149	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xxbar  =  n;  xbar  =  n;  [CE]  cannot  find  symbol  xxbar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xxbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xxbar  =  n;  xbar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  xxbar	35	None	add
1150	[BUG]  [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n;  }	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
1151	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar,  0);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  ybar,  0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  ybar,  0);	  xbar    =    x    +(int)Math.rint((    double)n,    0);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	104	None	replace
1152	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  StackOverflowError  	25	9	add
1153	[BUG]  [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]          addData(x,    y);    if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	                addData(x,        y);        if(y    <    0)    {    addData(x,    y);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    addData(x,  y);  if(y  <  0)  {  addData(x,  y);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  StackOverflowError  	25	9	add
1154	[BUG]  [BUGGY]  if(x  <  0.0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0.0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0.0)  {  xbar  =  x  +  1;  (xbar  =  x  +  1;  }	  xbar    =    x    +    1;    (xbar    =    x    +    1;    	non-compiled	[CE]  ')'  expected	133	None	replace
1155	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(Int)Math.pow(10,  Math.pow(10,  y));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(Int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(Int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(Int)Math.pow(10,    Math.pow(10,    y));    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1156	[BUG]  [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  }  [CE]  inconvertible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue();  xbar  =  0;  }	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  inconvertible  types	200	None	replace
1157	[BUG]  [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  ';'  expected	200	None	replace
1158	[BUG]  [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(n  >  0)  {  xbar  =  0;  ((  Double)n).doubleValue());  xbar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  xbar    =    0;    ((    Double)n).doubleValue());    xbar    =    0;    	non-compiled	[CE]  	200	None	replace
1159	[BUG]  [BUGGY]  rehashTable(this.x,  y);  [CE]  cannot  find  symbol  x  [FE]        StackOverflowError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  rehashTable(this.x,  y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	rehashTable(this.x,  y);	  rehashTable(x,    y);    	non-compiled	[CE]  cannot  find  symbol  x	196	None	replace
1160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    i));    	compilable	  [FE]  AssertionFailedError  	78	7	replace
1161	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  y));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y));  xbar  =  xbar  +(int)Math.pow(10,  Math.pow(10,  y));	  xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y));    xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    i));    	compilable	  [FE]  AssertionFailedError  	78	7	replace
1162	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x).min(x);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(y,  x).min(x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    x  =  Math.min(y,  x).min(x);	  	non-compiled	[CE]  double  cannot  be  dereferenced	165	None	add
1163	[BUG]  [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(Y,  x);  [CE]  cannot  find  symbol  Y  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  x  =  Math.min(y,  x);  x  =  Math.min(Y,  x);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	x    =    Math.min(y,    x);    x  =  Math.min(Y,  x);	  	non-compiled	[CE]  cannot  find  symbol  Y	165	None	add
1164	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y  +  1);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.rint((  double)n,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x  +(int)Math.rint((  double)n,  y  +  1);	  xbar    =    x    +(int)Math.rint((    double)n    +    1);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	107	None	replace
1165	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  int  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.abs(y);  int  n  =  Math.abs(y);  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double    n    =    Math.abs(y);    int  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
1166	[BUG]  [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)+  1);  [CE]  cannot  find  symbol  Y  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  y)+  1);  xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)+  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar    =    x    +(int)Math.pow(10,    Math.pow(10,    y)+    1);    xbar  =  x  +(int)Math.pow(10,  Math.pow(10,  Y)+  1);	  	non-compiled	[CE]  cannot  find  symbol  Y	108	None	add
1167	[BUG]  [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y));  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  ybar  =  Math.sqrt(new  Double(x,  new  Double(y));	  double    ybar    =    Math.sqrt(new    Double(x),    new    Double(y));    	non-compiled	[CE]  ')'  expected	174	None	replace
1168	[BUG]  [BUGGY]  xbar  =  x.0;  xbar  =  x.0;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  x.0;  xbar  =  x.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  x.0;  xbar  =  x.0;	  xbar    =    x    +    1;    xbar    =    x    +    1);    	non-compiled	[CE]  ';'  expected	151	None	replace
1169	[BUG]  [BUGGY]  xbar  =  0;  ||  xbar!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar  =  0;  ||  xbar!=  0)  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar  =  0;  ||  xbar!=  0)  {	  xbar    =    0;    ||    xbar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1170	[BUG]  [BUGGY]  int  xbar  =  n;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  int  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	int  xbar  =  n;	  xbar    =    n;    int    xbar    =    n;    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
1171	[BUG]  [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  Double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    x    +(int)Math.rint((    double)n);    double  xbar  =  x  +(int)Math.rint((  double)n);  Double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        x        +(int)Math.rint((        double)n);        double    xbar    =    x    +(int)Math.rint((    double)n);    Double  xbar  =  x  +(int)Math.rint((  double)n);  double  xbar  =  x  +(int)Math.rint((  double)n);	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	159	None	add
1172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
1173	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
1174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
1175	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  sumXX  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    sumXX    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	138	5	replace
1176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(x  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
1177	[BUG]  [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(x  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(x  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
1178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	add	if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
1179	[BUG]  [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	if(y  <  0)  {  addData(x,  y);  }  else  {  x  =  x;  y  =  y;  }	          addData(x,    y);    if(y    <    0)    {    addData(x,    y);    }    else    {    x    =    x;    y    =    y;    }    	compilable	  [FE]  AssertionFailedError  	136	5	replace
1180	[BUG]  [BUGGY]  add(new  Double(y,  x));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  add(new  Double(y,  x));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	add(new  Double(y,  x));	  add(new    Double(x,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	47	None	replace
1181	[BUG]  [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(ybar));  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  double  n  =  Math.min(y,  Math.abs(x),  Math.abs(ybar));  [BUGGY]      xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	double  n  =  Math.min(y,  Math.abs(x),  Math.abs(ybar));	  double    n    =    Math.min(y,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	42	None	replace
1182	[BUG]  [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0,  double  xbar  =  0;  double  xbar  =  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {      [BUGGY]  xbar    =    0;    double  xbar  =  0;  xbar  =  0,  double  xbar  =  0;  double  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	107	107	1	replace	xbar        =        0;        double    xbar    =    0;    xbar  =  0,  double  xbar  =  0;  double  xbar  =  0;	  	non-compiled	[CE]  ';'  expected	3	None	add
