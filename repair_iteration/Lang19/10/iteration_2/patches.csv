bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  input.length  -  2;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.length  -  2;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.length  -  2;	  int    end    =    input.length    -    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
2	[BUG]  [BUGGY]  int  end  =  firstChar.length  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar.length  -  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar.length  -  1;	  int    end    =    input.length    -    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
3	[BUG]  [BUGGY]  char  end  =  input.length  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.length  -  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.length  -  1;	  int    end    =    input.length    -    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
4	[BUG]  [BUGGY]  String  seqEnd  =  input.length();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  seqEnd  =  input.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  seqEnd  =  input.length();	  char    seqEnd    =    input.length();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
5	[BUG]  [BUGGY]  char  seqEnd  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  seqEnd  =  input.charAt(start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  seqEnd  =  input.charAt(start);	  char    seqEnd    =    input.length();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
6	[BUG]  [BUGGY]  char  seqEnd  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  seqEnd  =  input.length()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  seqEnd  =  input.length()  +  1;	  char    seqEnd    =    input.length();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
7	[BUG]  [BUGGY]  Integer  input  =  firstChar.getValue()  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getValue()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getValue()  -  1;	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
8	[BUG]  [BUGGY]  Integer  input  =  input.getKey()  -  1;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getKey()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getKey()  -  1;	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
9	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(0,  index  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(0,  index  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(0,  index  +  1);	  Integer    input    =    input.subSequence(0,    index);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
10	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(0,  index  -  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(0,  index  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(0,  index  -  1);	  Integer    input    =    input.subSequence(0,    index);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(1,  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(1,  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(1,  index);	  Integer    input    =    input.subSequence(0,    index);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(0);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(0);	  Integer    input    =    input.subSequence(0,    index);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  char  end  =  firstChar.charAt(0);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  firstChar.charAt(0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  firstChar.charAt(0);	  char    end    =    firstChar;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  char  end  =  firstChar  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  firstChar  &  0xFFFF;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  firstChar  &  0xFFFF;	  int    end    =    firstChar    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  int  end  =  firstChar  |  0xFFFF;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar  |  0xFFFF;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar  |  0xFFFF;	  int    end    =    firstChar    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  int  end  =  input.length()  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.length()  &  0xFFFF;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.length()  &  0xFFFF;	  int    end    =    firstChar    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  int  end  =  1  <  <  input.length()?  1  :  0;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  1  <  <  input.length()?  1  :  0;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  1  <  <  input.length()?  1  :  0;	  int    end    =    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
18	[BUG]  [BUGGY]  int  end  =  1  <  <  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  1  <  <  input.length();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  1  <  <  input.length();	  int    end    =    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
19	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  16);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  16);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  16);	  int    start    =    input.indexOf(':',    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
20	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(':',  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(':',  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(':',  1);	  int    start    =    input.indexOf(':',    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
21	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  2);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  2);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  2);	  int    seqEnd    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  -1);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  -1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  -1);	  int    seqEnd    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  int  start  =  output.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  output.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  output.length();	  int    start    =    input.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
24	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  index  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  index  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  index  +  1);	  int    end    =    input.indexOf(';',    index);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  index);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  index);	  int    end    =    input.indexOf(';',    index);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.lastIndexOf(';',  index);	  int    seqEnd    =    input.lastIndexOf(';');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
27	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.lastIndexOf(';',  1);	  int    seqEnd    =    input.lastIndexOf(';');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
28	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(':',  0);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(':',  0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(':',  0);	  int    start    =    input.indexOf(':',    0);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
29	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  firstChar  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  firstChar  +  1);	  int    start    =    input.indexOf('    ',    firstChar);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
30	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  firstChar)+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  firstChar)+  1;	  int    start    =    input.indexOf('    ',    firstChar);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
31	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  firstChar)-  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  firstChar)-  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  firstChar)-  1;	  int    start    =    input.indexOf('    ',    firstChar);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
32	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(index,  start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(index,  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(index,  start);	  Integer    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
33	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(0,  start);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(0,  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(0,  start);	  Integer    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
34	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  start  +  1);  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  start  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  start  +  1);	  Integer    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
35	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  /  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getValue()  /  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getValue()  /  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
36	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';')+  2;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';')+  2;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';')+  2;	  int    seqEnd    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
37	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf(';')+  1;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.lastIndexOf(';')+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.lastIndexOf(';')+  1;	  int    seqEnd    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
38	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';')/  1;  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';')/  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';')/  1;	  int    seqEnd    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
39	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  output.length();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  output.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  int  end  =  input.indexOf(';')/  2;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';')/  2;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';')/  2;	  int    end    =    input.indexOf(';')+    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
41	[BUG]  [BUGGY]  int  end  =  input.indexOf(';')-  2;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';')-  2;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';')-  2;	  int    end    =    input.indexOf(';')+    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
42	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';')+  2;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';')+  2;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';')+  2;	  int    end    =    input.indexOf(';')+    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
43	[BUG]  [BUGGY]  Integer  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.length()  -  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.length()  -  1;	  Integer    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
44	[BUG]  [BUGGY]  Integer  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.length()  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.length()  +  1;	  Integer    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
45	[BUG]  [BUGGY]  Integer  end  =  input.length()  *  16;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.length()  *  16;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.length()  *  16;	  Integer    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
46	[BUG]  [BUGGY]  char  end  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.charAt(index);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.charAt(index);	  char    end    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
47	[BUG]  [BUGGY]  char  end  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.charAt(start  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.charAt(start  +  1);	  char    end    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
48	[BUG]  [BUGGY]  char  end  =  input.charAt(firstChar);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.charAt(firstChar);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.charAt(firstChar);	  char    end    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
49	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  index  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  index  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  index  +  1);	  int    seqEnd    =    input.indexOf(';',    index);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  0);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  0);	  int    start    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
51	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(';',  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(';',  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(';',  1);	  int    start    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  -1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  -1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  -1);	  int    start    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  Integer  input  =  firstChar.getAssignedValue();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getAssignedValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getAssignedValue();	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
54	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAssignedValue()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAssignedValue()  +  1;	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
55	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue()  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAssignedValue()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAssignedValue()  -  1;	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
56	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  firstChar  +  1);	  int    seqEnd    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar)+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  firstChar)+  1;	  int    seqEnd    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar  -  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  firstChar  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  firstChar  -  1);	  int    seqEnd    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  String  end  =  input.length;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  end  =  input.length;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  end  =  input.length;	  char    end    =    input.length;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
60	[BUG]  [BUGGY]  char  end  =  input.indexOf(';',  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.indexOf(';',  firstChar);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.indexOf(';',  firstChar);	  char    end    =    input.indexOf(';');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
61	[BUG]  [BUGGY]  String  end  =  input.indexOf(';');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  end  =  input.indexOf(';');  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  end  =  input.indexOf(';');	  char    end    =    input.indexOf(';');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
62	[BUG]  [BUGGY]  char  end  =  input.indexOf(';',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.indexOf(';',  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.indexOf(';',  start);	  char    end    =    input.indexOf(';');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
63	[BUG]  [BUGGY]  char  end  =  input.indexOf(';')+  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.indexOf(';')+  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.indexOf(';')+  1;	  char    end    =    input.indexOf(';');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
64	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  firstChar)/  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  firstChar)/  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  firstChar)/  1;	  int    end    =    input.indexOf(';')/    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
65	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';')/  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';')/  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';')/  1;	  int    end    =    input.indexOf(';')/    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
66	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  start)/  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  start)/  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  start)/  1;	  int    end    =    input.indexOf(';')/    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
67	[BUG]  [BUGGY]  Integer  input  =  this.input.getValue()  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.getValue()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.getValue()  -  1;	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
68	[BUG]  [BUGGY]  Integer  input  =  this.input.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.getValue()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.getValue()  +  1;	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
69	[BUG]  [BUGGY]  Integer  input  =  this.input.getIndex();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.getIndex();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.getIndex();	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
70	[BUG]  [BUGGY]  char  start  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.charAt(start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.charAt(start);	  char    start    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
71	[BUG]  [BUGGY]  char  start  =  input.indexOf('  ',  firstChar);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.indexOf('  ',  firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.indexOf('  ',  firstChar);	  char    start    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
72	[BUG]  [BUGGY]  String  start  =  input.indexOf('  ');  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  start  =  input.indexOf('  ');  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  start  =  input.indexOf('  ');	  char    start    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
73	[BUG]  [BUGGY]  int  end  =  input.length  /  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.length  /  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.length  /  1;	  int    end    =    input.length    +    1;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
74	[BUG]  [BUGGY]  String  end  =  0;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  end  =  0;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  end  =  0;	  char    end    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
75	[BUG]  [BUGGY]  char  end  =  0L;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  0L;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  0L;	  char    end    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  char  end  =  0x7f;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  0x7f;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  0x7f;	  char    end    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  int  seqEnd  =  firstChar.length()  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  firstChar.length()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  firstChar.length()  -  1;	  int    seqEnd    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
78	[BUG]  [BUGGY]  int  seqEnd  =  firstChar.length()  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  firstChar.length()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  firstChar.length()  +  1;	  int    seqEnd    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
79	[BUG]  [BUGGY]  char  seqEnd  =  firstChar.length();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  seqEnd  =  firstChar.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  seqEnd  =  firstChar.length();	  int    seqEnd    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
80	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  index  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  index  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  index  +  1);	  Integer    end    =    input.subSequence(start,    index);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
81	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  index  -  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  index  -  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  index  -  1);	  Integer    end    =    input.subSequence(start,    index);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
82	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  0);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  0);	  Integer    end    =    input.subSequence(start,    index);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
83	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(index  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(index  +  1);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
84	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(firstChar  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(firstChar  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(firstChar  +  1);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
85	[BUG]  [BUGGY]  int  start  =  firstChar.length()  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  firstChar.length()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  firstChar.length()  -  1;	  int    start    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
86	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  index  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  index  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  index  +  1);	  int    start    =    input.indexOf(':',    index);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
87	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(':',  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(':',  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(':',  index);	  int    start    =    input.indexOf(':',    index);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
88	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  firstChar  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  firstChar  +  1);	  int    start    =    input.indexOf(':',    firstChar);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  firstChar)+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  firstChar)+  1;	  int    start    =    input.indexOf(':',    firstChar);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(':',  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(':',  firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(':',  firstChar);	  int    start    =    input.indexOf(':',    firstChar);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(0,  start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(0,  start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(0,  start);	  Integer    input    =    input.subSequence(index,    start);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
92	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(index,  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(index,  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(index,  1);	  Integer    input    =    input.subSequence(index,    start);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
93	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(1,  start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(1,  start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(1,  start);	  Integer    input    =    input.subSequence(index,    start);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
94	[BUG]  [BUGGY]  char  end  =  -1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  -1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  -1;	  int    end    =    -1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
95	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  0);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  0);	  int    end    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
96	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  2);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  2);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  2);	  int    end    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
97	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  -1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  -1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  -1);	  int    end    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
98	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  firstChar  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  firstChar  +  1);	  int    start    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  firstChar)+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  firstChar)+  1;	  int    start    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(';',  firstChar);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(';',  firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(';',  firstChar);	  int    start    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
101	[BUG]  [BUGGY]  char  end  =  firstChar.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  firstChar.length();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  firstChar.length();	  int    end    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
102	[BUG]  [BUGGY]  int  end  =  firstChar.length()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar.length()  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar.length()  +  1;	  int    end    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
103	[BUG]  [BUGGY]  int  end  =  firstChar.length()  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar.length()  -  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar.length()  -  1;	  int    end    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
104	[BUG]  [BUGGY]  String  end  =  input.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  end  =  input.length();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
105	[BUG]  [BUGGY]  char  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.length()  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.length()  +  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
106	[BUG]  [BUGGY]  char  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.length()  -  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.length()  -  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
107	[BUG]  [BUGGY]  Integer  input  =  firstChar.toString();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.toString();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.toString();	  Integer    input    =    firstChar.getValue();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
108	[BUG]  [BUGGY]  Integer  input  =  firstChar.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getValue()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getValue()  +  1;	  Integer    input    =    firstChar.getValue();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
109	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAscentInt();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAscentInt();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
110	[BUG]  [BUGGY]  Integer  input  =  firstChar.getAscentValue();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getAscentValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getAscentValue();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
111	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAscentIndex();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAscentIndex();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
112	[BUG]  [BUGGY]  int  start  =  firstChar.length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  firstChar.length()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  firstChar.length()  +  1;	  int    start    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
113	[BUG]  [BUGGY]  char  start  =  firstChar.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  firstChar.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  firstChar.length();	  int    start    =    firstChar.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
114	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(';')+  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(';')+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(';')+  1;	  int    start    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
115	[BUG]  [BUGGY]  int  start  =  input.indexOf(';')/  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';')/  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';')/  1;	  int    start    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
116	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  index  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  index  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  index  +  1);	  int    start    =    input.indexOf(';',    index);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
117	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(';',  index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(';',  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(';',  index);	  int    start    =    input.indexOf(';',    index);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
118	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  start);	  int    end    =    input.lastIndexOf(';');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
119	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  -1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  -1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  -1);	  int    end    =    input.lastIndexOf(';');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
120	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  16);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  16);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  16);	  int    start    =    input.indexOf('    ',    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
121	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('  ',  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf('  ',  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf('  ',  1);	  int    start    =    input.indexOf('    ',    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
122	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  2);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  2);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  2);	  int    start    =    input.indexOf('    ',    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
123	[BUG]  [BUGGY]  Integer  input  =  input.substring(start,  index);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.substring(start,  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.substring(start,  index);	  Integer    input    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
124	[BUG]  [BUGGY]  Integer  input  =  firstChar.getKey();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getKey();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getKey();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
125	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  index).toString();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  index).toString();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  index).toString();	  Integer    end    =    input.subSequence(start,    start).toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
126	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  start).toString()  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  start).toString()  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  start).toString()  +  1;	  Integer    end    =    input.subSequence(start,    start).toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
127	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  firstChar).toString();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  firstChar).toString();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  firstChar).toString();	  Integer    end    =    input.subSequence(start,    start).toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
128	[BUG]  [BUGGY]  int  seqEnd  =  input.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.length()  -  start  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.length()  -  start  +  1;	  int    seqEnd    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
129	[BUG]  [BUGGY]  int  seqEnd  =  input.length()  +  start;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.length()  +  start;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.length()  +  start;	  int    seqEnd    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
130	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(firstChar);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(firstChar);	  char    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
131	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  start  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  start  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  start  +  1);	  int    seqEnd    =    input.indexOf(';',    start);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
132	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.lastIndexOf(';',  start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.lastIndexOf(';',  start);	  int    seqEnd    =    input.indexOf(';',    start);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
133	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString()  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString()  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  end).toString()  +  1;	  Integer    end    =    input.subSequence(start,    end).toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
134	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString(),  16;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString(),  16;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  end).toString(),  16;	  Integer    end    =    input.subSequence(start,    end).toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
135	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ',  firstChar);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf('  ',  firstChar);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf('  ',  firstChar);	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
136	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ',  start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf('  ',  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf('  ',  start);	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
137	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('  ');  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf('  ');  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf('  ');	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
138	[BUG]  [BUGGY]  char  end  =  input.indexOf('  ');  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.indexOf('  ');  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.indexOf('  ');	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
139	[BUG]  [BUGGY]  String  start  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  start  =  input.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  start  =  input.length();	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
140	[BUG]  [BUGGY]  char  start  =  firstChar.charAt(input.length());  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  firstChar.charAt(input.length());  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  firstChar.charAt(input.length());	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
141	[BUG]  [BUGGY]  char  start  =  firstChar.charAt(start).length();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  firstChar.charAt(start).length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  firstChar.charAt(start).length();	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
142	[BUG]  [BUGGY]  char  start  =  firstChar.charAt(start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  firstChar.charAt(start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  firstChar.charAt(start);	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
143	[BUG]  [BUGGY]  Integer  input  =  firstChar.getIntValue();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  firstChar.getIntValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  firstChar.getIntValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
144	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getIntValue()  +  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
145	[BUG]  [BUGGY]  Integer  input  =  this.input.getIntValue();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.getIntValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.getIntValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
146	[BUG]  [BUGGY]  int  end  =  start  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  start  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  start  +  1;	  int    end    =    index    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
147	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  firstChar)+  2;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  firstChar)+  2;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  firstChar)+  2;	  int    end    =    input.indexOf(';',    firstChar)+    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
148	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  firstChar)+  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  firstChar)+  1;	  int    end    =    input.indexOf(';',    firstChar)+    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
149	[BUG]  [BUGGY]  char  end  =  input.indexOf(';',  firstChar)+  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.indexOf(';',  firstChar)+  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.indexOf(';',  firstChar)+  1;	  int    end    =    input.indexOf(';',    firstChar)+    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
150	[BUG]  [BUGGY]  char  end  =  firstChar.length;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  firstChar.length;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  firstChar.length;	  int    end    =    firstChar.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
151	[BUG]  [BUGGY]  int  end  =  firstChar.length  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar.length  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar.length  +  1;	  int    end    =    firstChar.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
152	[BUG]  [BUGGY]  char  end  =  firstChar  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  firstChar  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  firstChar  +  1;	  int    end    =    firstChar    +    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
153	[BUG]  [BUGGY]  int  end  =  firstChar  /  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar  /  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar  /  1;	  int    end    =    firstChar    +    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
154	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(';',  -1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(';',  -1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(';',  -1);	  int    start    =    input.lastIndexOf(';');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
155	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('  ',  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf('  ',  firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf('  ',  firstChar);	  int    start    =    input.lastIndexOf('    ');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
156	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('  ',  index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf('  ',  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf('  ',  index);	  int    start    =    input.lastIndexOf('    ');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
157	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  firstChar  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  firstChar  +  1);	  int    end    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
158	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  firstChar);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  firstChar);	  int    end    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
159	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  2);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  2);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  index  +  2);	  Integer    input    =    input.subSequence(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
160	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  1,  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  1,  firstChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  index  +  1,  firstChar);	  Integer    input    =    input.subSequence(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
161	[BUG]  [BUGGY]  int  end  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.charAt(index);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.charAt(index);	  int    end    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
162	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  start  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  start  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  start  +  1);	  int    end    =    input.indexOf(';',    start);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
163	[BUG]  [BUGGY]  int  end  =  input.subSequence(start,  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.subSequence(start,  index);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.subSequence(start,  index);	  int    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
164	[BUG]  [BUGGY]  int  end  =  input.subSequence(index,  start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.subSequence(index,  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.subSequence(index,  start);	  int    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
165	[BUG]  [BUGGY]  int  end  =  input.subSequence(start,  start  +  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.subSequence(start,  start  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.subSequence(start,  start  +  1);	  int    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
166	[BUG]  [BUGGY]  int  end  =  input.subSequence(0,  start);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.subSequence(0,  start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.subSequence(0,  start);	  int    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
167	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  index  -  2);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  index  -  2);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  index  -  2);	  Integer    input    =    input.subSequence(start,    index    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
168	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  index  -  1  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  index  -  1  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  index  -  1  +  1);	  Integer    input    =    input.subSequence(start,    index    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
169	[BUG]  [BUGGY]  int  seqEnd  =  output.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  output.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  output.length();	  int    seqEnd    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
170	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('  ')+  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf('  ')+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf('  ')+  1;	  int    start    =    input.indexOf('    ')+    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
171	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ')+  2;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ')+  2;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ')+  2;	  int    start    =    input.indexOf('    ')+    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
172	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ')/  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ')/  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ')/  1;	  int    start    =    input.indexOf('    ')+    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
173	[BUG]  [BUGGY]  char  end  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  input.charAt(0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  input.charAt(0);	  char    end    =    firstChar;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
174	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  16);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  16);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  16);	  int    seqEnd    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
175	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  seqEnd  =  input.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
176	[BUG]  [BUGGY]  char  start  =  input.indexOf('  ')+  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.indexOf('  ')+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.indexOf('  ')+  1;	  char    start    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
177	[BUG]  [BUGGY]  char  start  =  input.lastIndexOf('  ');  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.lastIndexOf('  ');  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.lastIndexOf('  ');	  char    start    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
178	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  start  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  start  +  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  start  +  1);	  Integer    input    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
179	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  0);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  0);	  Integer    input    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
180	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  16);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  16);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  16);	  int    end    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
181	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf(';',  start)+  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.lastIndexOf(';',  start)+  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.lastIndexOf(';',  start)+  1;	  int    end    =    input.lastIndexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  int  end  =  input.subSequence(start,  0);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.subSequence(start,  0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.subSequence(start,  0);	  int    end    =    input.subSequence(start,    start);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
183	[BUG]  [BUGGY]  Integer  start  =  input.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  start  =  input.length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  start  =  input.length();	  int    start    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
184	[BUG]  [BUGGY]  int  end  =  1  <  <  seqEnd?  input.length()  :  0;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  1  <  <  seqEnd?  input.length()  :  0;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  1  <  <  seqEnd?  input.length()  :  0;	  int    end    =    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
185	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  firstChar  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  firstChar  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  firstChar  -  1);	  int    start    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
186	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';')+  0;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';')+  0;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';')+  0;	  int    seqEnd    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
187	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  start  -  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  start  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  start  -  1);	  int    seqEnd    =    input.indexOf(';',    start);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
188	[BUG]  [BUGGY]  char  end  =  0x7F;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  end  =  0x7F;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  end  =  0x7F;	  char    end    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
189	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  -1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  -1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  -1);	  int    start    =    input.indexOf(':',    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
190	[BUG]  [BUGGY]  int  end  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.charAt(start  +  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.charAt(start  +  1);	  int    end    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
191	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  firstChar  -  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  firstChar  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  firstChar  -  1);	  int    start    =    input.indexOf(':',    firstChar);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
192	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ')+  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf('  ')+  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf('  ')+  1;	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
193	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(1);	  char    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
194	[BUG]  [BUGGY]  char  seqEnd  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  seqEnd  =  input.charAt(0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  seqEnd  =  input.charAt(0);	  char    seqEnd    =    input.length();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
195	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAscentValue()  +  1;	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
196	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAscentValue()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAscentValue()  -  1;	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
197	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(end);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(end);	  char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
198	[BUG]  [BUGGY]  Integer  input  =  input.getAsInt();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAsInt();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAsInt();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
199	[BUG]  [BUGGY]  int  input  =  input.subSequence(start,  index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  input  =  input.subSequence(start,  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  input  =  input.subSequence(start,  index);	  Integer    input    =    input.subSequence(index,    start);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
200	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  firstChar)+  0;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  firstChar)+  0;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  firstChar)+  0;	  int    end    =    input.indexOf(';',    firstChar)+    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
201	[BUG]  [BUGGY]  int  start  =  input.indexOf(';')+  0;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';')+  0;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';')+  0;	  int    start    =    input.indexOf(';')+    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
202	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  start  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  start  -  1);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  start  -  1);	  Integer    input    =    input.subSequence(start,    index    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
203	[BUG]  [BUGGY]  int  start  =  input.indexOf(';',  16);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(';',  16);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(';',  16);	  int    start    =    input.indexOf(';',    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
204	[BUG]  [BUGGY]  int  end  =  input.length  -  1  +  start;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.length  -  1  +  start;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.length  -  1  +  start;	  int    end    =    input.length    -    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
205	[BUG]  [BUGGY]  int  end  =  input.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.length  -  1  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.length  -  1  +  1;	  int    end    =    input.length    -    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
206	[BUG]  [BUGGY]  int  end  =  input.indexOf(';',  start  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  input.indexOf(';',  start  -  1);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  input.indexOf(';',  start  -  1);	  int    end    =    input.indexOf(';',    start);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
207	[BUG]  [BUGGY]  Integer  input  =  this.input.getAsInt();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.getAsInt();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.getAsInt();	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
208	[BUG]  [BUGGY]  char  input  =  firstChar.getValue();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  input  =  firstChar.getValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  input  =  firstChar.getValue();	  Integer    input    =    firstChar.getValue();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
209	[BUG]  [BUGGY]  char  start  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.length()  +  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.length()  +  1;	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
210	[BUG]  [BUGGY]  char  start  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  start  =  input.length()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  start  =  input.length()  -  1;	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
211	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getIntValue()  -  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
212	[BUG]  [BUGGY]  Integer  input  =  input.getLongValue();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getLongValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getLongValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
213	[BUG]  [BUGGY]  int  seqEnd  =  input.length()  *  start;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.length()  *  start;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.length()  *  start;	  int    seqEnd    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
214	[BUG]  [BUGGY]  int  end  =  firstChar  &  0xFFFF  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  firstChar  &  0xFFFF  +  1;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  firstChar  &  0xFFFF  +  1;	  int    end    =    firstChar    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
215	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf(':',  16);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.lastIndexOf(':',  16);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.lastIndexOf(':',  16);	  int    start    =    input.lastIndexOf(':');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
216	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)+  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  char  firstChar  =  input.charAt(start)+  1;  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	char  firstChar  =  input.charAt(start)+  1;	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
217	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  0);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  0);	  int    start    =    input.indexOf('    ',    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
218	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf('  ',  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf('  ',  index);	  int    start    =    input.indexOf('    ',    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
219	[BUG]  [BUGGY]  int  end  =  1  <  <  input.length()  &&  input.charAt(start).charAt(0)  ==  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =  1  <  <  input.length()  &&  input.charAt(start).charAt(0)  ==  ';';  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =  1  <  <  input.length()  &&  input.charAt(start).charAt(0)  ==  ';';	  int    end    =    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
220	[BUG]  [BUGGY]  int  input  =  firstChar.getValue();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  input  =  firstChar.getValue();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  input  =  firstChar.getValue();	  Integer    input    =    firstChar.getValue();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
221	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf(';',  startChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  seqEnd  =  input.indexOf(';',  startChar);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  seqEnd  =  input.indexOf(';',  startChar);	  int    seqEnd    =    input.indexOf(';',    firstChar);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
222	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  0).toString();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  0).toString();  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  0).toString();	  Integer    end    =    input.subSequence(start,    start).toString();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
223	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  firstChar  =  input.charAt(index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  firstChar  =  input.charAt(index);	  char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
224	[BUG]  [BUGGY]  Char  start  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Char  start  =  input.charAt(0);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Char  start  =  input.charAt(0);	  char    start    =    input.length();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
225	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start);	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
226	[BUG]  [BUGGY]  String  end  =  firstChar;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  String  end  =  firstChar;  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	String  end  =  firstChar;	  char    end    =    firstChar;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
227	[BUG]  [BUGGY]  Integer  input  =  input.getAscentImpl();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.getAscentImpl();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.getAscentImpl();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
228	[BUG]  [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.subSequence(start,  end).toString(),  16);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.subSequence(start,  end).toString(),  16);	  Integer    end    =    input.subSequence(start,    end).toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
229	[BUG]  [BUGGY]  Integer  end  =  input.indexOf(';');  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  end  =  input.indexOf(';');  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  end  =  input.indexOf(';');	  Integer    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
230	[BUG]  [BUGGY]  Integer  input  =  this.input.subSequence(start,  index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.subSequence(start,  index);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.subSequence(start,  index);	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
231	[BUG]  [BUGGY]  Integer  input  =  this.input.subSequence(start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  this.input.subSequence(start);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  this.input.subSequence(start);	  Integer    input    =    this.input.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
232	[BUG]  [BUGGY]  int  start  =  input.indexOf(':',  firstChar).length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  start  =  input.indexOf(':',  firstChar).length();  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  start  =  input.indexOf(':',  firstChar).length();	  int    start    =    input.indexOf(':',    firstChar);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
233	[BUG]  [BUGGY]  Char  end  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Char  end  =  input.charAt(start);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Char  end  =  input.charAt(start);	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
234	[BUG]  [BUGGY]  Char  end  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Char  end  =  input.charAt(0);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Char  end  =  input.charAt(0);	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
235	[BUG]  [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString());  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString());  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString());	  int    end    =    -1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	  int    end    =    -1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
237	[BUG]  [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  start).toString());  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  start).toString());  [BUGGY]        while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	int  end  =(input!=  null)?  -1  :  Integer.parseInt(input.subSequence(start,  start).toString());	  int    end    =    -1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
238	[BUG]  [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  1,  isHex);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }      [BUGGY]  Integer  input  =  input.subSequence(start,  index  +  1,  isHex);  [BUGGY]      int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	Integer  input  =  input.subSequence(start,  index  +  1,  isHex);	  Integer    input    =    input.subSequence(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
