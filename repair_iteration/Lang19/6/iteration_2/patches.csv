bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
2	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
3	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
4	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
5	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
6	[BUG]  [BUGGY]  if(start  ==  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start!=    -1)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
7	[BUG]  [BUGGY]  if(start!=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start!=    -1)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
8	[BUG]  [BUGGY]  if(start!=  -1)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  -1)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start!=    -1)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
9	[BUG]  [BUGGY]  Integer  firstChar  =  input.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.length();	  Integer    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
10	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(start,  index  +  1);	  char    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  output.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  output.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  end  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  end  =  input.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.charAt(index);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.charAt(index);	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
14	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  -  start  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  -  start  +  1;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
15	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  -  start  +  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  -  start  +  seqEnd;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
16	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(index  +  1);	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
17	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  2);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start  +  2);	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
18	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
19	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
20	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
21	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
22	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
23	[BUG]  [BUGGY]  int  end  =  input.length()  *  seqEnd;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  *  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  *  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
24	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
25	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
26	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
27	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
28	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
29	[BUG]  [BUGGY]  int  start  =  output.length();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  output.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  output.length();	  int    start    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
30	[BUG]  [BUGGY]  int  start  =  index.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  index.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  index.length();	  int    start    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
31	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(end);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
32	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start,  index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start,  index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start,  index);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
33	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
34	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
35	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start)  ==  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	55	None	replace
36	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start  +  1)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	55	None	replace
37	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(index)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	55	None	replace
38	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
39	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex  ||  input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex  ||  input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex  ||  input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
40	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null  ||  isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null  ||  isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(input!=  null  ||  isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
41	[BUG]  [BUGGY]  boolean  isHex  =  input.length()!=  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()!=  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()!=  seqEnd  -  1;	  boolean    isHex    =    input.length()    ==    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >=  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >=  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >=  seqEnd  -  1;	  boolean    isHex    =    input.length()    ==    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >  seqEnd  -  1;	  boolean    isHex    =    input.length()    ==    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
45	[BUG]  [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
46	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
47	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start)-  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start)-  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  firstChar  =  input.charAt(start)-  1;	  int    firstChar    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
48	[BUG]  [BUGGY]  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    ==    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  if(seqEnd  ==  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  ==  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  ==  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    ==    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
51	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
52	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
53	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index  +  1);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index  +  1);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index  +  1);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
54	[BUG]  [BUGGY]  int  start  =  input.length()  -  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length()  -  seqEnd  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  input.length()  -  seqEnd  +  1;	  int    start    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
55	[BUG]  [BUGGY]  int  start  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length()  +  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  input.length()  +  seqEnd;	  int    start    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
56	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
57	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
58	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
59	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(end);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(end);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
60	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index  +  1);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index  +  1);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index  +  1);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
61	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
62	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
63	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index,  out);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index,  out);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index,  out);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
64	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
68	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
69	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
70	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(0);	  boolean    isHex    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  char  firstChar  =  input.getLastChild();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.getLastChild();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.getLastChild();	  Integer    firstChar    =    input.getLastChild();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
72	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
73	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
75	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
76	[BUG]  [BUGGY]  int  firstChar  =  input.getLastChild();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.getLastChild();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  firstChar  =  input.getLastChild();	  int    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
77	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(index  +  2);	  char    firstChar    =    input.charAt(start    +    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
78	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(start,  index  +  2);	  char    firstChar    =    input.charAt(start    +    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
79	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  ==  0;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  ==  0;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  ==  0;	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
81	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
82	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  -  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(start  -  1);	  char    firstChar    =    input.charAt(seqEnd    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
83	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(index  -  1);	  char    firstChar    =    input.charAt(seqEnd    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
84	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  String  firstChar  =  input.getFirstChild();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  firstChar  =  input.getFirstChild();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	String  firstChar  =  input.getFirstChild();	  char    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
88	[BUG]  [BUGGY]  if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
89	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
90	[BUG]  [BUGGY]  String  firstChar  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  firstChar  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	String  firstChar  =  input.length();	  char    firstChar    =    input.length();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
91	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >  seqEnd  +  1;	  boolean    isHex    =    input.length()    ==    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  <  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  <  seqEnd  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  <  seqEnd  +  1;	  boolean    isHex    =    input.length()    ==    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  boolean  isHex  =  input.length()!=  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()!=  seqEnd  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()!=  seqEnd  +  1;	  boolean    isHex    =    input.length()    ==    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
94	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(seqEnd  +  1);	  int    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
95	[BUG]  [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
96	[BUG]  [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
97	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
98	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
99	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
100	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  size();  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
101	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.charAt(seqEnd);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.charAt(seqEnd);	  Integer    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
103	[BUG]  [BUGGY]  int  end  =  input.length()  /  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  /  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  /  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
104	[BUG]  [BUGGY]  if(start  >=  start)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  start)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  start)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
105	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(0);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(0);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(0);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
106	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1  +  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1  +  start);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1  +  start);	  char    firstChar    =    input.charAt(seqEnd    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
107	[BUG]  [BUGGY]  char  start  =  input.length();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  start  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  start  =  input.length();	  int    start    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
108	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
109	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
110	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
111	[BUG]  [BUGGY]  if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
112	[BUG]  [BUGGY]  if(start!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  ';';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(0)  ==  ';';	  boolean    isHex    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
114	[BUG]  [BUGGY]  if(start  >=  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start!=    -1)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
115	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  >=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)  >=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start)  >=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	55	None	replace
116	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  <  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  <  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  <  seqEnd  -  1;	  boolean    isHex    =    input.length()    ==    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
117	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
118	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
119	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
120	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)!=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(0)!=  ';';	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
121	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
122	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
123	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
124	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >  start;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >  start;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >  start;	  boolean    isHex    =    input.length()    >    seqEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
125	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  start  +  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  start  +  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  start  +  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
126	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
127	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
128	[BUG]  [BUGGY]  int  start  =  input.length()  /  seqEnd;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length()  /  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  input.length()  /  seqEnd;	  int    start    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
129	[BUG]  [BUGGY]  int  start  =  input.length()  -  seqStart;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length()  -  seqStart;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  input.length()  -  seqStart;	  int    start    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
130	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(1);	  Integer    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
131	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
132	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  firstChar  =  input.charAt(start);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	String  firstChar  =  input.charAt(start);	  String    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
133	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
134	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  start;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
135	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
136	[BUG]  [BUGGY]  if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
137	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
138	[BUG]  [BUGGY]  if(start  ==  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
139	[BUG]  [BUGGY]  if(start  <  start)  {  if(seqEnd  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  start)  {  if(seqEnd  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  start)  {  if(seqEnd  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
140	[BUG]  [BUGGY]  if(start  <  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  start)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
141	[BUG]  [BUGGY]  if(start  <  start)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  start)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  start)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
142	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqStart);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(seqStart);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(seqStart);	  int    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
143	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(index);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
144	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  +=  input.charAt(i);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
145	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
146	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
147	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
148	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  -1)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
149	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >=  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >=  seqEnd  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >=  seqEnd  +  1;	  boolean    isHex    =    input.length()    ==    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
150	[BUG]  [BUGGY]  if(isHex)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(seqEnd!=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
151	[BUG]  [BUGGY]  if(isHex)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  if(seqEnd  >=  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
152	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
153	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
154	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
155	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  end;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  end;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  end;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
156	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  >  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  >  0)  {  if(input  ==  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    ==    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
157	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(seqEnd  >  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(seqEnd  >  0)  {  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    ==    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
159	[BUG]  [BUGGY]  char  firstChar  =  input.charAtFirstChild();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAtFirstChild();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAtFirstChild();	  char    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
160	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(seqEnd  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(seqEnd  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  firstChar  =  input.charAt(seqEnd  +  1);	  int    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
161	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  =  true;  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
162	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
163	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
164	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
165	[BUG]  [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
166	[BUG]  [BUGGY]  Integer  end  =  input.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  end  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  end  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
167	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
168	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  firstChar  =  input.charAt(start  -  1);	  int    firstChar    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
169	[BUG]  [BUGGY]  int  start  =  input.length()  -  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length()  -  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  start  =  input.length()  -  seqEnd  -  1;	  int    start    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
170	[BUG]  [BUGGY]  Char  firstChar  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Char  firstChar  =  input.charAt(start);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Char  firstChar  =  input.charAt(start);	  char    firstChar    =    input.length();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
171	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd  -  1;  ++i)  {  isHex  =  input.charAt(start);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
172	[BUG]  [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
173	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  -  seqEnd  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  -  seqEnd  -  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
174	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1  +  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1  +  1);	  char    firstChar    =    input.charAt(seqEnd    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
175	[BUG]  [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
176	[BUG]  [BUGGY]  if(start  ==  start)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  start)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  ==  start)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start!=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
177	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  isHex  +=  input.charAt(start);  }	  if(start    >=    seqEnd)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(start);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
178	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
179	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
180	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
181	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
182	[BUG]  [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  &&  input.charAt(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.length()  >  seqEnd  &&  input.charAt(start);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.length()  >  seqEnd  &&  input.charAt(start);	  boolean    isHex    =    input.length()    >    seqEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
183	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
184	[BUG]  [BUGGY]  if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start!=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
185	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  false;  }	  if(start    ==    start)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
186	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  false;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  false;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start  +  1)!=  false;	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
187	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(start  +  1)  ==  ';';	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
188	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
189	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
190	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
191	[BUG]  [BUGGY]  if(start  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >  0)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  input.charAt(start);  }	  if(seqEnd    >    0)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
192	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.charAt(seqEnd  -  1);	  Integer    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
193	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)!=  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)!=  seqEnd;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(0)!=  seqEnd;	  boolean    isHex    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
194	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
195	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(end)!=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(end)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	boolean  isHex  =  input.charAt(end)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	55	None	replace
196	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  isHex  =  true;  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
197	[BUG]  [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  =  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  =  true;  }	  if(start    ==    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
198	[BUG]  [BUGGY]  Integer  firstChar  =  input.removeFirstChild();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  firstChar  =  input.removeFirstChild();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	Integer  firstChar  =  input.removeFirstChild();	  Integer    firstChar    =    input.getLastChild();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
199	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  >=  seqEnd)  {  if(input!=  null)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  }	  if(start    ==    -1)    {    if(input!=    null)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
200	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(start  <  seqEnd)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(i);  }	  if(start    >=    start)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
201	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  isHex  +=  input.charAt(index);  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    isHex    +=    input.charAt(index);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
202	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  firstChar  =  input.charAt(seqEnd  -  1);	  int    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
203	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqStart;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  -  seqStart;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	int  end  =  input.length()  -  seqStart;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
