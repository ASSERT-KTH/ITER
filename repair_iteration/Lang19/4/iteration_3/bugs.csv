bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  start  =  index  +  seqStart  +  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqStart  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqStart  +  1;	  int    start    =    index    +    seqStart    -    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  int  start  =  index  +  seqStart  *  1  -  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqStart  *  1  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqStart  *  1  -  1;	  int    start    =    index    +    seqStart    -    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  char  start  =  0L;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  0L;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  double  start  =  0L;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  double  start  =  0L;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	double  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  /  2;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  /  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  /  2;	  int    start    =    index    +    seqEnd    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  *  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  *  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  *  1;	  int    start    =    index    +    seqEnd    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  int  start  =  index  +  seqStart  /  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqStart  /  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqStart  /  1;	  int    start    =    index    +    seqEnd    /    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  String  start  =  0;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  start  =  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  start  =  0;	  char    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  Char  start  =  0L;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  start  =  0L;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  start  =  0L;	  char    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  Char  start  =  0x7F;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  start  =  0x7F;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  start  =  0x7F;	  char    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
11	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.charAt(index);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.charAt(index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.charAt(index);	  int    start    =    index    +    1,    out;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
12	[BUG]  [BUGGY]  char  start  =  0x7F;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  0x7F;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  start  =  0x7F;	  int    start    =    0x7F;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
13	[BUG]  [BUGGY]  int  start  =  0x7F  &  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0x7F  &  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0x7F  &  1;	  int    start    =    0x7F;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
14	[BUG]  [BUGGY]  int  start  =  0x7F  &  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0x7F  &  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0x7F  &  seqEnd;	  int    start    =    0x7F;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
15	[BUG]  [BUGGY]  int  start  =  0x7F  +  seqEnd;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0x7F  +  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0x7F  +  seqEnd;	  int    start    =    0x7F;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  /  MIN_VALUE  -  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  /  MIN_VALUE  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  /  MIN_VALUE  -  1;	  int    start    =    index    +    seqEnd    *    MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  *  2  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  *  2  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  *  2  -  1;	  int    start    =    index    +    seqEnd    *    MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  *  MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  *  MIN_VALUE;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  *  MIN_VALUE;	  int    start    =    index    +    seqEnd    *    MIN_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(seqEnd  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(seqEnd  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  firstChar  =  input.charAt(seqEnd  +  1);	  char    firstChar    =    input.charAt(seqEnd    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(start  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(start  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  firstChar  =  input.charAt(start  +  1);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
21	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length()  -  seqEnd  +  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
22	[BUG]  [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  seqEnd  -  chrs.length;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  int  end  =  chrs.length  -  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length  -  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length  -  seqEnd  +  1;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  int  end  =  chrs.length  -  1,  seqEnd;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length  -  1,  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length  -  1,  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(start);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  firstChar  =  input.charAt(start);	  char    firstChar    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
26	[BUG]  [BUGGY]  int  end  =  chrs.length()  -  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  -  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  -  seqEnd  +  1;	  int    end    =    chrs.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
27	[BUG]  [BUGGY]  int  end  =  chrs.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  -  1;	  int    end    =    chrs.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
28	[BUG]  [BUGGY]  int  end  =  chrs.length()  *  seqEnd;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  *  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  *  seqEnd;	  int    end    =    chrs.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  int  start  =  seqEnd  +  len  -  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  len  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  len  -  1;	  int    start    =    index    +    len    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
30	[BUG]  [BUGGY]  char  start  =  index  +  len  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  index  +  len  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  start  =  index  +  len  -  1;	  int    start    =    index    +    len    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
31	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  input.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  +  2;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  +  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  +  2;	  int    start    =    index    +    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  seqEnd  -  1  :  0;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  seqEnd  -  1  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  seqEnd  -  1  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    -    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
35	[BUG]  [BUGGY]  int  start  =(index  >  0)?  seqEnd  -  1  :  0;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(index  >  0)?  seqEnd  -  1  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(index  >  0)?  seqEnd  -  1  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    -    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
36	[BUG]  [BUGGY]  int  start  =(seqEnd  ==  0)?  seqEnd  -  1  :  0;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  ==  0)?  seqEnd  -  1  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  ==  0)?  seqEnd  -  1  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    -    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
37	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  output.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  output.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  seqStart  -  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  seqStart  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  1  :  seqStart  -  1;	  int    start    =    index    +    1,    isHex?    1    :    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  0,  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  0,  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  1  :  0,  seqEnd  -  1;	  int    start    =    index    +    1,    isHex?    1    :    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  1  :  index  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  1  :  index  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  isHex?  1  :  index  -  1;	  int    start    =    index    +    1,    isHex?    1    :    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  out.write('#',  seqEnd);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('#',  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('#',  seqEnd);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
42	[BUG]  [BUGGY]  out.write('#',  seqEnd  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('#',  seqEnd  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('#',  seqEnd  -  1);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
43	[BUG]  [BUGGY]  out.write('#',  seqEnd  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('#',  seqEnd  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('#',  seqEnd  +  1);	  out.write('#');    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
44	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  firstChar  =  input.charAt(seqEnd  +  2);	  char    firstChar    =    input.charAt(index    +    2);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index  +  2);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(index  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  firstChar  =  input.charAt(index  +  2);	  char    firstChar    =    input.charAt(index    +    2);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  int  start  =  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  -  1;	  int    start    =    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  char  start  =  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  start  =  seqEnd  +  1;	  int    start    =    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
48	[BUG]  [BUGGY]  int  end  =  seqEnd.length  -  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  seqEnd.length  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  seqEnd.length  -  1;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
49	[BUG]  [BUGGY]  int  end  =  index.length;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
50	[BUG]  [BUGGY]  int  end  =  input.length;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
51	[BUG]  [BUGGY]  String  end  =  chrs.length;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  end  =  chrs.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  end  =  chrs.length;	  char    end    =    chrs.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  Char  end  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  end  =  input.charAt(seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  end  =  input.charAt(seqEnd);	  char    end    =    chrs.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  char  end  =  chrs.length  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  chrs.length  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  chrs.length  -  1;	  char    end    =    chrs.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  Char  end  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  end  =  input.charAt(seqEnd  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  end  =  input.charAt(seqEnd  -  1);	  char    end    =    chrs.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
55	[BUG]  [BUGGY]  int  end  =  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  seqEnd  -  1;	  int    end    =    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  char  end  =  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  seqEnd  +  1;	  int    end    =    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
57	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length  -  2;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length  -  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length  -  2;	  int    start    =    index    +    1,    out.length    -    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
58	[BUG]  [BUGGY]  int  start  =  index  +  1,  input.length  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  input.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  input.length  -  1;	  int    start    =    index    +    1,    out.length    -    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
59	[BUG]  [BUGGY]  int  start  =  index  +  1,  output.length  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  output.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  output.length  -  1;	  int    start    =    index    +    1,    out.length    -    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
60	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqStart  -  1  :  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqStart  -  1  :  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqStart  -  1  :  seqEnd  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqStart  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqStart  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqStart  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  end  -  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  end  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  end  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length  -  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length  -  seqEnd;	  int    start    =    index    +    1,    out.length;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
64	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length  -  seqStart;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length  -  seqStart;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length  -  seqStart;	  int    start    =    index    +    1,    out.length;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
65	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(seqEnd);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  firstChar  =  input.charAt(seqEnd);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  out.write('n',  start  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  start  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  start  +  1);	  out.write('n',    start);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
67	[BUG]  [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  start  +  1,  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
68	[BUG]  [BUGGY]  out.write('n',  start  +  seqEnd);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  start  +  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  start  +  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
69	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  seqEnd  :  0;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  seqEnd  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  seqEnd  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    :    0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
70	[BUG]  [BUGGY]  int  start  =(seqEnd  ==  0)?  seqEnd  :  0;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  ==  0)?  seqEnd  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  ==  0)?  seqEnd  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    :    0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
71	[BUG]  [BUGGY]  int  start  =(index  >  0)?  seqEnd  :  0;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(index  >  0)?  seqEnd  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(index  >  0)?  seqEnd  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    :    0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
72	[BUG]  [BUGGY]  int  start  =(seqEnd  >=  0)?  seqEnd  :  0;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  >=  0)?  seqEnd  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  >=  0)?  seqEnd  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    :    0;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
73	[BUG]  [BUGGY]  int  end  =  out.length()  -  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  out.length()  -  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  out.length()  -  seqEnd;	  int    end    =    out.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
74	[BUG]  [BUGGY]  int  end  =  out.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  out.length()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  out.length()  -  1;	  int    end    =    out.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
75	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  =  0;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  =  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  =  0;	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  =  out.charAt(index);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  =  out.charAt(index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  =  out.charAt(index);	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex.length;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex.length;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex.length;	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
78	[BUG]  [BUGGY]  int  end  =  index;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
79	[BUG]  [BUGGY]  int  end  =  0;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  0;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  0;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  char  end  =  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  seqEnd;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  int  end  =  chrs.length()  +  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  +  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  +  seqEnd  +  1;	  int    end    =    chrs.length()    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
82	[BUG]  [BUGGY]  int  end  =  chrs.length()  +  1,  seqEnd;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  +  1,  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  +  1,  seqEnd;	  int    end    =    chrs.length()    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
83	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.length();	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
84	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  input.length()  :  out.length();  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  input.length()  :  out.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  input.length()  :  out.length();	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
85	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  input.length()  -  1  :  out.length();  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  input.length()  -  1  :  out.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  input.length()  -  1  :  out.length();	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
86	[BUG]  [BUGGY]  out.write('0',  seqEnd);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('0',  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('0',  seqEnd);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  out.write('0'  +  seqEnd);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('0'  +  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('0'  +  seqEnd);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
88	[BUG]  [BUGGY]  out.write('0',  seqEnd  -  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('0',  seqEnd  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('0',  seqEnd  -  1);	  out.write('0');    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
89	[BUG]  [BUGGY]  int  start  =(index  <  0)?  0  :  seqEnd;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(index  <  0)?  0  :  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(index  <  0)?  0  :  seqEnd;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
90	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  0  :  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  0  :  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  0  :  seqEnd  +  1;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
91	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  1  :  seqEnd;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  1  :  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  1  :  seqEnd;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
92	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  firstChar  =  input.charAt(index  +  1);	  String    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
93	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  firstChar  =  input.charAt(index);	  String    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  int  start  =  index  +  1,  end  =  0;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  end  =  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  end  =  0;	  int    start    =    index    +    1,    end    -    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
95	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  end  -  1  :  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  end  -  1  :  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  end  -  1  :  seqEnd  -  1;	  int    start    =    index    +    1,    end    -    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
96	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  end  -  1;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  end  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  end  -  1;	  int    start    =    index    +    1,    end    -    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
97	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index  +  1,  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index  +  1,  seqEnd;	  int    end    =    index    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
98	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index  +  seqEnd  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index  +  seqEnd  +  1;	  int    end    =    index    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
99	[BUG]  [BUGGY]  int  start  =  index  +  1,  input.length  -  seqEnd;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  input.length  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  input.length  -  seqEnd;	  int    start    =    index    +    1,    input.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
100	[BUG]  [BUGGY]  int  start  =  index  +  1,  input.length,  out.length);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  input.length,  out.length);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  input.length,  out.length);	  int    start    =    index    +    1,    input.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
101	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index  +  1,  seqEnd  -  1;	  int    end    =    index    +    2;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
102	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  +  1;	  int    start    =    index    +    1,    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
103	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqEnd  +  2;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  seqEnd  +  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  seqEnd  +  2;	  int    start    =    index    +    1,    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
104	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  1;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
105	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  :  2;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  :  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  :  2;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
106	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  :  1;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  :  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  firstChar  :  1;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  out.write('n',  seqEnd  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  seqEnd  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  seqEnd  +  1);	  out.write('n',    seqEnd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
108	[BUG]  [BUGGY]  out.write('n',  index);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  index);	  out.write('n',    seqEnd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
109	[BUG]  [BUGGY]  out.write('n',  seqEnd  -  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  seqEnd  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  seqEnd  -  1);	  out.write('n',    seqEnd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
110	[BUG]  [BUGGY]  int  end  =  chrs.length  -  2;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length  -  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length  -  2;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
111	[BUG]  [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length  -  1  +  seqEnd;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
112	[BUG]  [BUGGY]  int  end  =  index  +  4;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index  +  4;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index  +  4;	  int    end    =    index    +    3;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
113	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length()  -  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length()  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length()  -  seqEnd;	  int    start    =    index    +    1,    out.length();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length()  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length()  -  1;	  int    start    =    index    +    1,    out.length();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  int  start  =  index  +  1,  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  input.length();	  int    start    =    index    +    1,    out.length();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
116	[BUG]  [BUGGY]  String  end  =  chrs.length();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  end  =  chrs.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	String  end  =  chrs.length();	  char    end    =    chrs.length();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
117	[BUG]  [BUGGY]  Character  end  =  chrs.length();  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Character  end  =  chrs.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Character  end  =  chrs.length();	  char    end    =    chrs.length();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
118	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  1  :  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  1  :  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  isHex?  1  :  seqEnd  -  1;	  int    start    =    index    +    1,    isHex?    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
119	[BUG]  [BUGGY]  char  end  =  input.length;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  input.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  input.length;	  char    end    =    chrs.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
120	[BUG]  [BUGGY]  int  end  =  out.length;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  out.length;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  out.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
121	[BUG]  [BUGGY]  int  start  =  0x7F  -  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0x7F  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0x7F  -  seqEnd;	  int    start    =    0x7F;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
122	[BUG]  [BUGGY]  int  start  =  chrs.length  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  chrs.length  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  chrs.length  +  1;	  int    start    =    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
123	[BUG]  [BUGGY]  Char  end  =  input.length();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  end  =  input.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  end  =  input.length();	  char    end    =    chrs.length();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
124	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  -  1  :  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  -  1  :  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  firstChar  -  1  :  seqEnd  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
125	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  seqEnd  -  1  :  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  seqEnd  -  1  :  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  isHex?  seqEnd  -  1  :  seqEnd  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
126	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  firstChar  =  input.charAt(start  +  2);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
127	[BUG]  [BUGGY]  int  end  =  input.length  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length  -  1;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.readLine();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.readLine();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.readLine();	  int    start    =    index    +    1,    out;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
129	[BUG]  [BUGGY]  out.write('#'  +  seqEnd);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('#'  +  seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('#'  +  seqEnd);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
130	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  seqEnd  :  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  isHex?  seqEnd  :  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  isHex?  seqEnd  :  1;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
131	[BUG]  [BUGGY]  int  start  =(seqEnd  >  0)?  seqStart  -  1  :  0;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  >  0)?  seqStart  -  1  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  >  0)?  seqStart  -  1  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    -    1    :    0;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
132	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  -  1  :  out.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  firstChar  -  1  :  out.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  firstChar  -  1  :  out.length();	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
133	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  *  4  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  *  4  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  *  4  -  1;	  int    start    =    index    +    seqEnd    *    MIN_VALUE    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  *  length  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  seqEnd  *  length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  seqEnd  *  length  -  1;	  int    start    =    index    +    seqEnd    *    MIN_VALUE    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  int  start  =  chrs.length  +  seqStart  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  chrs.length  +  seqStart  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  chrs.length  +  seqStart  -  1;	  int    start    =    index    +    seqStart    -    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
136	[BUG]  [BUGGY]  int  start  =  seqStart  +  index  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqStart  +  index  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqStart  +  index  -  1;	  int    start    =    index    +    seqStart    -    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
137	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
138	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.length  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.length  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.length  +  1;	  int    start    =    index    +    1,    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
139	[BUG]  [BUGGY]  int  start  =  index  +  1,  end  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  end  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  end  +  1;	  int    start    =    index    +    1,    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
140	[BUG]  [BUGGY]  char  end  =  out.length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  end  =  out.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	char  end  =  out.length();	  int    end    =    out.length();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
141	[BUG]  [BUGGY]  int  start  =  index  +  1,  end  =  out.length  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  end  =  out.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  end  =  out.length  -  1;	  int    start    =    index    +    1,    end    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
142	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    chrs.length()    +    seqEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
143	[BUG]  [BUGGY]  int  end  =  input.length  -  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length  -  seqEnd;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
144	[BUG]  [BUGGY]  int  start  =  chrs.length  +  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  chrs.length  +  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  chrs.length  +  seqEnd  +  1;	  int    start    =    index    +    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
145	[BUG]  [BUGGY]  int  start  =  0  +  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0  +  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0  +  seqEnd  +  1;	  int    start    =    index    +    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  out.write('n',  start  +  2);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.write('n',  start  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.write('n',  start  +  2);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
147	[BUG]  [BUGGY]  int  start  =  seqEnd  +  1,  out.length  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  seqEnd  +  1,  out.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  seqEnd  +  1,  out.length  -  1;	  int    start    =    index    +    1,    out.length    -    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
148	[BUG]  [BUGGY]  int  start  =  0  +  1,  out.length  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0  +  1,  out.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0  +  1,  out.length  -  1;	  int    start    =    index    +    1,    out.length    -    1;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
149	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  =  out.charAt(0);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  =  out.charAt(0);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  =  out.charAt(0);	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
150	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  =  out.length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  =  out.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  =  out.length();	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
151	[BUG]  [BUGGY]  int  start  =(seqEnd  >  0)?  seqStart  :  0;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  >  0)?  seqStart  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  >  0)?  seqStart  :  0;	  int    start    =(seqEnd    >    0)?    seqEnd    :    0;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
152	[BUG]  [BUGGY]  int  end  =  data.length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  data.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  data.length();	  int    end    =    chrs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
153	[BUG]  [BUGGY]  int  end  =  seqEnd  +  2;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  seqEnd  +  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  seqEnd  +  2;	  int    end    =    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
154	[BUG]  [BUGGY]  Integer  firstChar  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.charAt(index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Integer  firstChar  =  input.charAt(index  +  1);	  String    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
155	[BUG]  [BUGGY]  int  end  =  chrs.length  +  2;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length  +  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length  +  2;	  int    end    =    chrs.length    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
156	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqStart;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length()  -  seqStart;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length()  -  seqStart;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
157	[BUG]  [BUGGY]  int  end  =  input.length()  -  start;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length()  -  start;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length()  -  start;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
158	[BUG]  [BUGGY]  int  start  =(seqEnd  >  0)?  0  :  seqEnd;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  >  0)?  0  :  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  >  0)?  0  :  seqEnd;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
159	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  -1  :  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  -1  :  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  -1  :  seqEnd;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
160	[BUG]  [BUGGY]  int  start  =  len  +  index  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  len  +  index  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  len  +  index  -  1;	  int    start    =    index    +    len    -    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
161	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqStart  -  1  :  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqStart  -  1  :  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqStart  -  1  :  input.length();	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
162	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.charAt(0);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.charAt(0);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  input.charAt(0);	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    out.length();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
163	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  index  +  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  index  +  seqEnd  -  1;	  int    end    =    index    +    seqEnd;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
164	[BUG]  [BUGGY]  out.append('0');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  out.append('0');  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	out.append('0');	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
165	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  :  0;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  :  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  :  0;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
166	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  1  :  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  1  :  1;	  int    start    =    index    +    1,    isHex?    seqEnd    :    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
167	[BUG]  [BUGGY]  Char  start  =  0;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  start  =  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	Char  start  =  0;	  char    start    =    0;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
168	[BUG]  [BUGGY]  int  start  =  index  +  1,  out.write(chrs,  0,  seqEnd);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  out.write(chrs,  0,  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  out.write(chrs,  0,  seqEnd);	  int    start    =    index    +    1,    out;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
169	[BUG]  [BUGGY]  int  end  =  chrs.length()  -  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  -  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  -  seqEnd  -  1;	  int    end    =    chrs.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
170	[BUG]  [BUGGY]  int  start  =  index  +  1,  len  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  len  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  len  -  1;	  int    start    =    index    +    len    -    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
171	[BUG]  [BUGGY]  int  start  =  index  +  length  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  length  -  1;	  int    start    =    index    +    len    -    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
172	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqStart  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  seqStart  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  seqStart  -  1;	  int    start    =    index    +    seqStart    -    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
173	[BUG]  [BUGGY]  int  start  =  index  +  1,  input.length  -  seqStart;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  input.length  -  seqStart;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  input.length  -  seqStart;	  int    start    =    index    +    1,    input.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
174	[BUG]  [BUGGY]  int  start  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length()  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  input.length()  +  1;	  int    start    =    seqEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
175	[BUG]  [BUGGY]  int  start  =  0x7F  |  input.charAt(index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  0x7F  |  input.charAt(index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  0x7F  |  input.charAt(index);	  int    start    =    0x7F;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
176	[BUG]  [BUGGY]  int  end  =  chrs.length()  +  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  chrs.length()  +  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  chrs.length()  +  seqEnd  -  1;	  int    end    =    chrs.length()    +    seqEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
177	[BUG]  [BUGGY]  int  start  =(seqEnd  <  0)?  0  :  seqStart;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =(seqEnd  <  0)?  0  :  seqStart;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =(seqEnd  <  0)?  0  :  seqStart;	  int    start    =(seqEnd    <    0)?    0    :    seqEnd;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
178	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex  =  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex  =  input.length();	  int    start    =    index    +    1,    isHex;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
179	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  end  =  input.length()  -  seqEnd  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  end  =  input.length()  -  seqEnd  -  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
180	[BUG]  [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqIndex  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqIndex  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	int  start  =  index  +  1,  isHex?  seqEnd  -  1  :  seqIndex  -  1;	  int    start    =    index    +    1,    isHex?    seqEnd    -    1    :    seqEnd    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
