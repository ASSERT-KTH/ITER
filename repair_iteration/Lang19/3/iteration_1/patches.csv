bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  -  2;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  seqEnd  -  2;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  -  2;	      int    end    =    index    +    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  *  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  seqEnd  *  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  *  1;	      int    end    =    index    +    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
9	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
10	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
11	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
12	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	replace
13	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
14	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  int  end  =  index  +  2;  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  2;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  2;	      int    end    =    index    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  int  end  =  index  +  3;  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  3;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  3;	      int    end    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
23	[BUG]  [BUGGY]  int  end  =  index  +  4;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  4;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  4;	      int    end    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
24	[BUG]  [BUGGY]  int  end  =  input.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  input.length()  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  -  1;	      int    end    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
25	[BUG]  [BUGGY]  int  end  =  input.length()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  input.length()  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  +  1;	      int    end    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
26	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  input.length()  -  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  -  seqEnd;	      int    end    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
27	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
28	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
29	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
30	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
31	[BUG]  [BUGGY]  int  end  =  getEnd()  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  getEnd()  -  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  seqEnd;	      int    end    =    getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
32	[BUG]  [BUGGY]  int  end  =  getEnd()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  getEnd()  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  +  1;	      int    end    =    getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
33	[BUG]  [BUGGY]  int  end  =  getEndIndex();  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  getEndIndex();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEndIndex();	      int    end    =    getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
34	[BUG]  [BUGGY]  int  start  =  index  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  start  =  index  +  2;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  2;	      int    start    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
35	[BUG]  [BUGGY]  int  start  =  index  +  3;  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  start  =  index  +  3;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  3;	      int    start    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
36	[BUG]  [BUGGY]  int  start  =  index  +  4;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  start  =  index  +  4;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  4;	      int    start    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
37	[BUG]  [BUGGY]  int  end  =  seqEnd.length;  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  seqEnd.length;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd.length;	      int    end    =    chrs.length;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
38	[BUG]  [BUGGY]  int  end  =  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd;	      int    end    =    chrs.length;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
39	[BUG]  [BUGGY]  int  end  =  chrs.length  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  chrs.length  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  1;	      int    end    =    chrs.length;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
40	[BUG]  [BUGGY]  int  end  =  chrs.length  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  chrs.length  -  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  seqEnd;	      int    end    =    chrs.length;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
41	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
42	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {	  if(input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
43	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
44	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  seqEnd  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  +  1;	      int    end    =    index    +    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
45	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  index  +  1,  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  seqEnd;	      int    end    =    index    +    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
46	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
47	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
48	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
49	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
50	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
51	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
52	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
53	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
54	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
55	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
56	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
57	[BUG]  [BUGGY]  if(index  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
58	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  int  end  =  seqEnd  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  seqEnd  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd  +  1;	      int    end    =    index    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
60	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
61	[BUG]  [BUGGY]  int  end  =  getStart();  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  getStart();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getStart();	      int    end    =    getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
62	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
63	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
64	[BUG]  [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
65	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
66	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
67	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	      	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
68	[BUG]  [BUGGY]  int  end  =  start  +  seqEnd  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  start  +  seqEnd  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  seqEnd  -  1;	      int    end    =    index    +    seqEnd    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
69	[BUG]  [BUGGY]  int  end  =  seqEnd  +  index  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  seqEnd  +  index  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd  +  index  -  1;	      int    end    =    index    +    seqEnd    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
70	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
71	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  int  end  =  start  +  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  start  +  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  seqEnd;	      int    end    =    index    +    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
73	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
75	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
76	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
77	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
78	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
79	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
80	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
81	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
83	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
84	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
85	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  start  =  index  +  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  seqEnd;	      int    start    =    index    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
86	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
88	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
89	[BUG]  [BUGGY]  int  end  =  getEnd()  +  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  int  end  =  getEnd()  +  seqEnd;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  +  seqEnd;	      int    end    =    getEnd();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();      [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
