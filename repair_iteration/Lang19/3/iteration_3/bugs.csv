bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
2	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
4	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
5	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
6	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
7	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  2)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  2)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  2)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
8	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(seqEnd  <  =  index  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  index  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  index  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
12	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
13	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
14	[BUG]  [BUGGY]  if(seqEnd  <  =  index  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  index  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  index  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
16	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
17	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
18	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
19	[BUG]  [BUGGY]  int  end  =  chrs.length  +  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  +  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  +  seqEnd  -  1;	  int    end    =    start    +    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
20	[BUG]  [BUGGY]  int  end  =  start  +  index  -  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start  +  index  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  index  -  1;	  int    end    =    start    +    seqEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
21	[BUG]  [BUGGY]  if(index  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
22	[BUG]  [BUGGY]  if(seqEnd  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
23	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
24	[BUG]  [BUGGY]  if(index  >  0  ||  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  ||  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  ||  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
25	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
26	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
27	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
28	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
29	[BUG]  [BUGGY]  int  end  =  getStart()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getStart()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getStart()  +  1;	  int    end    =    getEnd()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
30	[BUG]  [BUGGY]  int  end  =  getEnd()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  1;	  int    end    =    getEnd()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
31	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
32	[BUG]  [BUGGY]  if(index  <  0  ||  index  ==  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  ==  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  ==  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
33	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
34	[BUG]  [BUGGY]  if(index  <  0  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
35	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
36	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd  =  0;  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  seqEnd  =  0;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  seqEnd  =  0;	  int    end    =    index    +    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
37	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  seqEnd  -  1;	  int    end    =    index    +    2;    	non-compiled	[CE]  ';'  expected	21	None	replace
38	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
39	[BUG]  [BUGGY]  if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
40	[BUG]  [BUGGY]  if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
41	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
42	[BUG]  [BUGGY]  if(index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
43	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
44	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  index!=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
45	[BUG]  [BUGGY]  if(index  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
46	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
47	[BUG]  [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
48	[BUG]  [BUGGY]  if(seqEnd  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
49	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
50	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
51	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
52	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  /  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  seqEnd  /  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  /  1;	  int    end    =    index    +    seqEnd    *    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
53	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  *  2;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  seqEnd  *  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  *  2;	  int    end    =    index    +    seqEnd    *    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
54	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  *  4;  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  seqEnd  *  4;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  *  4;	  int    end    =    index    +    seqEnd    *    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
55	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  2)  ==  '&')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(seqEnd  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(seqEnd  +  1)  ==  '&')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
57	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
58	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
59	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
60	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
61	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  output.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  output.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
62	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  ==  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  ==  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  ==  -1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
64	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
65	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
66	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >=  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >=  -1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >=  -1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
67	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
68	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
69	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
70	[BUG]  [BUGGY]  int  end  =  getStart()  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getStart()  -  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getStart()  -  seqEnd;	  int    end    =    getStart();    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
71	[BUG]  [BUGGY]  int  end  =  getStart()  +  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getStart()  +  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getStart()  +  seqEnd;	  int    end    =    getStart();    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
72	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  /  2;  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  seqEnd  /  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  /  2;	  int    end    =    index    +    seqEnd    -    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
73	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	replace
74	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
75	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
76	[BUG]  [BUGGY]  if(seqEnd!=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd!=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd!=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
77	[BUG]  [BUGGY]  int  end  =  chrs.length  +  index  -  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  +  index  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  +  index  -  1;	  int    end    =    seqEnd    +    index    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
78	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
79	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
80	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  input.charAt(index  +  1)!=  '#')  {	  if(seqEnd    <    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
81	[BUG]  [BUGGY]  int  end  =  seqEnd.length  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  seqEnd.length  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd.length  -  1;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
82	[BUG]  [BUGGY]  int  end  =  index.length;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  int  end  =  index;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
84	[BUG]  [BUGGY]  int  end  =  input.length;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
85	[BUG]  [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
86	[BUG]  [BUGGY]  if(index  >=  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
87	[BUG]  [BUGGY]  if(index  ==  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  ||  seqEnd  ==  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
88	[BUG]  [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
89	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  index  +  1,  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  1,  seqEnd;	  int    start    =    index    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
90	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  index  +  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  seqEnd  -  1;	  int    start    =    index    +    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
91	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
92	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
93	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
94	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
95	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
96	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
97	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
98	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
99	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
100	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	replace
101	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	replace
102	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	replace
103	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
104	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
105	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
106	[BUG]  [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd  -  chrs.length;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
107	[BUG]  [BUGGY]  int  end  =  index  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  -  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
108	[BUG]  [BUGGY]  int  end  =  chrs.length  -  seqEnd  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  -  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  seqEnd  +  1;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
109	[BUG]  [BUGGY]  int  end  =  getEnd()  +  seqEnd  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  +  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  +  seqEnd  +  1;	  int    end    =    getEnd()    +    seqEnd;    	non-compiled	[CE]  reached  end  of  file  while  parsing	89	None	replace
110	[BUG]  [BUGGY]  int  isHex  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  isHex  =  input.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  isHex  =  input.length();	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	replace
111	[BUG]  [BUGGY]  int  isHex  =  input.indexOf(seqEnd);  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  isHex  =  input.indexOf(seqEnd);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  isHex  =  input.indexOf(seqEnd);	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	replace
112	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
113	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
114	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
115	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
116	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
117	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)!=  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
118	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
119	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
120	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
121	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
122	[BUG]  [BUGGY]  int  end  =  getEndIndex()  -  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEndIndex()  -  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEndIndex()  -  seqEnd;	  int    end    =    getEndIndex();    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	replace
123	[BUG]  [BUGGY]  int  end  =  getEndIndex()  +  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEndIndex()  +  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEndIndex()  +  seqEnd;	  int    end    =    getEndIndex();    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	replace
124	[BUG]  [BUGGY]  int  end  =  getEndIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEndIndex()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEndIndex()  +  1;	  int    end    =    getEndIndex();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
125	[BUG]  [BUGGY]  int  end  =  getEndIndex(seqEnd);  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEndIndex(seqEnd);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEndIndex(seqEnd);	  int    end    =    getEndIndex();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
126	[BUG]  [BUGGY]  int  end  =  index  +  1,  isHex;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  isHex;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  isHex;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
127	[BUG]  [BUGGY]  int  end  =  index  +  1,  input.charAt(index);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  input.charAt(index);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  input.charAt(index);	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
128	[BUG]  [BUGGY]  int  end  =  index  +  1,  input.length;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  input.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  input.length;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
129	[BUG]  [BUGGY]  int  end  =  index  +  1,  out.length;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  out.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  out.length;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
130	[BUG]  [BUGGY]  int  end  =  start  +  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  1;	  int    end    =    start    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
131	[BUG]  [BUGGY]  int  end  =  start  +  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start  +  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  seqEnd  +  1;	  int    end    =    start    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
132	[BUG]  [BUGGY]  int  end  =  getEnd()  -  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  -  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  seqEnd  +  1;	  int    end    =    getEnd()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
133	[BUG]  [BUGGY]  int  end  =  getEnd()  -  index;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  -  index;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  index;	  int    end    =    getEnd()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
134	[BUG]  [BUGGY]  int  end  =  getEnd()  /  seqEnd;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  /  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  /  seqEnd;	  int    end    =    getEnd()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
135	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  char  end  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	char  end  =  input.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  2)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
137	[BUG]  [BUGGY]  if(seqEnd  >=  index  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  index  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  index  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
138	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
140	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    seqEnd    >    -1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
141	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)!=  '#')  {	  if(seqEnd    <    0    ||    seqEnd    >    -1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
142	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    seqEnd    >    -1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
143	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)!=  '#')  {	  if(seqEnd    <    0    ||    seqEnd    >    -1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
144	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
145	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
146	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
147	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	80	None	replace
148	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
149	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
150	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
151	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
152	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  seqEnd  +  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  seqEnd  +  2;	  int    end    =    index    +    seqEnd    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
153	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
154	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
155	[BUG]  [BUGGY]  int  end  =  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  seqEnd  -  1;	  int    end    =    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
156	[BUG]  [BUGGY]  int  end  =  chrs.length  +  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  +  1;	  int    end    =    seqEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
157	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
158	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
159	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
160	[BUG]  [BUGGY]  int  end  =  input.length()  *  seqEnd;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length()  *  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  *  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
161	[BUG]  [BUGGY]  if(index  <  1  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  1  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  1  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
162	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
163	[BUG]  [BUGGY]  if(seqEnd  >=  index  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  index  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  index  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
164	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  reached  end  of  file  while  parsing  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
165	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'  [CE]  ')'  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X'	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  ')'  expected	16	None	replace
166	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  reached  end  of  file  while  parsing  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
167	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X  [CE]  unclosed  character  literal  [FE]                                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd)  {  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
168	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	replace
169	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(index  +  2)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
170	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqEnd  =  0;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  index  +  1,  seqEnd  =  0;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  1,  seqEnd  =  0;	  int    start    =    index    +    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
171	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  index  +  1,  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  1,  seqEnd  -  1;	  int    start    =    index    +    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
172	[BUG]  [BUGGY]  int  end  =  0;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  0;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  0;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
173	[BUG]  [BUGGY]  int  end  =  this.entityValue;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  this.entityValue;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  this.entityValue;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
174	[BUG]  [BUGGY]  char  end  =  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  char  end  =  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	char  end  =  seqEnd;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
175	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
176	[BUG]  [BUGGY]  if(seqEnd  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
177	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
178	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	replace
179	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
180	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
181	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
182	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
183	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '&')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '&')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
184	[BUG]  [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
185	[BUG]  [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  1  +  seqEnd;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
186	[BUG]  [BUGGY]  int  end  =  chrs.length  -  2;  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  -  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  2;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
187	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
188	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
189	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  expression  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)!=  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
190	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
191	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
192	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  2  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
193	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
194	[BUG]  [BUGGY]  if(index  <  len  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  len  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  len  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
195	[BUG]  [BUGGY]  if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
196	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  reached  end  of  file  while  parsing  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
197	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
198	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
199	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
200	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
201	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
202	[BUG]  [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
203	[BUG]  [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
204	[BUG]  [BUGGY]  if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  +  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(seqEnd    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
205	[BUG]  [BUGGY]  if(index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(seqEnd    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
206	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
207	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
208	[BUG]  [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
209	[BUG]  [BUGGY]  if(index  <  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
210	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
211	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(seqEnd    -    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
212	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
213	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
214	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
215	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
216	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
217	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
218	[BUG]  [BUGGY]  int  end  =  start;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start;	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
219	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
220	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
221	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
222	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
223	[BUG]  [BUGGY]  if(index  <  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
224	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(seqEnd  +  1)!=  '#')  {	  if(seqEnd    <    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
225	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  +  2)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
226	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
227	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
228	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
229	[BUG]  [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
230	[BUG]  [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
231	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
232	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
233	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
234	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
235	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
236	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&')  {	  if(index    <    seqEnd    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
237	[BUG]  [BUGGY]  int  end  =  index  +  1,  out.length();  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  out.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  out.length();	  int    end    =    index    +    2;    	non-compiled	[CE]  ';'  expected	21	None	replace
238	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
239	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    seqEnd    >    -1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
240	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
241	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
242	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
243	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
244	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
245	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
246	[BUG]  [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
247	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
248	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
249	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
250	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  start  =  index  +  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  start  =  index  +  seqEnd  +  1;	  int    start    =    index    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
251	[BUG]  [BUGGY]  int  end  =  getEnd()  +  seqEnd  -  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  +  seqEnd  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  +  seqEnd  -  1;	  int    end    =    getEnd()    +    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
252	[BUG]  [BUGGY]  int  end  =  chrs.length  -  start;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  chrs.length  -  start;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  chrs.length  -  start;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
253	[BUG]  [BUGGY]  int  end  =  index  +  1,  out.readLine();  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  out.readLine();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  out.readLine();	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  ';'  expected	45	None	replace
254	[BUG]  [BUGGY]  int  end  =  index  +  1,  out;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  out;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  out;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
255	[BUG]  [BUGGY]  int  end  =  start  +  1,  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start  +  1,  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  1,  seqEnd;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
256	[BUG]  [BUGGY]  if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
257	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  start  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
258	[BUG]  [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
259	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
260	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
261	[BUG]  [BUGGY]  if(index  <  =  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  seqEnd  -  1  ||  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(seqEnd    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
262	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
263	[BUG]  [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  seqEnd  >  -1  &&  input.charAt(index  +  1)!=  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
264	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
265	[BUG]  [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
266	[BUG]  [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
267	[BUG]  [BUGGY]  int  end  =  out.length;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  out.length;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  out.length;	  int    end    =    seqEnd.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
268	[BUG]  [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
269	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
270	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
271	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
272	[BUG]  [BUGGY]  if(seqEnd  ==  -1)  {  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  -1)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  -1)  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
273	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
274	[BUG]  [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
275	[BUG]  [BUGGY]  int  end  =  start  +  seqEnd  *  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  start  +  seqEnd  *  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  start  +  seqEnd  *  1;	  int    end    =    index    +    seqEnd    *    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
276	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(start)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(start)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(start)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
277	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
278	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  -  1  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
279	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
280	[BUG]  [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  ==  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
281	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
282	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '&')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
283	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
284	[BUG]  [BUGGY]  if(index  <  =  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  seqEnd  &&  input.charAt(index  +  1)  ==  '&')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
285	[BUG]  [BUGGY]  int  end  =  getEnd()  -  start;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  -  start;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  start;	  int    end    =    getEnd()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
286	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
287	[BUG]  [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
288	[BUG]  [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
289	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
290	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
291	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
292	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
293	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(seqEnd  +  1)!=  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
294	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
295	[BUG]  [BUGGY]  if(index  >=  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  ||  input.charAt(index)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
296	[BUG]  [BUGGY]  int  end  =  input.length()  -  start;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length()  -  start;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  -  start;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
297	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length()  -  seqEnd  +  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
298	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
299	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
300	[BUG]  [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
301	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  is  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  is  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  is	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
302	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
303	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
304	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(0)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(0)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(0)  ==  '&'  &&  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
305	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
306	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
307	[BUG]  [BUGGY]  if(seqEnd  >=  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  ||  input.charAt(index)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
308	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
309	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  isHex  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    ==    0    &&    input.charAt(index)    ==    '&'    &&    isHex    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
310	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
311	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    seqEnd    >    -1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
312	[BUG]  [BUGGY]  if(input.charAt(seqEnd)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(input.charAt(seqEnd)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(seqEnd)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
313	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
314	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)!=  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
315	[BUG]  [BUGGY]  if(index  >=  1  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  1  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  1  &&  input.charAt(index)  ==  '&'  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    seqEnd    &&    input.charAt(index)    ==    '&'    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
316	[BUG]  [BUGGY]  if(seqEnd  <  =  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
317	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    ||    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
318	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >  seqEnd  -  1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
319	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  -1  ||  input.charAt(index  +  2)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
320	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
321	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd  +  1;  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  index  +  1,  seqEnd  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  index  +  1,  seqEnd  +  1;	  int    end    =    index    +    1,    seqEnd;    	non-compiled	[CE]  ';'  expected	45	None	replace
322	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
323	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  i++)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
324	[BUG]  [BUGGY]  int  end  =  getLength();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getLength();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getLength();	  int    end    =    getStart();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
325	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  index;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  index;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  index;  i++)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    i++)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
326	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
327	[BUG]  [BUGGY]  if(input.charAt(seqEnd  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(input.charAt(seqEnd  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(seqEnd  +  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
328	[BUG]  [BUGGY]  if(input.charAt(seqEnd  -  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(input.charAt(seqEnd  -  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(seqEnd  -  1)  ==  '&'  ||  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
329	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
330	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    ==    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
331	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(index  +  1)!=  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
332	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >=  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
333	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  index  >  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  index  >  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >=    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
334	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
335	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)!=  '#')  {	  if(index    <    0    ||    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
336	[BUG]  [BUGGY]  int  end  =  input.length  -  seqEnd;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  input.length  -  seqEnd;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  input.length  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
337	[BUG]  [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
338	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd  -  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
339	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
340	[BUG]  [BUGGY]  int  end  =  out.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  out.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  out.length();	  int    end    =    seqEnd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
341	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
342	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
343	[BUG]  [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
344	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
345	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  =  seqEnd  -  1  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
346	[BUG]  [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  &&  input.charAt(index  +  1)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(seqEnd    >    0    &&    input.charAt(index    +    1)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
347	[BUG]  [BUGGY]  if(index  <  seqEnd  &&  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  seqEnd  &&  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  seqEnd  &&  input.charAt(0)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
348	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
349	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
350	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
351	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  0  ||  seqEnd  >  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    0    ||    index    >    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
352	[BUG]  [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
353	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
354	[BUG]  [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  ==  0  &&  input.charAt(index)  ==  '&'  &&  input.charAt(start  +  1)  ==  '#')  {	  if(seqEnd    <    =    0    &&    input.charAt(index)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
355	[BUG]  [BUGGY]  if(index!=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index!=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index!=  0  &&  input.charAt(seqEnd)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(seqEnd)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
356	[BUG]  [BUGGY]  int  end  =  getEnd()  -  seqStart;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  int  end  =  getEnd()  -  seqStart;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	int  end  =  getEnd()  -  seqStart;	  int    end    =    getEnd()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
357	[BUG]  [BUGGY]  if(input.charAt(seqEnd)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(input.charAt(seqEnd)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(seqEnd)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
358	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(input.charAt(index  +  1)  ==  '&'  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
359	[BUG]  [BUGGY]  if(index  >=  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  ||  index  >=  seqEnd  -  1  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    index    >=    seqEnd    -    1    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
360	[BUG]  [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  >  0  &&  input.charAt(index  +  1)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
361	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  0)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(seqEnd    >    0)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
362	[BUG]  [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  =  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
363	[BUG]  [BUGGY]  if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index!=  0  &&  input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(seqEnd  -  1)  ==  '#')  {	  if(index    >    0    &&    input.charAt(index)    ==    '&'    &&    index    <    seqEnd    -    1    &&    input.charAt(seqEnd    -    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
364	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  &&  input.charAt(seqEnd  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
365	[BUG]  [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  >=  0  &&  input.charAt(index)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
366	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  &&  seqEnd  <  =  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    >=    0    &&    input.charAt(index)    ==    '&'    &&    seqEnd    <    =    0    &&    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
367	[BUG]  [BUGGY]  if(seqEnd  <  =  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();        [BUGGY]  if(seqEnd  <  =  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	if(seqEnd  <  =  1  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(index    <    seqEnd    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
