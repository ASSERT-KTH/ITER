bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  seqEnd;	  int    start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  int  start  =  index  +  1,  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1,  seqEnd  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1,  seqEnd  -  1;	  int    start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start).length();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(start).length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(start).length();	  char    firstChar    =    input.length();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  char  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  end  =  input.length()  +  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  end  =  input.length()  +  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
5	[BUG]  [BUGGY]  String  end  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  String  end  =  input.length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	String  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
6	[BUG]  [BUGGY]  char  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  end  =  input.length()  -  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  end  =  input.length()  -  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
7	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  >=  seqEnd)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  >=  seqEnd)  {  start++;  }	  if(index    >=    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
8	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  seqEnd);	  nfe.printIndexOutOfBounds(start,    index);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
9	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  index  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  index  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  index  +  1);	  nfe.printIndexOutOfBounds(start,    index);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
10	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  firstChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  firstChar);	  nfe.printIndexOutOfBounds(start,    index);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
11	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  out);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  out);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  out);	  nfe.printIndexOutOfBounds(start,    index);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
12	[BUG]  [BUGGY]  if(isHex)  {  if(index  ==  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  if(index  ==  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  if(index  ==  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }	  if(index    ==    -1)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  if(isHex)  {  if(index  ==  -1)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  if(index  ==  -1)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  if(index  ==  -1)  {  start++;  }	  if(index    ==    -1)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(first  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(first  +  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(first  +  1);	  char    firstChar    =    input.charAt(first);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  int  start  =  index  +  1  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  1;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  int  start  =  index  +  1  -  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  seqEnd  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  seqEnd  +  1;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
17	[BUG]  [BUGGY]  int  start  =  index  +  1  -  firstChar;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  firstChar;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  firstChar;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
18	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(index,  start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(index,  start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(index,  start);	  nfe.printIndexOutOfBounds(start,    start);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
19	[BUG]  [BUGGY]  ||  isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }	  if(isHex)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
20	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(start  +  2);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start)-  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  firstChar  =  input.charAt(start)-  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  firstChar  =  input.charAt(start)-  1;	  int    firstChar    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  nfe.printStackTrace(start,  out);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printStackTrace(start,  out);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printStackTrace(start,  out);	  nfe.printStackTrace(start);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
23	[BUG]  [BUGGY]  nfe.printStackTrace(index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printStackTrace(index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printStackTrace(index);	  nfe.printStackTrace(start);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
24	[BUG]  [BUGGY]  if(!isHex  &&  start  <  seqEnd)  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(!isHex  &&  start  <  seqEnd)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(!isHex  &&  start  <  seqEnd)  {  start++;  }	  if(!isHex    &&    start    >=    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
25	[BUG]  [BUGGY]  if(!isHex  &&  start  ==  seqEnd)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(!isHex  &&  start  ==  seqEnd)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(!isHex  &&  start  ==  seqEnd)  {  start++;  }	  if(!isHex    &&    start    >=    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
26	[BUG]  [BUGGY]  if(isHex  &&  start  >=  seqEnd)  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex  &&  start  >=  seqEnd)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex  &&  start  >=  seqEnd)  {  start++;  }	  if(!isHex    &&    start    >=    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
27	[BUG]  [BUGGY]  out.write('x',  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('x',  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('x',  firstChar);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
28	[BUG]  [BUGGY]  out.write('x'  +  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('x'  +  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('x'  +  firstChar);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
29	[BUG]  [BUGGY]  out.write('x',  'X');  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('x',  'X');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('x',  'X');	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  out.write('#',  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('#',  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('#',  firstChar);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	57	None	replace
31	[BUG]  [BUGGY]  out.write('#'  +  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('#'  +  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('#'  +  firstChar);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	57	None	replace
32	[BUG]  [BUGGY]  out.write('#',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('#',  start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('#',  start);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	57	None	replace
33	[BUG]  [BUGGY]  nfe.printStackTrace(out,  index);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printStackTrace(out,  index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printStackTrace(out,  index);	  nfe.printStackTrace(out);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
34	[BUG]  [BUGGY]  nfe.printStackTrace(out,  seqEnd);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printStackTrace(out,  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printStackTrace(out,  seqEnd);	  nfe.printStackTrace(out);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
35	[BUG]  [BUGGY]  nfe.printStackTrace(out,  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printStackTrace(out,  start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printStackTrace(out,  start);	  nfe.printStackTrace(out);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
36	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.reportCodeChange();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.reportCodeChange();	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
37	[BUG]  [BUGGY]  Context.exitCodeInstantiator();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.exitCodeInstantiator();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.exitCodeInstantiator();	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
38	[BUG]  [BUGGY]  Context.exitCodeInstantiation();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.exitCodeInstantiation();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.exitCodeInstantiation();	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  out.write(chrs[index++]  &  0xfffff);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[index++]  &  0xfffff);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[index++]  &  0xfffff);	  out.write(chrs[index++]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  out.write(chrs[0]);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[0]);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[0]);	  out.write(chrs[index++]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  out.write(chrs[index++]  &  0xffff);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[index++]  &  0xffff);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[index++]  &  0xffff);	  out.write(chrs[index++]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  ||  firstChar)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  firstChar)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  firstChar)  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
43	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  '.')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  isHex  &&  firstChar  ==  '.')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  isHex  &&  firstChar  ==  '.')  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
44	[BUG]  [BUGGY]  ||!isHex)  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||!isHex)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||!isHex)  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
45	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(seqEnd);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(seqEnd);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  seqEnd);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start,  seqEnd);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start,  seqEnd);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  firstChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start,  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start,  firstChar);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  if(!isHex  &&  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(!isHex  &&  firstChar  ==  ';')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(!isHex  &&  firstChar  ==  ';')  {  start++;  }	  if(!isHex    ||    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
49	[BUG]  [BUGGY]  if(isHex  ||  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex  ||  firstChar  ==  ';')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex  ||  firstChar  ==  ';')  {  start++;  }	  if(!isHex    ||    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
50	[BUG]  [BUGGY]  if(index  <  seqEnd  -  1)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  <  seqEnd  -  1)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  <  seqEnd  -  1)  {  start++;  }	  if(index    <    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
51	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(firstChar)!=  ';';  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(firstChar)!=  ';';  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(firstChar)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	49	None	replace
52	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(start)  ==  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	49	None	replace
53	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(index)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	49	None	replace
54	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  firstChar  =  input.charAt(index);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  firstChar  =  input.charAt(index);	  int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
55	[BUG]  [BUGGY]  out.write('0',  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('0',  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('0',  firstChar);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
56	[BUG]  [BUGGY]  out.write('0'  +  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('0'  +  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('0'  +  firstChar);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
57	[BUG]  [BUGGY]  out.write('0',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('0',  start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('0',  start);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
58	[BUG]  [BUGGY]  nfe  =  input.getNumberOfBoundsException(index);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfBoundsException(index);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfBoundsException(index);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
59	[BUG]  [BUGGY]  nfe  =  input.getNumberOfChars();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfChars();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfChars();	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
60	[BUG]  [BUGGY]  nfe  =  input.getNumberOfBoundsException(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfBoundsException(start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfBoundsException(start);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
61	[BUG]  [BUGGY]  nfe  =  input.getNumberOfCharsException();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfCharsException();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfCharsException();	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
62	[BUG]  [BUGGY]  if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index++]);  }	  if(start    ==    -1)    {    start    =    index    +    1;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  if(start  ==  -1)  {  start  =  index  +  2;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  ==  -1)  {  start  =  index  +  2;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  ==  -1)  {  start  =  index  +  2;  }  else  {  out.write(chrs[index++]);  }	  if(start    ==    -1)    {    start    =    index    +    1;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  output.length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  output.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
65	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  input.length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
66	[BUG]  [BUGGY]  nfe  =  input.getNumberChar()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberChar()  +  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberChar()  +  1;	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  nfe  =  firstChar.getNumberChar();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  firstChar.getNumberChar();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  firstChar.getNumberChar();	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  nfe  =  input.getNumberChar(0);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberChar(0);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberChar(0);	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( ", ");  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException( ", ");  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException( ", ");	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( " ",  seqEnd);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException( " ",  seqEnd);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException( " ",  seqEnd);	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( " ",  firstChar);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException( " ",  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException( " ",  firstChar);	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(firstChar);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(firstChar);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
73	[BUG]  [BUGGY]  boolean  isHex  =  firstChar.charAt(start);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  firstChar.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  firstChar.charAt(start);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
74	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(index);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
75	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(start  +  1);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
76	[BUG]  [BUGGY]  start  =  index  +  seqEnd;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  start  =  index  +  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	start  =  index  +  seqEnd;	  start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  start  =  index  +  1,  isHex  =  false;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  start  =  index  +  1,  isHex  =  false;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	start  =  index  +  1,  isHex  =  false;	  start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
78	[BUG]  [BUGGY]  int  end  =  firstChar.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  firstChar.length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  firstChar.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
79	[BUG]  [BUGGY]  if(start  ==  seqEnd  -  1)  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  ==  seqEnd  -  1)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  ==  seqEnd  -  1)  {  start++;  }	  if(start    ==    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
80	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  input.length()  -  start  +  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  input.length()  -  start  +  1;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
81	[BUG]  [BUGGY]  if(index  >=  seqEnd  -  1)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  >=  seqEnd  -  1)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  >=  seqEnd  -  1)  {  start++;  }	  if(index    ==    seqEnd    -    1)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
82	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(index);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(index);	  nfe.printIndexOutOfBounds(start);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
83	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(index,  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(index,  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(index,  firstChar);	  nfe.printIndexOutOfBounds(start);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
84	[BUG]  [BUGGY]  out.write('X',  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('X',  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('X',  firstChar);	  out.write('X');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
85	[BUG]  [BUGGY]  out.write('X'  +  firstChar);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('X'  +  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('X'  +  firstChar);	  out.write('X');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
86	[BUG]  [BUGGY]  out.write(firstChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(firstChar);	  out.write('X');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
87	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
88	[BUG]  [BUGGY]  if(index  ==  -1)  {  start  =  index;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  ==  -1)  {  start  =  index;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  ==  -1)  {  start  =  index;  }  else  {  out.write(chrs[index++]);  }	  if(start    ==    -1)    {    start    =    index;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
89	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(index  +  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(index  +  1);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(index,  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(index,  firstChar);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  index);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start,  index);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start,  index);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
92	[BUG]  [BUGGY]  nfe  =  input.getNumber();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumber();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumber();	  nfe    =    input.getNumberInput();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
93	[BUG]  [BUGGY]  nfe  =  input.getNumberInput()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberInput()  +  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberInput()  +  1;	  nfe    =    input.getNumberInput();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
94	[BUG]  [BUGGY]  out.write('n',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('n',  firstChar  +  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('n',  firstChar  +  1);	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
95	[BUG]  [BUGGY]  out.write('n',  'X');  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('n',  'X');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('n',  'X');	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
96	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  firstChar  =  input.charAt(start  -  1);	  int    firstChar    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
97	[BUG]  [BUGGY]  nfe  =  input.getNumberChar(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberChar(start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberChar(start);	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  out.write(chrs[index]);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[index]);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[index]);	  if(start    ==    -1)    {    start    =    index    +    1;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
99	[BUG]  [BUGGY]  if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  ==  -1)  {  start  =  index  +  1;  }  else  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    start    =    index    +    1;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  &&  isHex)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  &&  isHex)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	&&  isHex)  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
101	[BUG]  [BUGGY]  ||  isHex  &&  firstChar!=  '.')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  isHex  &&  firstChar!=  '.')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  isHex  &&  firstChar!=  '.')  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
102	[BUG]  [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  start,  seqEnd));  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  start,  seqEnd));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.report(JSError.make(Integer.MIN_VALUE,  start,  seqEnd));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
103	[BUG]  [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  seqEnd));  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  seqEnd));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.report(JSError.make(Integer.MIN_VALUE,  seqEnd));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
104	[BUG]  [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  firstChar));  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.report(JSError.make(Integer.MIN_VALUE,  firstChar));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.report(JSError.make(Integer.MIN_VALUE,  firstChar));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
105	[BUG]  [BUGGY]  out.write('X'  ||  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('X'  ||  firstChar);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('X'  ||  firstChar);	  out.write('X');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
106	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(0);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(0);	  char    firstChar    =    input.length();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
107	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  out);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start,  out);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start,  out);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start  +  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start  +  1);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  out.write('n',  start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('n',  start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('n',  start);	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
110	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  input);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  input);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  input);	  nfe.printStackTrace(input);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
111	[BUG]  [BUGGY]  int  end  =  input.length()  /  seqEnd;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  input.length()  /  seqEnd;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  input.length()  /  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
112	[BUG]  [BUGGY]  nfe  =  input.getNumberOfCharsException(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfCharsException(start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfCharsException(start);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
113	[BUG]  [BUGGY]  Integer  firstChar  =  input.length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Integer  firstChar  =  input.length();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Integer  firstChar  =  input.length();	  int    firstChar    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
114	[BUG]  [BUGGY]  char  end  =  input.length()  *  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  end  =  input.length()  *  seqEnd;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  end  =  input.length()  *  seqEnd;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(start  +  1)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	49	None	replace
116	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  <  seqEnd)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  <  seqEnd)  {  start++;  }	  if(start    ==    seqEnd)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
117	[BUG]  [BUGGY]  if(isHex  &&  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex  &&  firstChar  ==  ';')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex  &&  firstChar  ==  ';')  {  start++;  }	  if(!isHex    ||    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
118	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  start  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  start  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  start  +  1);	  nfe.printIndexOutOfBounds(start,    start);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
119	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  firstChar  =  input.charAt(seqEnd);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  firstChar  =  input.charAt(seqEnd);	  int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
120	[BUG]  [BUGGY]  if(isHex)  {  start  =  index  +  1;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  start  =  index  +  1;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  start  =  index  +  1;  }	  if(isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
121	[BUG]  [BUGGY]  if(isHex)  {  start  =  0;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  start  =  0;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  start  =  0;  }	  if(isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
122	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  out);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(index,  out);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(index,  out);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
123	[BUG]  [BUGGY]  if(!isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(!isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(!isHex)  {  start++;  }  else  {  out.write(chrs[index++]);  }	  if(isHex)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
124	[BUG]  [BUGGY]  if(isHex)  {  start++;  }  else  {  out.write(chrs[index++],  isHex);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  start++;  }  else  {  out.write(chrs[index++],  isHex);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  start++;  }  else  {  out.write(chrs[index++],  isHex);  }	  if(isHex)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
125	[BUG]  [BUGGY]  int  start  =  index  +  1  -  seqEnd  +  2;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  seqEnd  +  2;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  seqEnd  +  2;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
126	[BUG]  [BUGGY]  out.write('x'  &  'X');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('x'  &  'X');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('x'  &  'X');	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
127	[BUG]  [BUGGY]  out.write(chrs[start++]);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[start++]);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[start++]);	  out.write(chrs[index++]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
128	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
129	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	boolean  isHex  =  input.charAt(start  +  1)  ==  ';';	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
130	[BUG]  [BUGGY]  if(index  >=  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  >=  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  >=  -1)  {  start++;  }  else  {  out.write(chrs[index++]);  }	  if(index    ==    -1)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
131	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(index  <  seqEnd)  {  start++;  }  else  {  out.write(chrs[index++]);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(index  <  seqEnd)  {  start++;  }  else  {  out.write(chrs[index++]);  }	  if(index    ==    -1)    {    start++;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
132	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  isHex);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(index,  isHex);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(index,  isHex);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  if(isHex)  {  end++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(isHex)  {  end++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(isHex)  {  end++;  }	  if(isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
134	[BUG]  [BUGGY]  out.append('#');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.append('#');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.append('#');	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	57	None	replace
135	[BUG]  [BUGGY]  out.append('x');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.append('x');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.append('x');	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
136	[BUG]  [BUGGY]  nfe.println(input.charAt(start));  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.println(input.charAt(start));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.println(input.charAt(start));	  nfe.printStackTrace(input);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
137	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	char  firstChar  =  input.charAt(end  +  1);	  char    firstChar    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
138	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(start,  index  +  1,  out);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(start,  index  +  1,  out);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(start,  index  +  1,  out);	  nfe.printIndexOutOfBounds(start,    index);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
139	[BUG]  [BUGGY]  nfe  =  input.getNumberOfChar();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberOfChar();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberOfChar();	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
140	[BUG]  [BUGGY]  nfe  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.charAt(0);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.charAt(0);	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
141	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  isHex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberFormatException(start,  isHex);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberFormatException(start,  isHex);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
142	[BUG]  [BUGGY]  Char  end  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Char  end  =  input.charAt(start);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Char  end  =  input.charAt(start);	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  isHex  &&  firstChar  ==  ';')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  isHex  &&  firstChar  ==  ';')  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
144	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  ||  isHex  &&  firstChar  ==  'X')  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	||  isHex  &&  firstChar  ==  'X')  {  start++;  }	  ||    isHex)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
145	[BUG]  [BUGGY]  out.append('0');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.append('0');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.append('0');	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
146	[BUG]  [BUGGY]  if(start  ==  -1)  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  ==  -1)  {  start++;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  ==  -1)  {  start++;  }	  if(index    ==    seqEnd    -    1)    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
147	[BUG]  [BUGGY]  out.write('n',  seqEnd);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write('n',  seqEnd);  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write('n',  seqEnd);	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
148	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  end  =  input.length()  -  seqEnd  +  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
149	[BUG]  [BUGGY]  int  start  =  index  +  1  -  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  seqEnd  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  seqEnd  -  1;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
150	[BUG]  [BUGGY]  int  start  =  index  +  1  -  seqStart;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  1  -  seqStart;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  1  -  seqStart;	  int    start    =    index    +    1    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
151	[BUG]  [BUGGY]  start  =  index  +  1,  isHex  =  true;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  start  =  index  +  1,  isHex  =  true;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	start  =  index  +  1,  isHex  =  true;	  start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
152	[BUG]  [BUGGY]  start  =  index  +  1,  isHex  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  start  =  index  +  1,  isHex  =  input.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	start  =  index  +  1,  isHex  =  input.charAt(start);	  start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
153	[BUG]  [BUGGY]  Context.report(JSError.make(INITIALIZER_ERROR,  firstChar));  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.report(JSError.make(INITIALIZER_ERROR,  firstChar));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.report(JSError.make(INITIALIZER_ERROR,  firstChar));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
154	[BUG]  [BUGGY]  Context.report(JSError.make(INPUT_DELAYED_ERROR,  firstChar));  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  Context.report(JSError.make(INPUT_DELAYED_ERROR,  firstChar));  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	Context.report(JSError.make(INPUT_DELAYED_ERROR,  firstChar));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
155	[BUG]  [BUGGY]  out.write(chrs[index++],  isHex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.write(chrs[index++],  isHex);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.write(chrs[index++],  isHex);	  out.write(chrs[index++]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  nfe.printIndexOutOfBounds(index,  isHex);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe.printIndexOutOfBounds(index,  isHex);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe.printIndexOutOfBounds(index,  isHex);	  nfe.printIndexOutOfBounds(start);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
157	[BUG]  [BUGGY]  nfe  =  input.getNumberValue();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  nfe  =  input.getNumberValue();  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	nfe  =  input.getNumberValue();	  nfe    =    input.getNumberInput();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
158	[BUG]  [BUGGY]  if(start  ==  -1)  {  start  =  index  +  1;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  if(start  ==  -1)  {  start  =  index  +  1;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	if(start  ==  -1)  {  start  =  index  +  1;  }	  if(start    ==    -1)    {    start    =    index;    }    else    {    out.write(chrs[index++]);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
159	[BUG]  [BUGGY]  int  start  =  index  +  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  int  start  =  index  +  seqEnd  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	int  start  =  index  +  seqEnd  -  1;	  int    start    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
160	[BUG]  [BUGGY]  out.append('X');  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {      [BUGGY]  out.append('X');  [BUGGY]      start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	out.append('X');	  out.write('X');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
