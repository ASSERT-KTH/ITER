bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return 0; [FE] StringIndexOutOfBoundsException [CONTEXT] char[] chrs = Character.toChars(entityValue); out.write(chrs[0]); out.write(chrs[1]); } else { out.write(entityValue); }  return 2 + (end - start) + (isHex ? 1 : 0) + 1; } [BUGGY] return 0; [BUGGY] } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	82	82	2	replace	
2	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] char[] chrs = Character.toChars(entityValue); out.write(chrs[0]); out.write(chrs[1]); } else { out.write(entityValue); }  return 2 + (end - start) + (isHex ? 1 : 0) + 1; } [BUGGY] [BUGGY] return 0; } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	82	82	2	add	
4	[BUG] [BUGGY] int seqEnd = input.length(); [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { [BUGGY] int seqEnd = input.length(); [BUGGY]  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	
5	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { [BUGGY] [BUGGY] int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	
6	[BUG] [BUGGY] if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  [BUGGY] if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { [BUGGY] int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	replace	
7	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  [BUGGY] [BUGGY] if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	40	40	2	add	
8	[BUG] [BUGGY] int start = index + 2; [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { [BUGGY] int start = index + 2; [BUGGY] boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  }  [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	replace	
9	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { [BUGGY] [BUGGY] int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  }  [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	41	41	2	add	
10	[BUG] [BUGGY] boolean isHex = false; [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; [BUGGY] boolean isHex = false; [BUGGY]  char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start; [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	
11	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; [BUGGY] [BUGGY] boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start; [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	add	
12	[BUG] [BUGGY] char firstChar = input.charAt(start); [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; [BUGGY] char firstChar = input.charAt(start); [BUGGY] if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	replace	
13	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; [BUGGY] [BUGGY] char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	44	44	2	add	
14	[BUG] [BUGGY] start++; [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { [BUGGY] start++; [BUGGY] isHex = true;  } int end = start;  while(input.charAt(end) != ';') { end++; [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	replace	
15	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { [BUGGY] [BUGGY] start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') { end++; [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	46	46	2	add	
16	[BUG] [BUGGY] isHex = true; [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; [BUGGY] isHex = true; [BUGGY]   } int end = start;  while(input.charAt(end) != ';') { end++; } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	
17	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; [BUGGY] [BUGGY] isHex = true;  } int end = start;  while(input.charAt(end) != ';') { end++; } [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	add	
18	[BUG] [BUGGY] if(firstChar == 'x' || firstChar == 'X') { [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); [BUGGY] if(firstChar == 'x' || firstChar == 'X') { [BUGGY] start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') { [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	45	45	2	replace	
19	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public int translate(CharSequence input, int index, Writer out) throws IOException { int seqEnd = input.length();  if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') { int start = index + 2; boolean isHex = false; char firstChar = input.charAt(start); [BUGGY] [BUGGY] if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') { [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	45	45	2	add	
20	[BUG] [BUGGY] int end = start; [FE] StringIndexOutOfBoundsException [CONTEXT] boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } [BUGGY] int end = start; [BUGGY]  while(input.charAt(end) != ';') { end++; } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	replace	
21	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] boolean isHex = false; char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } [BUGGY] [BUGGY] int end = start;  while(input.charAt(end) != ';') { end++; } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	52	52	2	add	
22	[BUG] [BUGGY] while(input.charAt(end) != ';') { [FE] StringIndexOutOfBoundsException [CONTEXT] char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start;  [BUGGY] while(input.charAt(end) != ';')   { [BUGGY] { end++; } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); } else { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10); [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	
23	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] char firstChar = input.charAt(start); if(firstChar == 'x' || firstChar == 'X') { start++; isHex = true;  } int end = start;  [BUGGY] [BUGGY] while(input.charAt(end) != ';')   { { end++; } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); } else { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10); [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	add	
24	[BUG] [BUGGY] end++; [FE] StringIndexOutOfBoundsException [CONTEXT] start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') { [BUGGY] end++; [BUGGY] } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); } else { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10); } } catch(NumberFormatException nfe) { [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	56	56	2	replace	
25	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] start++; isHex = true;  } int end = start;  while(input.charAt(end) != ';') { [BUGGY] [BUGGY] end++; } int entityValue; try { if(isHex) { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16); } else { entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10); } } catch(NumberFormatException nfe) { [CLASS] NumericEntityUnescaper [METHOD] translate [RETURN_TYPE] int  CharSequence input int index Writer out [VARIABLES] boolean isHex CharSequence input char firstChar NumberFormatException nfe int end entityValue index seqEnd start Writer out char[] chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	56	56	2	add	
