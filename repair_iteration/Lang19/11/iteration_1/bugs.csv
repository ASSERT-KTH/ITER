bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(input.charAt(start)!=  ';')  {  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]  while(input.charAt(start)!=  ';')  {  [BUGGY]  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	while(input.charAt(start)!=  ';')  {	while(input.charAt(end)  !=  ';')  {  	non-compiled	[CE]  <identifier>  expected	22	None	replace
2	[BUG]  [BUGGY]  while(input.charAt(end)  ==  ';')  {  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]  while(input.charAt(end)  ==  ';')  {  [BUGGY]  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	while(input.charAt(end)  ==  ';')  {	while(input.charAt(end)  !=  ';')  {  	non-compiled	[CE]  <identifier>  expected	22	None	replace
3	[BUG]  [BUGGY]  while(input.charAt(end  -  1)!=  ';')  {  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]  while(input.charAt(end  -  1)!=  ';')  {  [BUGGY]  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	while(input.charAt(end  -  1)!=  ';')  {	while(input.charAt(end)  !=  ';')  {  	non-compiled	[CE]  <identifier>  expected	22	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    [BUGGY]  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	  	while(input.charAt(end)  !=  ';')  {  	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]    int  end  =  input.length();  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    int  end  =  input.length();  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    int  end  =  input.length();		non-compiled	[CE]  <identifier>  expected	23	None	add
6	[BUG]  [BUGGY]    int  end  =  input.indexOf(';');  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    int  end  =  input.indexOf(';');  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    int  end  =  input.indexOf(';');		non-compiled	[CE]  <identifier>  expected	23	None	add
7	[BUG]  [BUGGY]    char  firstChar  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    char  firstChar  =  input.charAt(start);  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    char  firstChar  =  input.charAt(start);		non-compiled	[CE]  <identifier>  expected	23	None	add
8	[BUG]  [BUGGY]    Integer  input  =  input.getIntValue();  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    Integer  input  =  input.getIntValue();  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    Integer  input  =  input.getIntValue();		non-compiled	[CE]  <identifier>  expected	23	None	add
9	[BUG]  [BUGGY]    Integer  input  =  input.getValue();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    Integer  input  =  input.getValue();  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    Integer  input  =  input.getValue();		non-compiled	[CE]  <identifier>  expected	23	None	add
10	[BUG]  [BUGGY]    int  seqEnd  =  input.length();  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    int  seqEnd  =  input.length();  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    int  seqEnd  =  input.length();		non-compiled	[CE]  <identifier>  expected	23	None	add
11	[BUG]  [BUGGY]    char  end  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    char  end  =  input.charAt(start);  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    char  end  =  input.charAt(start);		non-compiled	[CE]  <identifier>  expected	23	None	add
12	[BUG]  [BUGGY]  while(input.charAt(end)!=  ';'  &&  isHex)  {  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]  while(input.charAt(end)!=  ';'  &&  isHex)  {  [BUGGY]  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	while(input.charAt(end)!=  ';'  &&  isHex)  {	while(input.charAt(end)  !=  ';')  {  	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]    int  end  =  input.indexOf('  ');  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;    [BUGGY]    int  end  =  input.indexOf('  ');  [BUGGY]  while(input.charAt(end)  !=  ';')    {  {  end++;  }  int  entityValue;  try  {  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.5	54	55	2	replace	    int  end  =  input.indexOf('  ');		non-compiled	[CE]  <identifier>  expected	23	None	add
