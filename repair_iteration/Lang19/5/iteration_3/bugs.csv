bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write(start  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(start  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(start  +  1);	  out.write(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  out.write(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd  -  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd  -  1);	  out.write(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  out.write(seqEnd  +  1,  start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd  +  1,  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd  +  1,  start);	  out.write(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(start  ==  '-'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '-'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '-'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
5	[BUG]  [BUGGY]  if(start  ==  '-'  &&  start  <  =  '+')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '-'  &&  start  <  =  '+')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '-'  &&  start  <  =  '+')  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
6	[BUG]  [BUGGY]  if(start  ==  '-'  &&  input.charAt(start)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '-'  &&  input.charAt(start)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '-'  &&  input.charAt(start)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
7	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  seqEnd  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  seqEnd  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  seqEnd  +  1);	  char    firstChar    =    input.charAt(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(end  +  1);	  char    firstChar    =    input.charAt(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
10	[BUG]  [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
11	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(index)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(index)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(index)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
12	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  seqEnd)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  seqEnd)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
14	[BUG]  [BUGGY]  if(start  ==  '0'  &&  input.charAt(start)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  input.charAt(start)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  input.charAt(start)  ==  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
15	[BUG]  [BUGGY]  if(start  ==  '0'  &&  end  <  =  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  end  <  =  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  end  <  =  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
16	[BUG]  [BUGGY]  out.write('#',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('#',  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('#',  start);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  out.write('#'  +  input.charAt(start));  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('#'  +  input.charAt(start));  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('#'  +  input.charAt(start));	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  out.write('#'  +  seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('#'  +  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('#'  +  seqEnd);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
19	[BUG]  [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  seqEnd  -  chrs.length;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  seqEnd  -  chrs.length;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
20	[BUG]  [BUGGY]  int  end  =  chrs.length  -  start;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  chrs.length  -  start;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  chrs.length  -  start;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
21	[BUG]  [BUGGY]  int  end  =  start  -  seqEnd;  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  start  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  start  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
22	[BUG]  [BUGGY]  int  end  =  index  -  seqEnd;  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  index  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  index  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
23	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
24	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
25	[BUG]  [BUGGY]  if(start  ==  '0'  &&  end  <  =  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  end  <  =  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  end  <  =  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
26	[BUG]  [BUGGY]  out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  '9')  {  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  '9')  {  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(input.charAt(start)+  '0'  +  input.charAt(end)+  '9')  {	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
27	[BUG]  [BUGGY]  if(start  ==  '0'  &&  start  <  =  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  start  <  =  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  start  <  =  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
28	[BUG]  [BUGGY]  out.write(index,  seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(index,  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(index,  seqEnd);	  out.write(end,    seqEnd);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
29	[BUG]  [BUGGY]  out.write(chrs,  start,  seqEnd);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs,  start,  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs,  start,  seqEnd);	  out.write(end,    seqEnd);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
30	[BUG]  [BUGGY]  out.write(chrs[start]);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs[start]);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs[start]);	  out.write(chrs[index]);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  out.write(chrs[index  -  1]);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs[index  -  1]);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs[index  -  1]);	  out.write(chrs[index]);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  out.write(chrs[index  +  1]);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs[index  +  1]);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs[index  +  1]);	  out.write(chrs[index]);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  int  end  =  input.length()  *  seqEnd;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  *  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  *  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  if(start  <  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
36	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
37	[BUG]  [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
38	[BUG]  [BUGGY]  out.write(seqEnd  -  start  +  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd  -  start  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd  -  start  +  1);	  out.write(seqEnd    -    start);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  out.write(start  -  seqEnd);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(start  -  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(start  -  seqEnd);	  out.write(seqEnd    -    start);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  out.write(seqEnd  -  start,  start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd  -  start,  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd  -  start,  start);	  out.write(seqEnd    -    start);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  'n'  ||  start  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index  +  1]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index  +  1]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index  +  1]);  }	  if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  Boolean  isHex  =  true;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  Boolean  isHex  =  true;  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	Boolean  isHex  =  true;	  Boolean    isHex    =    false;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
46	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(index)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(index)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(index)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
47	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  end  =  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  end  =  input.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
50	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
51	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  seqEnd)  {  if(start  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  0  ||  index  >=  seqEnd)  {  if(start  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  0  ||  index  >=  seqEnd)  {  if(start  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
52	[BUG]  [BUGGY]  out.write('0',  start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('0',  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('0',  start);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
53	[BUG]  [BUGGY]  out.write('0'  +  seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('0'  +  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('0'  +  seqEnd);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
54	[BUG]  [BUGGY]  int  end  =  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  seqEnd  -  1;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
55	[BUG]  [BUGGY]  int  end  =  chrs.length  -  2;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  chrs.length  -  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  chrs.length  -  2;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
56	[BUG]  [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  chrs.length  -  1  +  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  chrs.length  -  1  +  seqEnd;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
57	[BUG]  [BUGGY]  if(input  ==  null)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input  ==  null)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input  ==  null)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
58	[BUG]  [BUGGY]  if(input!=  null)  {  int  end  =  index  +  1;  if(end  <  len)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  end  =  index  +  1;  if(end  <  len)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  end  =  index  +  1;  if(end  <  len)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
59	[BUG]  [BUGGY]  if(input!=  null)  {  int  end  =  index  +  1;  if(end  >=  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  end  =  index  +  1;  if(end  >=  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  end  =  index  +  1;  if(end  >=  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
60	[BUG]  [BUGGY]  int  end  =  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  seqEnd  +  1;	  int    end    =    start    +    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
61	[BUG]  [BUGGY]  int  end  =  start  +  2;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  start  +  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  start  +  2;	  int    end    =    start    +    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
62	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  end);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  end);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  end);	  char    firstChar    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  out.write(start,  end);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(start,  end);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(start,  end);	  out.write(seqEnd,    end);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
64	[BUG]  [BUGGY]  out.write(chrs,  start,  end);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs,  start,  end);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs,  start,  end);	  out.write(seqEnd,    end);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  out.write(seqEnd,  index);  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  index);	  out.write(seqEnd,    end);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  out.write(start,  seqEnd  -  1);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(start,  seqEnd  -  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(start,  seqEnd  -  1);	  out.write(seqEnd,    start    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
67	[BUG]  [BUGGY]  out.write(seqEnd,  end  -  1);  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  end  -  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  end  -  1);	  out.write(seqEnd,    start    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
68	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  -  start  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  -  start  +  1;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
69	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  -  start  +  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  -  start  +  seqEnd;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
70	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    ||    input.charAt(index    +    1)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
71	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)!=  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)!=  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)!=  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    ||    input.charAt(index    +    1)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
72	[BUG]  [BUGGY]  if(input  ==  null)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input  ==  null)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input  ==  null)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
73	[BUG]  [BUGGY]  if(input!=  null)  {  int  end  =  input.length();  if(end  <  seqEnd  -  1)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  end  =  input.length();  if(end  <  seqEnd  -  1)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  end  =  input.length();  if(end  <  seqEnd  -  1)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
74	[BUG]  [BUGGY]  if(input!=  null)  {  int  end  =  input.length();  if(end  <  len)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  end  =  input.length();  if(end  <  len)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  end  =  input.length();  if(end  <  len)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
75	[BUG]  [BUGGY]  if(start  ==  '+'  &&  end  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  &&  end  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  &&  end  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    ||    end    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
76	[BUG]  [BUGGY]  if(start  ==  '+'  ||  start  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  ||  start  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  ||  start  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    ||    end    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
77	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
78	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
79	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start  +  2);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  out.write(start,  seqEnd  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(start,  seqEnd  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(start,  seqEnd  +  1);	  out.write(seqEnd,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
81	[BUG]  [BUGGY]  out.write(seqEnd,  start  +  2);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  start  +  2);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  start  +  2);	  out.write(seqEnd,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  out.write(seqEnd,  end  +  1);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  end  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  end  +  1);	  out.write(seqEnd,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
83	[BUG]  [BUGGY]  if(start  ==  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(start)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
84	[BUG]  [BUGGY]  if(start  ==  '+'  &&  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  &&  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  &&  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(start)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
85	[BUG]  [BUGGY]  out.write('n',  start  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('n',  start  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('n',  start  +  1);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
86	[BUG]  [BUGGY]  out.write('n',  end);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('n',  end);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('n',  end);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
87	[BUG]  [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('n',  start  +  1,  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
88	[BUG]  [BUGGY]  out.write('n',  start  +  seqEnd);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('n',  start  +  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('n',  start  +  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
89	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  boolean  isHex  =  input.charAt(start);  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	boolean  isHex  =  input.charAt(start);	  boolean    isHex    =    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  boolean  isHex  =  input!=  null;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  boolean  isHex  =  input!=  null;  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	boolean  isHex  =  input!=  null;	  boolean    isHex    =    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
91	[BUG]  [BUGGY]  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
92	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(start  ==  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
93	[BUG]  [BUGGY]  if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
94	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
95	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
96	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
97	[BUG]  [BUGGY]  if(start  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
98	[BUG]  [BUGGY]  out.write(input.charAt(start));  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(input.charAt(start));  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(input.charAt(start));	  if(start    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
99	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
100	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
101	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
102	[BUG]  [BUGGY]  int  end  =  index  +  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  index  +  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  index  +  seqEnd;	  int    end    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
103	[BUG]  [BUGGY]  int  end  =  seqEnd  +  2;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  seqEnd  +  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  seqEnd  +  2;	  int    end    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
104	[BUG]  [BUGGY]  if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    end    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
105	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  >  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  >  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    end    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
106	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  <  =  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  <  =  0)  {  if(start  ==  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    end    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
107	[BUG]  [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(seqEnd  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
108	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
109	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
110	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
111	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
112	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  index  +  2);	  char    firstChar    =    input.charAt(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  end  +  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  end  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  end  +  1);	  char    firstChar    =    input.charAt(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
114	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  3);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  3);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  index  +  3);	  char    firstChar    =    input.charAt(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
115	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  seqEnd);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  seqEnd);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
116	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  String  firstChar  =  input.charAt(seqEnd);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	String  firstChar  =  input.charAt(seqEnd);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
117	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
118	[BUG]  [BUGGY]  out.write('#'  +  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('#'  +  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('#'  +  start);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
119	[BUG]  [BUGGY]  int  end  =  input.length  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length  -  1;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
120	[BUG]  [BUGGY]  int  end  =  out.length  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  out.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  out.length  -  1;	  int    end    =    chrs.length    -    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
121	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
122	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
123	[BUG]  [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
124	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
125	[BUG]  [BUGGY]  out.write(seqEnd,  start  -  1  +  1);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  start  -  1  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  start  -  1  +  1);	  out.write(seqEnd,    start    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
126	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
127	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
128	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
129	[BUG]  [BUGGY]  out.write('n',  start  -  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('n',  start  -  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('n',  start  -  1);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
130	[BUG]  [BUGGY]  int  end  =  index  +  4;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  index  +  4;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  index  +  4;	  int    end    =    index    +    3;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
131	[BUG]  [BUGGY]  out.write('0'  +  start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write('0'  +  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write('0'  +  start);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
132	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  start  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(start,  start  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(start,  start  +  1);	  char    firstChar    =    input.charAt(start,    index    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
133	[BUG]  [BUGGY]  out.write(seqEnd  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd  +  2);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd  +  2);	  out.write(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
134	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
135	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  0  ||  input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
136	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
137	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
138	[BUG]  [BUGGY]  if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
139	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
140	[BUG]  [BUGGY]  if(start  >=  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '+'  ||  input.charAt(start)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(start)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
141	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
142	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
143	[BUG]  [BUGGY]  if(start!=  -1)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
144	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
145	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(1);	  char    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
147	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
148	[BUG]  [BUGGY]  if(start  ==  '0'  &&  input.charAt(start)  <  =  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  input.charAt(start)  <  =  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  input.charAt(start)  <  =  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
149	[BUG]  [BUGGY]  if(start  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
150	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
151	[BUG]  [BUGGY]  if(start  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
152	[BUG]  [BUGGY]  if(start  >=  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
153	[BUG]  [BUGGY]  out.write(seqEnd,  start  +  1  -  start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(seqEnd,  start  +  1  -  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(seqEnd,  start  +  1  -  start);	  out.write(seqEnd,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
154	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  end)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
155	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  end)  {  if(end  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
156	[BUG]  [BUGGY]  int  end  =  input.length()  /  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  /  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  /  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
157	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
158	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start)  ==  '+'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
159	[BUG]  [BUGGY]  boolean  isHex  =  out!=  null;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  boolean  isHex  =  out!=  null;  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	boolean  isHex  =  out!=  null;	  boolean    isHex    =    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
160	[BUG]  [BUGGY]  if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '0'  &&  start  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
161	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
162	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
163	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
164	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  if(input!=  null)  {  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
165	[BUG]  [BUGGY]  out.write(chrs,  start);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.write(chrs,  start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.write(chrs,  start);	  out.write(end,    seqEnd);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
166	[BUG]  [BUGGY]  if(start  >=  '+'  ||  end  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '+'  ||  end  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '+'  ||  end  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    ||    end    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
167	[BUG]  [BUGGY]  if(start  ==  '+'  ||  end  ==  '-')  {  out.write(chrs[index  +  1]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  ||  end  ==  '-')  {  out.write(chrs[index  +  1]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  ||  end  ==  '-')  {  out.write(chrs[index  +  1]);  }	  if(start    ==    '+'    ||    end    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
168	[BUG]  [BUGGY]  int  end  =  out.length  -  seqEnd;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  out.length  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  out.length  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
169	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
170	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  seqEnd)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
171	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
172	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(index  <  seqEnd)  {  out.write(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
173	[BUG]  [BUGGY]  int  end  =  index.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  index.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  index.length();	  int    end    =    start.length();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
174	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(index  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
176	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
177	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
178	[BUG]  [BUGGY]  int  end  =  output.length()  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  output.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  output.length()  -  1;	  int    end    =    output.length();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
179	[BUG]  [BUGGY]  int  end  =  output.length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  output.length()  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  output.length()  +  1;	  int    end    =    output.length();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
180	[BUG]  [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
181	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  if(index  <  0  ||  index  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
183	[BUG]  [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqStart;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  -  seqStart;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  -  seqStart;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
185	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '-'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
186	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
187	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '&'  &&  input  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '&'  &&  input  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '&'  &&  input  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
188	[BUG]  [BUGGY]  int  end  =  input.length  -  seqEnd;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length  -  seqEnd;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length  -  seqEnd;	  int    end    =    chrs.length    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
189	[BUG]  [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
190	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  '+'  ||  input.charAt(end  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
191	[BUG]  [BUGGY]  out.append('0');  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.append('0');  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.append('0');	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
192	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
193	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
194	[BUG]  [BUGGY]  if(input!=  null)  {  int  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  start  =  index  +  1;  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    index    +    1;    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
195	[BUG]  [BUGGY]  out.append('#');  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  out.append('#');  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	out.append('#');	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
196	[BUG]  [BUGGY]  if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
197	[BUG]  [BUGGY]  if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
198	[BUG]  [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  index  +  1,  seqEnd  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  index  +  1,  seqEnd  -  1;	  int    end    =    index    +    2;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  0)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'n')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'n')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
200	[BUG]  [BUGGY]  int  end  =  chrs.length;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  chrs.length;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  chrs.length;	  int    end    =    start.length();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
201	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
202	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  'r')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
203	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '-'  &&  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '-'  &&  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '-'  &&  input.charAt(end)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
204	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '-'  ||  input.charAt(index)  ==  '+')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '-'  ||  input.charAt(index)  ==  '+')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '-'  ||  input.charAt(index)  ==  '+')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '-'    ||    input.charAt(end)    ==    '+')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
205	[BUG]  [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0  ||  start  >  end)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
206	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  -1)  {  if(input.charAt(start  +  1)  ==  'n'  ||  input.charAt(end  +  1)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    -1)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
207	[BUG]  [BUGGY]  if(start  ==  '0'  &&  end  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '0'  &&  end  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '0'  &&  end  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
208	[BUG]  [BUGGY]  if(start  <  =  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0  ||  start  >=  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
209	[BUG]  [BUGGY]  if(start  <  0  ||  end  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  0  ||  end  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  0  ||  end  >  seqEnd)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(index    <    0    ||    index    >=    seqEnd)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
210	[BUG]  [BUGGY]  if(start  <  seqEnd)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  seqEnd)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  seqEnd)  {  if(start  ==  'n'  ||  end  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(start    ==    'n'    ||    end    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
211	[BUG]  [BUGGY]  if(start!=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start!=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start!=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
212	[BUG]  [BUGGY]  if(start  >=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  -1)  {  int  end  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
213	[BUG]  [BUGGY]  if(input!=  null)  {  int  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input!=  null)  {  int  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }  [BUGGY]        char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input!=  null)  {  int  start  =  input.length();  if(end  <  seqEnd)  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    int    end    =    input.length();    if(end    <    seqEnd)    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
214	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '+'  &&  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '+'  &&  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '+'  &&  input.charAt(index  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '+'    ||    input.charAt(index    +    1)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
215	[BUG]  [BUGGY]  if(start  ==  '+'  ||  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  ==  '+'  ||  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  ==  '+'  ||  input.charAt(start  +  1)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    ==    '+'    &&    input.charAt(start)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
216	[BUG]  [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  0)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  0)  {  if(input.charAt(start)  ==  '+'  ||  input.charAt(end)  ==  '-')  {  out.write(chrs[index]);  }	  if(start    >=    -1)    {    if(input.charAt(start)    ==    '+'    ||    input.charAt(end)    ==    '-')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
217	[BUG]  [BUGGY]  if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  >=  '0'  &&  end  <  =  '9')  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
218	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(start    ==    '0'    &&    start    <    =    '9')    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
219	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '0'  &&  input.charAt(end)  <  =  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
220	[BUG]  [BUGGY]  if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(input.charAt(start)  ==  '0'  ||  input.charAt(end)  ==  '9')  {  out.write(chrs[index]);  }	  if(input.charAt(start)    ==    '0'    &&    input.charAt(end)    ==    '9')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
221	[BUG]  [BUGGY]  if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  len)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
222	[BUG]  [BUGGY]  if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	if(start  <  =  0x7FF)  {  if(input.charAt(start)  ==  'n'  ||  input.charAt(end)  ==  'r')  {  out.write(chrs[index]);  }	  if(index    <    seqEnd)    {    if(input.charAt(start)    ==    'n'    ||    input.charAt(end)    ==    'r')    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
223	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;      [BUGGY]  int  end  =  input.length()  -  seqEnd  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	42	42	2	replace	int  end  =  input.length()  -  seqEnd  +  1;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
