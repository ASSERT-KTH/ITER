bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(index    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
2	[BUG]  [BUGGY]  out.write('n',  start  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('n',  start  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  start  +  1);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
3	[BUG]  [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('n',  start  +  1,  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  start  +  1,  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  out.write('n',  seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('n',  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  seqEnd);	  out.write('n',    start);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
5	[BUG]  [BUGGY]  String  end  =  input.length();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  String  end  =  input.length();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	String  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  char  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  end  =  input.length()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  end  =  input.length()  +  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  char  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  end  =  input.length()  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  end  =  input.length()  -  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  firstChar);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  firstChar);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
9	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
10	[BUG]  [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
11	[BUG]  [BUGGY]  ||  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  firstChar  ==  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  firstChar  ==  ';')  {  start++;  }	  !isHex    ||    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
12	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
13	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
14	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
15	[BUG]  [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  false;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  false;  }	  if(start    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
16	[BUG]  [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }	  if(start    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
17	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
18	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
19	[BUG]  [BUGGY]  boolean  isHex  =  false;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  boolean  isHex  =  false;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	boolean  isHex  =  false;	  boolean    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
20	[BUG]  [BUGGY]  out.write('n',  firstChar  +  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('n',  firstChar  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  firstChar  +  1);	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
21	[BUG]  [BUGGY]  out.write(firstChar,  'n');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(firstChar,  'n');  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(firstChar,  'n');	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
22	[BUG]  [BUGGY]  (isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X'));  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  (isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X'));  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	(isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X'));	  (isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X'));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  (isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X');  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  (isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X');  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	(isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X');	  (isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X'));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
24	[BUG]  [BUGGY]  (isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X'));  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  (isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X'));  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	(isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X'));	  (isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X'));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
25	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
26	[BUG]  [BUGGY]  out.write(chrs[index]);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(chrs[index]);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(chrs[index]);	  if(isHex)    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
27	[BUG]  [BUGGY]  chrs[index]  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  chrs[index]  =  input.charAt(start);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	chrs[index]  =  input.charAt(start);	  if(isHex)    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
28	[BUG]  [BUGGY]  if(isHex)  {  out.write(chrs[start]);  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  out.write(chrs[start]);  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  out.write(chrs[start]);  }	  if(isHex)    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
29	[BUG]  [BUGGY]  if(!isHex)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  isHex  =  false;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  isHex  =  false;  }	  if(isHex)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
30	[BUG]  [BUGGY]  ||  isHex  =  false;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  =  false;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  =  false;	  if(isHex)    {    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
31	[BUG]  [BUGGY]  int  end  =  firstChar.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  firstChar.length();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  firstChar.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(start  -  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(start  -  1);	  int    firstChar    =    input.charAt(start    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
33	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  -  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  firstChar  =  input.charAt(index  -  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(index  -  1);	  int    firstChar    =    input.charAt(start    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
34	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(index  -  1);	  int    firstChar    =    input.charAt(start    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
35	[BUG]  [BUGGY]  out.write('x',  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('x',  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('x',  firstChar);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
36	[BUG]  [BUGGY]  out.write('x'  +  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('x'  +  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('x'  +  firstChar);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
37	[BUG]  [BUGGY]  out.write(firstChar);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(firstChar);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
38	[BUG]  [BUGGY]  !isHex  &&  input  ==  'x'  ||  input!=  'X')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input  ==  'x'  ||  input!=  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input  ==  'x'  ||  input!=  'X')  {  start++;	  !isHex    &&    input    ==    'x'    ||    input    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
39	[BUG]  [BUGGY]  !isHex  &&  input!=  'x'  ||  input  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input!=  'x'  ||  input  ==  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input!=  'x'  ||  input  ==  'X')  {  start++;	  !isHex    &&    input    ==    'x'    ||    input    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
40	[BUG]  [BUGGY]  !isHex  ||  firstChar  >=  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  >=  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  >=  ';';	  !isHex    &&    firstChar    >=    ';';    	non-compiled	[CE]  <identifier>  expected	66	None	replace
41	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
42	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ';')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
43	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
44	[BUG]  [BUGGY]  Integer  input  =  input.getEntryValue();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getEntryValue();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getEntryValue();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
45	[BUG]  [BUGGY]  Integer  input  =  input.getEntity();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getEntity();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getEntity();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount();  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getEntryCount();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getEntryCount();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
47	[BUG]  [BUGGY]  if(start!=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start!=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start!=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(start    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
48	[BUG]  [BUGGY]  if(start!=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start!=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start!=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(start    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
49	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat()  *  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat()  *  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat()  *  1;	  nfe    =    input.getNumberFormat()    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
50	[BUG]  [BUGGY]  if(index  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  if(index  >=  seqEnd)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  >=  seqEnd)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  >=  seqEnd)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
53	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false,  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false,  firstChar);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false,  firstChar);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
54	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  false);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  false);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  false);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
55	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().trim()  +  1;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().trim()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().trim()  +  1;	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().substring(1);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().substring(1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().substring(1);	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
57	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().substring(start,  index);  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().substring(start,  index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().substring(start,  index);	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
58	[BUG]  [BUGGY]  nfe  =  input.getNumber()  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumber()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumber()  +  1;	  nfe    =    input.getNumber();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
59	[BUG]  [BUGGY]  nfe  =  input.getNumber()  *  seqEnd;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumber()  *  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumber()  *  seqEnd;	  nfe    =    input.getNumber();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
60	[BUG]  [BUGGY]  nfe  =  input.getNumberOfBoundsException(index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfBoundsException(index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfBoundsException(index);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
61	[BUG]  [BUGGY]  nfe  =  input.getNumberOfBoundsException(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfBoundsException(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfBoundsException(start);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
62	[BUG]  [BUGGY]  nfe  =  input.getNumberOfChars();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfChars();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfChars();	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
63	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAssignedValue()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAssignedValue()  +  1;	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
64	[BUG]  [BUGGY]  !isHex  &&  input.charAt(start)!=  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.charAt(start)!=  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(start)!=  ';';	  !isHex    &&    input.charAt(firstChar)!=    ';';    	non-compiled	[CE]  <identifier>  expected	93	None	replace
65	[BUG]  [BUGGY]  !isHex  &&  input.charAt(firstChar)  ==  ';';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.charAt(firstChar)  ==  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(firstChar)  ==  ';';	  !isHex    &&    input.charAt(firstChar)!=    ';';    	non-compiled	[CE]  <identifier>  expected	93	None	replace
66	[BUG]  [BUGGY]  !isHex  &&  input.charAt(start)  ==  ';';  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.charAt(start)  ==  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(start)  ==  ';';	  !isHex    &&    input.charAt(firstChar)!=    ';';    	non-compiled	[CE]  <identifier>  expected	93	None	replace
67	[BUG]  [BUGGY]  if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  <  =  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ',')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  ',')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ',')  {  start++;	  !isHex    &&    firstChar    ==    ',')    {    start++;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
70	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ',')  {  start++;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  ',')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ',')  {  start++;	  !isHex    &&    firstChar    ==    ',')    {    start++;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
71	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;	  !isHex    &&    firstChar    ==    ',')    {    start++;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
72	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(seqEnd);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(seqEnd);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
73	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(start,  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(start,  seqEnd);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
74	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start  +  1);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(start  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(start  +  1);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
75	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(start  +  2);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
77	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
78	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
79	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ':')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
81	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ':')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  ':')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ':')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
82	[BUG]  [BUGGY]  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ':')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
83	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  '#';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  '#';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  '#';	  isHex    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	28	None	replace
84	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'A';  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'A';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'A';	  isHex    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	28	None	replace
85	[BUG]  [BUGGY]  !isHex  &&  start  >=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  start  >=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  start  >=  ';')  {  start++;  }	  !isHex    &&    start    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
86	[BUG]  [BUGGY]  !isHex  &&  start!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  start!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  start!=  ';')  {  start++;  }	  !isHex    &&    start    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
87	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ',';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  ',';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ',';	  !isHex    &&    firstChar    ==    ',';    	non-compiled	[CE]  <identifier>  expected	90	None	replace
88	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  +  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  +  seqEnd;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  +  seqEnd;	  !isHex    &&    firstChar    ==    ',';    	non-compiled	[CE]  <identifier>  expected	90	None	replace
89	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ',';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  ',';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ',';	  !isHex    &&    firstChar    ==    ',';    	non-compiled	[CE]  <identifier>  expected	90	None	replace
90	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
91	[BUG]  [BUGGY]  isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
92	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
93	[BUG]  [BUGGY]  nfe  =  input.getNumberChar()  +  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberChar()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberChar()  +  1;	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
94	[BUG]  [BUGGY]  nfe  =  firstChar.getNumberChar();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  firstChar.getNumberChar();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  firstChar.getNumberChar();	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
95	[BUG]  [BUGGY]  nfe  =  input.getNumberChar(0);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberChar(0);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberChar(0);	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
96	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
97	[BUG]  [BUGGY]  if(!isHex)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
98	[BUG]  [BUGGY]  if(index  ==  seqEnd)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  seqEnd)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  seqEnd)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
99	[BUG]  [BUGGY]  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
100	[BUG]  [BUGGY]  if(!isHex)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
101	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
102	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
105	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
106	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
107	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(first  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(first  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(first  +  1);	  char    firstChar    =    input.charAt(first);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(firstChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  firstChar  =  input.charAt(firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(firstChar);	  int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  nfe  =  input.getNumberInput()  *  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberInput()  *  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberInput()  *  1;	  nfe    =    input.getNumberInput()    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
110	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  output.length();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  output.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
111	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( " ",  seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException( " ",  seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException( " ",  seqEnd);	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
112	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( " ".length());  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException( " ".length());  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException( " ".length());	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
113	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;	  !isHex    &&    firstChar    ==    ';'    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    start++;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
114	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  }	  !isHex    &&    firstChar    ==    ';'    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    start++;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
115	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;	  !isHex    &&    firstChar    ==    ';'    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    start++;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
116	[BUG]  [BUGGY]  out.write(chrs,  start,  firstChar);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(chrs,  start,  firstChar);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(chrs,  start,  firstChar);	  if(isHex)    {    out.write(chrs,    start,    seqEnd);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
117	[BUG]  [BUGGY]  out.write(chrs,  start,  seqEnd);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(chrs,  start,  seqEnd);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(chrs,  start,  seqEnd);	  if(isHex)    {    out.write(chrs,    start,    seqEnd);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
118	[BUG]  [BUGGY]  out.write(firstChar,  start,  seqEnd);  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(firstChar,  start,  seqEnd);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(firstChar,  start,  seqEnd);	  if(isHex)    {    out.write(chrs,    start,    seqEnd);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
119	[BUG]  [BUGGY]  !isHex)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex)  {  isHex  =  false;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex)  {  isHex  =  false;  }	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
120	[BUG]  [BUGGY]  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;  }	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
121	[BUG]  [BUGGY]  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  isHex  =  true;	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
122	[BUG]  [BUGGY]  ||  firstChar  ==  ';')  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  firstChar  ==  ';')  {  isHex  =  true;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  firstChar  ==  ';')  {  isHex  =  true;  }	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
123	[BUG]  [BUGGY]  out.write('0',  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('0',  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('0',  firstChar);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
124	[BUG]  [BUGGY]  out.write('0'  +  firstChar);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('0'  +  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('0'  +  firstChar);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
125	[BUG]  [BUGGY]  if(start  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
126	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(start);	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
127	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
128	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
129	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
130	[BUG]  [BUGGY]  !isHex  ||  firstChar!=  ';')  {  start++;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar!=  ';')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar!=  ';')  {  start++;	  !isHex    &&    firstChar!=    ';')    {    start++;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
131	[BUG]  [BUGGY]  Integer  input  =  input.getIndex();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getIndex();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getIndex();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
132	[BUG]  [BUGGY]  !isHex  ||  firstChar!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar!=  ';')  {  start++;  }	  !isHex    &&    firstChar!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
133	[BUG]  [BUGGY]  !isHex  &&  firstChar  >=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  >=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  >=  ';')  {  start++;  }	  !isHex    &&    firstChar!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
134	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)  ==  '-')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    '-')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
135	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    '-')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
136	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    '-')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
137	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
138	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
139	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
140	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  String  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
141	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
142	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
143	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqStart);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(seqStart);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(seqStart);	  int    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
144	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  false;	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
145	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  int  end  =  index  +  1;  isHex  =  true;  }	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
146	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
147	[BUG]  [BUGGY]  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  }	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
148	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  '.';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  '.';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  '.';	  !isHex    &&    firstChar    ==    '.';    	non-compiled	[CE]  <identifier>  expected	46	None	replace
149	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  '.';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  '.';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  '.';	  !isHex    &&    firstChar    ==    '.';    	non-compiled	[CE]  <identifier>  expected	46	None	replace
150	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  start  =  input.charAt(end);  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
151	[BUG]  [BUGGY]  Integer  end  =  input.length();  isHex  =  true;  start  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  end  =  input.length();  isHex  =  true;  start  =  input.charAt(end);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  end  =  input.length();  isHex  =  true;  start  =  input.charAt(end);	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
152	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
153	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  -  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getValue()  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getValue()  -  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
154	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  /  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getValue()  /  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getValue()  /  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
155	[BUG]  [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
156	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
157	[BUG]  [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
158	[BUG]  [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
159	[BUG]  [BUGGY]  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt	  if(isHex)    {    int[]    chrs    =    input.getChronology();    for(int    i    =    0,    len    =    chrs.length;    i    <    len;    ++i)    {    chrs[i]    =    input.charAt    	non-compiled	[CE]  <identifier>  expected	10	None	replace
160	[BUG]  [BUGGY]  Integer[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt	  if(isHex)    {    int[]    chrs    =    input.getChronology();    for(int    i    =    0,    len    =    chrs.length;    i    <    len;    ++i)    {    chrs[i]    =    input.charAt    	non-compiled	[CE]  <identifier>  expected	10	None	replace
161	[BUG]  [BUGGY]  if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  }  [CE]  <identifier>  expected  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  }	  if(isHex)    {    int[]    chrs    =    input.getChronology();    for(int    i    =    0,    len    =    chrs.length;    i    <    len;    ++i)    {    chrs[i]    =    input.charAt    	non-compiled	[CE]  <identifier>  expected	10	None	replace
162	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAscentInt();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscentInt();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
163	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAscentIndex();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscentIndex();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
164	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'x';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'x';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'x';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
165	[BUG]  [BUGGY]  isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'x';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'x';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'x';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
166	[BUG]  [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
167	[BUG]  [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  true);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
168	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  'X')  {  start++;	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
169	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  'x')  {  start++;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  'x')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  'x')  {  start++;	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
170	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  '.')  {  start++;  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  '.')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  '.')  {  start++;	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
171	[BUG]  [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    'n'    ||    start    ==    'r')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
172	[BUG]  [BUGGY]  if(start  ==  '.')  {  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    'n'    ||    start    ==    'r')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
173	[BUG]  [BUGGY]  if(start  ==  'n')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  'n')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'n')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    'n'    ||    start    ==    'r')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
174	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(start,  index);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(start,  index);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
175	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(index  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(index  +  1);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
176	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  firstChar);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(index,  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(index,  firstChar);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
177	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
178	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
179	[BUG]  [BUGGY]  if(seqEnd  >=  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >=  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >=  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    ==    -1)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
180	[BUG]  [BUGGY]  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    ==    -1)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
181	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
182	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
183	[BUG]  [BUGGY]  if(!isHex)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
184	[BUG]  [BUGGY]  if(index  ==  seqEnd)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  seqEnd)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  seqEnd)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
185	[BUG]  [BUGGY]  out.write('#'  +  firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('#'  +  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('#'  +  firstChar);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	102	None	replace
186	[BUG]  [BUGGY]  out.write('#',  firstChar);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('#',  firstChar);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('#',  firstChar);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	102	None	replace
187	[BUG]  [BUGGY]  out.write('#',  start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('#',  start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('#',  start);	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	102	None	replace
188	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  'x')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  'x')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  'x')  {  start++;	  !isHex    &&    firstChar    ==    'x')    {    start++;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
189	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x')  {  start++;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x')  {  start++;	  !isHex    &&    firstChar    ==    'x')    {    start++;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
190	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getIntValue()  +  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
191	[BUG]  [BUGGY]  Integer  input  =  input.getLongValue();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getLongValue();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getLongValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
192	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getIntValue()  -  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
193	[BUG]  [BUGGY]  nfe  =  input.getNumberValue()  +  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberValue()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberValue()  +  1;	  nfe    =    input.getNumberValue();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
194	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  false;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
195	[BUG]  [BUGGY]  if(index  ==  firstChar)  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  firstChar)  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  firstChar)  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
196	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ',')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  ',')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ',')  {  start++;  }	  !isHex    &&    firstChar    ==    ',')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
197	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ',')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  ',')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ',')  {  start++;  }	  !isHex    &&    firstChar    ==    ',')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
198	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '+')  {  start++;  }	  !isHex    &&    firstChar    ==    ',')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
199	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
200	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
201	[BUG]  [BUGGY]  int  end  =  input.length()  -  start;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  input.length()  -  start;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  -  start;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
202	[BUG]  [BUGGY]  int  end  =  input.length()  +  seqEnd;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  input.length()  +  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  +  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
203	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(start);	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
204	[BUG]  [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
205	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(end);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(end);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  false;  return  input.charAt(end);	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
206	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
207	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
208	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
209	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
210	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
211	[BUG]  [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
212	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
213	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
214	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(0);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(0);	  char    firstChar    =    input.charAt(seqEnd);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
215	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
216	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
217	[BUG]  [BUGGY]  &&  isHex  =  true;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  &&  isHex  =  true;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	&&  isHex  =  true;	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
218	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  ';';  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  ';';	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
219	[BUG]  [BUGGY]  ||  isHex  &&  firstChar!=  ';';  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar!=  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar!=  ';';	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
220	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
221	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
222	[BUG]  [BUGGY]  out.write('x',  start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('x',  start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('x',  start);	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
223	[BUG]  [BUGGY]  if(isHex)  {  end  =  index  +  1;  if(input.charAt(start)!=  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  end  =  index  +  1;  if(input.charAt(start)!=  ':')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  end  =  index  +  1;  if(input.charAt(start)!=  ':')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ':')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
224	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;  }	  !isHex    &&    firstChar    ==    ',')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
225	[BUG]  [BUGGY]  if(seqEnd  >  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    ==    -1)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
226	[BUG]  [BUGGY]  int  start  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  start  =  index  +  1;  isHex  =  true;  return  input.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  start  =  index  +  1;  isHex  =  true;  return  input.charAt(start);	  if(seqEnd    ==    -1)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
227	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  out);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(index,  out);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(index,  out);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
228	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
229	[BUG]  [BUGGY]  if(start  >=  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  '.')  {  int  end  =  index  +  2;  isHex  =  true;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
230	[BUG]  [BUGGY]  if(start  ==  '.')  {  start  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  start  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  start  =  index  +  1;  isHex  =  true;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
231	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
232	[BUG]  [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
233	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  start++;	  !isHex    &&    firstChar    ==    ';'    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    start++;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
234	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue()  -  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAssignedValue()  -  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAssignedValue()  -  1;	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
235	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  +  seqEnd;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  +  seqEnd;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  +  seqEnd;	  isHex    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	28	None	replace
236	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  +  1;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  +  1;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  +  1;	  isHex    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	28	None	replace
237	[BUG]  [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
238	[BUG]  [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  false);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  false);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES,  false);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    false);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
239	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  firstChar  =  input.charAt(0);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(0);	  int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
240	[BUG]  [BUGGY]  nfe  =  input.getNumberOfChar();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfChar();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfChar();	  nfe    =    input.getNumberChar();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
241	[BUG]  [BUGGY]  if(start  >=  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  'n'  ||  start  ==  'r')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    'n'    ||    start    ==    'r')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
242	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
243	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
244	[BUG]  [BUGGY]  int  end  =  input.length()  /  seqEnd;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  input.length()  /  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  /  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
245	[BUG]  [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(start    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
246	[BUG]  [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  '.')  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(start    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
247	[BUG]  [BUGGY]  (isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X'));  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  (isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X'));  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	(isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X'));	  (isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X'));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
248	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x'  +  seqEnd;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x'  +  seqEnd;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x'  +  seqEnd;	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
249	[BUG]  [BUGGY]  int  end  =  index  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
250	[BUG]  [BUGGY]  nfe  =  input.getNumberOfLinks();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfLinks();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfLinks();	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
251	[BUG]  [BUGGY]  Integer  chr  =  input.getEntityValue();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  chr  =  input.getEntityValue();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  chr  =  input.getEntityValue();	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
252	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  '-')  {  start++;	  !isHex    &&    firstChar    ==    ',')    {    start++;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
253	[BUG]  [BUGGY]  if(start  ==  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  start)  {  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
254	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
255	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  'x')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar!=  'x')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  'x')  {  start++;	  !isHex    &&    firstChar    ==    'x')    {    start++;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
256	[BUG]  [BUGGY]  if(start  ==  '.')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(index    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
257	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscentValue()  +  1;	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
258	[BUG]  [BUGGY]  Integer  input  =  input.getAscentImpl();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAscentImpl();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscentImpl();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
259	[BUG]  [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  2;  isHex  =  true;	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
260	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  }	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
261	[BUG]  [BUGGY]  out.write('0',  start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('0',  start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('0',  start);	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
262	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().trim(start);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().trim(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().trim(start);	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
263	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().substring(start);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().substring(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().substring(start);	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
264	[BUG]  [BUGGY]  if(start  >=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  }	  if(start    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
265	[BUG]  [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
266	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
267	[BUG]  [BUGGY]  boolean  areHex  =  false;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  boolean  areHex  =  false;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	boolean  areHex  =  false;	  boolean    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
268	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqStart;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
269	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
270	[BUG]  [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  ';')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
271	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
272	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  while(input.charAt(start)!=  ';')  {  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
273	[BUG]  [BUGGY]  out.write(seqEnd,  start,  isHex);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(seqEnd,  start,  isHex);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(seqEnd,  start,  isHex);	  if(isHex)    {    out.write(chrs,    start,    seqEnd);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
274	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(start  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
275	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
276	[BUG]  [BUGGY]  nfe  =  input.getNumberOfCharsException(start);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfCharsException(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfCharsException(start);	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
277	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  >=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  >=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)  >=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
278	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
279	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(end  +  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(end  +  1);	  char    firstChar    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
280	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
281	[BUG]  [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  return  input.charAt(end);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  2;  isHex  =  true;  return  input.charAt(end);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  2;  isHex  =  true;  return  input.charAt(end);	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
282	[BUG]  [BUGGY]  !isHex  ||  input.charAt(firstChar)!=  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  input.charAt(firstChar)!=  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  input.charAt(firstChar)!=  ';';	  !isHex    &&    input.charAt(firstChar)!=    ';';    	non-compiled	[CE]  <identifier>  expected	93	None	replace
283	[BUG]  [BUGGY]  !isHex  ||  input  ==  'x'  ||  input  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  input  ==  'x'  ||  input  ==  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  input  ==  'x'  ||  input  ==  'X')  {  start++;	  !isHex    &&    input    ==    'x'    ||    input    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
284	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( ", ");  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException( ", ");  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException( ", ");	  nfe    =    input.getNumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
285	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start,  out);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(start,  out);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(start,  out);	  nfe    =    input.getNumberFormatException(start);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
286	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
287	[BUG]  [BUGGY]  if(index  ==  -1)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  -1)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  -1)  {  if(end!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
288	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  'X')  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  'X')  {  isHex  =  true;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  'X')  {  isHex  =  true;  }	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
289	[BUG]  [BUGGY]  !isHex)  {  isHex  =  false;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex)  {  isHex  =  false;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex)  {  isHex  =  false;	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
290	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'X';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'X';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
291	[BUG]  [BUGGY]  out.write(seqEnd);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write(seqEnd);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write(seqEnd);	  if(isHex)    {    out.write(chrs[index]);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
292	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  +  1;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  +  1;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  +  1;	  !isHex    &&    firstChar    ==    ',';    	non-compiled	[CE]  <identifier>  expected	90	None	replace
293	[BUG]  [BUGGY]  nfe  =  input.getNumberValue()  *  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberValue()  *  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberValue()  *  seqEnd;	  nfe    =    input.getNumberValue();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
294	[BUG]  [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  start  =  index  +  1;  if(input.charAt(start)!=  '-')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    '-')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
295	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  if(seqEnd  <  seqEnd)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  <  seqEnd)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  <  seqEnd)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
297	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
298	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
299	[BUG]  [BUGGY]  !isHex  &&  firstChar  >=  ';')  {  start++;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  >=  ';')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  >=  ';')  {  start++;	  !isHex    &&    firstChar!=    ';')    {    start++;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
300	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  2;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
301	[BUG]  [BUGGY]  if(start  >=  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
302	[BUG]  [BUGGY]  if(!isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt	  if(isHex)    {    int[]    chrs    =    input.getChronology();    for(int    i    =    0,    len    =    chrs.length;    i    <    len;    ++i)    {    chrs[i]    =    input.charAt    	non-compiled	[CE]  <identifier>  expected	10	None	replace
303	[BUG]  [BUGGY]  &&  isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [CE]  <identifier>  expected  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  &&  isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	&&  isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt	  if(isHex)    {    int[]    chrs    =    input.getChronology();    for(int    i    =    0,    len    =    chrs.length;    i    <    len;    ++i)    {    chrs[i]    =    input.charAt    	non-compiled	[CE]  <identifier>  expected	10	None	replace
304	[BUG]  [BUGGY]  if(start  ==  start)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  start)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  start)  {  if(end  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
305	[BUG]  [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
306	[BUG]  [BUGGY]  if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
307	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
308	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(start.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(seqEnd    >    0)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
309	[BUG]  [BUGGY]  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
310	[BUG]  [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    '-')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
311	[BUG]  [BUGGY]  int  end  =  input.length()  -  1,  seqEnd;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  int  end  =  input.length()  -  1,  seqEnd;  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  -  1,  seqEnd;	  int    end    =    input.length()    -    seqEnd;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
312	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'X'  ||  firstChar  ==  'X';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
313	[BUG]  [BUGGY]  if(index  ==  seqEnd)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  seqEnd)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  seqEnd)  {  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(input.charAt(end)    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
314	[BUG]  [BUGGY]  ||  isHex)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex)  {  isHex  =  true;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex)  {  isHex  =  true;  }	  !isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
315	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char  firstChar  =  input.charAt(seqEnd  -  1);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(seqEnd  -  1);	  char    firstChar    =    input.charAt(seqEnd    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
316	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
317	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  ||  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
318	[BUG]  [BUGGY]  OutputStream  input  =  input.getOutputStream();  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  OutputStream  input  =  input.getOutputStream();  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	OutputStream  input  =  input.getOutputStream();	  if(isHex)    {    out.write(chrs,    start,    seqEnd);    }    else    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
319	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':')  {  start++;	  !isHex    &&    firstChar    ==    ',')    {    start++;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
320	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  ':';  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  ':';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  ':';	  isHex    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	28	None	replace
321	[BUG]  [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >  seqEnd)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >  seqEnd)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    >    start)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
322	[BUG]  [BUGGY]  nfe  =  input.getNumberOfCharsException();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberOfCharsException();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfCharsException();	  nfe    =    input.getNumberOfBoundsException();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
323	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
324	[BUG]  [BUGGY]  !isHex  &&  input.charAt(seqEnd)!=  ';';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.charAt(seqEnd)!=  ';';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(seqEnd)!=  ';';	  !isHex    &&    input.charAt(firstChar)!=    ';';    	non-compiled	[CE]  <identifier>  expected	93	None	replace
325	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
326	[BUG]  [BUGGY]  out.append('x');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.append('x');  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.append('x');	  out.write('x');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
327	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  }	  int    end    =    index    +    1;    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
328	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  'x';  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  'x';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  'x';	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
329	[BUG]  [BUGGY]  ||  isHex  &&  firstChar  ==  'X';  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  ||  isHex  &&  firstChar  ==  'X';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  &&  firstChar  ==  'X';	  ||    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
330	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().trim(seqEnd);  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormat().trim(seqEnd);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().trim(seqEnd);	  nfe    =    input.getNumberFormat().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
331	[BUG]  [BUGGY]  if(input!=  null)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(input!=  null)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(input!=  null)  {  if(firstChar  ==  'x')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
332	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(input.charAt(start)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(firstChar    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
333	[BUG]  [BUGGY]  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
334	[BUG]  [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
335	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
336	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(seqEnd  >  0)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(seqEnd    ==    -1)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
337	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index,  isHex);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  nfe  =  input.getNumberFormatException(index,  isHex);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(index,  isHex);	  nfe    =    input.getNumberFormatException(index);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
338	[BUG]  [BUGGY]  if(index  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(start    ==    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
339	[BUG]  [BUGGY]  !isHex  &&  input.equals(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.equals(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.equals(Feature.QUOTE_FIELD_NAMES,  true);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
340	[BUG]  [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.enabled(Feature.QUOTE_FIELD_NAMES);	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
341	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar  ==  'X');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar  ==  'X');  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  firstChar  ==  'X');	  !isHex    &&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
342	[BUG]  [BUGGY]  char[]  chrs  =  input.toCharArray();  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  char[]  chrs  =  input.toCharArray();  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char[]  chrs  =  input.toCharArray();	  if(isHex)    {    out.write(chrs[index]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
343	[BUG]  [BUGGY]  Integer  input  =  input.getImmediateParentPointer();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getImmediateParentPointer();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getImmediateParentPointer();	  Integer    input    =    input.getAssignedValue();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
344	[BUG]  [BUGGY]  !isHex  &&  input.charAt(firstChar)!=  'x'  ||  input.charAt(start)  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  input.charAt(firstChar)!=  'x'  ||  input.charAt(start)  ==  'X')  {  start++;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(firstChar)!=  'x'  ||  input.charAt(start)  ==  'X')  {  start++;	  !isHex    &&    firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
345	[BUG]  [BUGGY]  Boolean  isHex  =  false;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Boolean  isHex  =  false;  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Boolean  isHex  =  false;	  boolean    isHex    =    true;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
346	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
347	[BUG]  [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  start  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }	  if(isHex)    {    int    end    =    index    +    1;    if(input.charAt(end)!=    ':')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
348	[BUG]  [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
349	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  len;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
350	[BUG]  [BUGGY]  Integer  input  =  input.getAscent();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Integer  input  =  input.getAscent();  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscent();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
351	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ','  ||  firstChar  ==  ':';	  !isHex    &&    firstChar    ==    ',';    	non-compiled	[CE]  <identifier>  expected	90	None	replace
352	[BUG]  [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  start  =  index  +  1;  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
353	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  }  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  }	  if(isHex)    {    for(int    i    =    start;    i    <    seqEnd;    ++i)    {    char    firstChar    =    input.charAt(i);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
354	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(!isHex)    {    if(start!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
355	[BUG]  [BUGGY]  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    '.')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
356	[BUG]  [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  >=  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
357	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'x')  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
358	[BUG]  [BUGGY]  !isHex  &&  start  <  =  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  !isHex  &&  start  <  =  ';')  {  start++;  }  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  start  <  =  ';')  {  start++;  }	  !isHex    &&    start    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
359	[BUG]  [BUGGY]  if(!isHex)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(!isHex)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(index  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	  if(index    ==    '.')    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
360	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'x';  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'x';  [BUGGY]        }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  secondChar  ==  'x';	  isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
361	[BUG]  [BUGGY]  out.append('0');  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.append('0');  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.append('0');	  out.write('0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
362	[BUG]  [BUGGY]  Char  end  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  Char  end  =  input.charAt(start);  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Char  end  =  input.charAt(start);	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
363	[BUG]  [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  if(index  <  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  <  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	  if(index    ==    seqEnd)    {    if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
364	[BUG]  [BUGGY]  out.write('n',  'X');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.write('n',  'X');  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  'X');	  out.write('n',    firstChar);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
365	[BUG]  [BUGGY]  out.append('#');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;      [BUGGY]  out.append('#');  [BUGGY]      isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.append('#');	  out.write('#');    	non-compiled	[CE]  <identifier>  expected	102	None	replace
