bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  firstChar  =  input.charAt(index);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(index);	      int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(start  +  1);	      int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  if(index  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(index  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  seqEnd)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
5	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
6	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  true;	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
7	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  for(int  i  =  start;  i  <  seqEnd;  ++i)  {  char  firstChar  =  input.charAt(i);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int[]  chrs  =  input.getChronology();  for(int  i  =  0,  len  =  chrs.length;  i  <  len;  ++i)  {  chrs[i]  =  input.charAt	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  int  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  input.length()  -  1;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  -  1;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  int  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  input.length()  +  1;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  +  1;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  end  =  input.length();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  end  =  input.length();	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  'x'  &&  firstChar  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar  ==  'x'  &&  firstChar  ==  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  'x'  &&  firstChar  ==  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    &&    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  'x'  &&  firstChar!=  'X')  {  start++;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  'x'  &&  firstChar!=  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  'x'  &&  firstChar!=  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    &&    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(start  +  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(start  +  1);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(seqEnd  +  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(seqEnd  +  1);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ';')  {  start++;  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar  ==  ';')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ';')  {  start++;	  !isHex    &&    firstChar    ==    ';')    {    start++;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ';')  {  start++;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar!=  ';')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ';')  {  start++;	  !isHex    &&    firstChar    ==    ';')    {    start++;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
22	[BUG]  [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(firstChar  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X';  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X';	  isHex    &&    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	23	None	replace
27	[BUG]  [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'x';	  isHex    &&    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	23	None	replace
28	[BUG]  [BUGGY]  isHex  ||  firstChar  ==  'x';  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  isHex  ||  firstChar  ==  'x';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	isHex  ||  firstChar  ==  'x';	  isHex    &&    firstChar    ==    'x';    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  nfe  =  input.getNumber();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumber();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumber();	      nfe    =    input.getNumberFormat();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  nfe  =  input.getNumberChar();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberChar();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberChar();	      nfe    =    input.getNumberFormat();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat().trim();  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberFormat().trim();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat().trim();	      nfe    =    input.getNumberFormat();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  boolean  isHex  =  true;  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  boolean  isHex  =  true;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	boolean  isHex  =  true;	  isHex    =    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(seqEnd);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(seqEnd);	      char    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(firstChar);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(firstChar);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(firstChar);	      char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(first);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(first);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(first);	      char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(index);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberFormatException(index);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(index);	      nfe    =    input.getNumberFormatException();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException(start);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberFormatException(start);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException(start);	      nfe    =    input.getNumberFormatException();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  if(isHex)  {  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  isHex  =  false;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  isHex  =  false;  }	  if(isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  ||  isHex  =  true;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  ||  isHex  =  true;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	||  isHex  =  true;	  if(isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  (isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X'));  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  (isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X'));  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	(isHex  &&  firstChar  ==  'x'  ||  firstChar  ==  'X'));	  if(isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar  ==  ';')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ';')  {  start++;  }	  !isHex    &&    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
42	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar!=  ';')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  ';')  {  start++;  }	  !isHex    &&    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ',')  {  start++;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  ',')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ',')  {  start++;  }	  !isHex    &&    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
44	[BUG]  [BUGGY]  nfe  =  input.getNumberInput()  +  1;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberInput()  +  1;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberInput()  +  1;	      nfe    =    input.getNumberInput();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  !isHex  ||  firstChar  ==  ';';  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar  ==  ';';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar  ==  ';';	  !isHex    &&    firstChar    ==    ';';    	non-compiled	[CE]  <identifier>  expected	22	None	replace
46	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  '.';  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  '.';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  '.';	  !isHex    &&    firstChar    ==    ';';    	non-compiled	[CE]  <identifier>  expected	22	None	replace
47	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(firstChar  +  1);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(firstChar  +  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(firstChar  +  1);	      char    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getIntValue();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getIntValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
49	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getValue()  +  1;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getValue()  +  1;	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  Integer  input  =  input.getEntityValue();  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getEntityValue();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getEntityValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
51	[BUG]  [BUGGY]  out.write('n',  firstChar);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  out.write('n',  firstChar);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  firstChar);	      out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  out.write('x');  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  out.write('x');  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('x');	      out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
54	[BUG]  [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  0)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
56	[BUG]  [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
57	[BUG]  [BUGGY]  !isHex  ||  firstChar!=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  ||  firstChar!=  ';';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  ||  firstChar!=  ';';	  !isHex    &&    firstChar!=    ';';    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  out.write('n',  start);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  out.write('n',  start);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('n',  start);	      out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  out.write('0');  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  out.write('0');  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('0');	      out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  'x')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  'x')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  'x')  {  start++;	  !isHex    &&    firstChar    ==    'x'    &&    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  nfe  =  input.getNumberOfBoundsException();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberOfBoundsException();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberOfBoundsException();	      nfe    =    input.getNumberFormatException();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
62	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getAscentValue();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAscentValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  Integer  input  =  input.getKey();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getKey();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getKey();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
64	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat()  +  1;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberFormat()  +  1;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormat()  +  1;	      nfe    =    input.getNumberFormat();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ';'  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  start++;	  !isHex    &&    firstChar    ==    ';';    	non-compiled	[CE]  <identifier>  expected	22	None	replace
66	[BUG]  [BUGGY]  !isHex  &&  firstChar  >=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  >=  ';';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  >=  ';';	  !isHex    &&    firstChar!=    ';';    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ',')  {  start++;  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  ',')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ',')  {  start++;	  !isHex    &&    firstChar    ==    ';')    {    start++;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
68	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
69	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
70	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  start  =  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    start    =    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
71	[BUG]  [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
72	[BUG]  [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
73	[BUG]  [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
74	[BUG]  [BUGGY]  !isHex)  {  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex)  {  isHex  =  true;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex)  {  isHex  =  true;  }	  if(isHex)    {    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  >  start)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  if(seqEnd  ==  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(seqEnd  ==  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(seqEnd  ==  -1)  {  if(start!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
78	[BUG]  [BUGGY]  if(isHex)  {  out.write(chrs[index]);  }  else  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  out.write(chrs[index]);  }  else  {  out.write(chrs[index]);  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  out.write(chrs[index]);  }  else  {  out.write(chrs[index]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  if(isHex)  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  out.write(chrs[index]);  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  out.write(chrs[index]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
80	[BUG]  [BUGGY]  if(isHex)  {  out.write(chrs,  start,  seqEnd);  }  else  {  out.write(chrs[index]);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  out.write(chrs,  start,  seqEnd);  }  else  {  out.write(chrs[index]);  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  out.write(chrs,  start,  seqEnd);  }  else  {  out.write(chrs[index]);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
81	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(seqEnd);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  firstChar  =  input.charAt(seqEnd);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(seqEnd);	      int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
84	[BUG]  [BUGGY]  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(input.charAt(end)  ==  ';')  {  int  end  =  index  +  1;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
85	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]  !isHex  &&  input  ==  'x'  ||  input  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  input  ==  'x'  ||  input  ==  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input  ==  'x'  ||  input  ==  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
87	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ';')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  ':')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  int  end  =  index  +  1;  if(input.charAt(end)!=  '-')  {  start++;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
90	[BUG]  [BUGGY]  !isHex  &&  firstChar  ==  ',';  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar  ==  ',';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar  ==  ',';	  !isHex    &&    firstChar    ==    ';';    	non-compiled	[CE]  <identifier>  expected	22	None	replace
91	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(start  -  1);	      int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
92	[BUG]  [BUGGY]  nfe  =  input.getNumberValue();  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberValue();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberValue();	      nfe    =    input.getNumberInput();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
93	[BUG]  [BUGGY]  !isHex  &&  input.charAt(firstChar)!=  ';';  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  input.charAt(firstChar)!=  ';';  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  input.charAt(firstChar)!=  ';';	  !isHex    &&    firstChar!=    ';';    	non-compiled	[CE]  <identifier>  expected	24	None	replace
94	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  char  firstChar  =  input.charAt(end);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	char  firstChar  =  input.charAt(end);	      char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
96	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
97	[BUG]  [BUGGY]  if(index  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  if(index  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	if(index  ==  '.')  {  if(input.charAt(start)!=  ';')  {  int  end  =  index  +  1;  isHex  =  true;  return  input.charAt(end);  }	      if(input.charAt(start)!=    ';')    {    int    end    =    index    +    1;    isHex    =    true;    return    input.charAt(end);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  isHex    =    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
99	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false);	  isHex    =    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
100	[BUG]  [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);	  isHex    =    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
101	[BUG]  [BUGGY]  int  end  =  input.length()  -  seqEnd;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  end  =  input.length()  -  seqEnd;  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  end  =  input.length()  -  seqEnd;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
102	[BUG]  [BUGGY]  out.write('#');  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  out.write('#');  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	out.write('#');	      out.write('n');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
103	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue();  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  Integer  input  =  input.getAssignedValue();  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	Integer  input  =  input.getAssignedValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
104	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(seqEnd  +  1);  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  int  firstChar  =  input.charAt(seqEnd  +  1);  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	int  firstChar  =  input.charAt(seqEnd  +  1);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
105	[BUG]  [BUGGY]  nfe  =  input.getNumberFormatException( " ");  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  nfe  =  input.getNumberFormatException( " ");  [BUGGY]    isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	nfe  =  input.getNumberFormatException( " ");	      nfe    =    input.getNumberFormatException();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  !isHex  &&  start  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  start  ==  ';')  {  start++;  }  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  start  ==  ';')  {  start++;  }	  !isHex    &&    firstChar    ==    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  !isHex  &&  firstChar!=  'x'  &&  firstChar  ==  'X')  {  start++;  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;    [BUGGY]  !isHex  &&  firstChar!=  'x'  &&  firstChar  ==  'X')  {  start++;  [BUGGY]      }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.7071067811865475	47	47	2	replace	!isHex  &&  firstChar!=  'x'  &&  firstChar  ==  'X')  {  start++;	  !isHex    &&    firstChar    ==    'x'    &&    firstChar    ==    'X')    {    start++;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
