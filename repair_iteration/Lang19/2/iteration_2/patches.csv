bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  index  +  2  -  1;  [CE]  cannot  find  symbol  seqEnd  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  index  +  2  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  end  =  index  +  2  -  1;	  int    end    =    index    +    1    -    1;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	19	None	replace
2	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index,  out)+  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index,  out)+  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index,  out)+  1;	  int    nfe    =    input.getIndex(index,    out);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
3	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index,  index);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index,  index);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index,  index);	  int    nfe    =    input.getIndex(index,    out);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
4	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index,  off);  [CE]  cannot  find  symbol  off  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index,  off);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index,  off);	  int    nfe    =    input.getIndex(index,    out);    	non-compiled	[CE]  cannot  find  symbol  off	4	None	replace
5	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  int  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length();  int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    seqEnd    =    input.length()    -    1;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	33	None	replace
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqStart  =  input.length();  int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	int  seqStart  =  input.length();  int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    seqEnd    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
7	[BUG]  [BUGGY]  int  seqStart  =  input.length();  int  seqEnd  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqStart  =  input.length();  int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqStart  =  input.length();  int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    seqEnd    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	2	replace
8	[BUG]  [BUGGY]  String  seqEnd  =  input.length();  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  String  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	String  seqEnd  =  input.length();	  char    seqEnd    =    input.length();    	non-compiled	[CE]  incompatible  types	48	None	replace
9	[BUG]  [BUGGY]  Char  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Char  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Char  seqEnd  =  input.length();	  char    seqEnd    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
10	[BUG]  [BUGGY]  Integer  input  =  input.getKey()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getKey()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getKey()  -  1;	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	24	None	replace
11	[BUG]  [BUGGY]  int  input  =  input.getValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getValue();	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	24	None	replace
12	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    Int    seqEnd    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
13	[BUG]  [BUGGY]  Int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Int  seqEnd  =  input.length();  Int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    Int    seqEnd    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
14	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  char  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  char  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  char  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    char    seqEnd    =    input.length()    -    2;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	42	None	replace
15	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  String  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  String  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  String  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    char    seqEnd    =    input.length()    -    2;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	42	None	replace
16	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  Char  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  Char  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  Char  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    char    seqEnd    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
17	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getIntValue()  -  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	23	None	replace
18	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getIntValue()  +  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	23	None	replace
19	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  cannot  find  symbol  seqEnd  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  input.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  start  =  input.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	20	None	replace
20	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  cannot  find  symbol  output  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  output.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  end  =  output.length();	  int    end    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  output	20	None	replace
21	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitInt();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getImplicitInt();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getImplicitInt();	  Integer    input    =    input.getImplicitValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	50	None	replace
22	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitIndex();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getImplicitIndex();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getImplicitIndex();	  Integer    input    =    input.getImplicitValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	50	None	replace
23	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitValue()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getImplicitValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getImplicitValue()  -  1;	  Integer    input    =    input.getImplicitValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	50	None	replace
24	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  int  seqEnd  =  output.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  seqEnd  =  output.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length();  int  seqEnd  =  output.length();	  int    seqEnd    =    input.length()    +    1;    int    seqEnd    =    output.length()    +    1;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	15	None	replace
25	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  int  seqEnd  =  output.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  seqEnd  =  output.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  int  seqEnd  =  output.length();	  int    seqEnd    =    input.length()    +    1;    int    seqEnd    =    output.length()    +    1;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	15	None	replace
26	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer    seqEnd    =    input.length();    Integer  seqEnd  =  input.length();	  	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	58	None	add
27	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  Integer  sqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  Integer  sqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer    seqEnd    =    input.length();    Integer  sqEnd  =  input.length();	  	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	58	None	add
28	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  char  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  char  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer    seqEnd    =    input.length();    char  seqEnd  =  input.length();	  	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	58	None	add
29	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  int  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    2;    int    seqEnd    =    input.length()    -    1;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	41	None	replace
30	[BUG]  [BUGGY]  char  inputEnd  =  input.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  inputEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  inputEnd  =  input.length();	  t    seqEnd    =    input.length();    	non-compiled	[CE]  possible  loss  of  precision	29	None	replace
31	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentInt()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentInt()  +  1;	  Integer    input    =    input.getAscentInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	30	None	replace
32	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentInt()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentInt()  -  1;	  Integer    input    =    input.getAscentInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	30	None	replace
33	[BUG]  [BUGGY]  int  input  =  input.getAscentInt();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getAscentInt();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getAscentInt();	  Integer    input    =    input.getAscentInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	30	None	replace
34	[BUG]  [BUGGY]  int  seqEnd  =  out.length();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  out.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  out.length();	  int    seqEnd    =    output.length();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
35	[BUG]  [BUGGY]  int  seqEnd  =  index.length();  [CE]  int  cannot  be  dereferenced  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  index.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  index.length();	  int    seqEnd    =    output.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
36	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length()  -  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	Integer  seqEnd  =  input.length()  -  1;	  Integer    seqEnd    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	59	2	replace
37	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length()  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length()  -  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length()  -  1;	  Integer    seqEnd    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	59	2	replace
38	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length()  +  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	Integer  seqEnd  =  input.length()  +  1;	  Integer    seqEnd    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	59	2	replace
39	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length()  +  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length()  +  1;	  Integer    seqEnd    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	59	2	replace
40	[BUG]  [BUGGY]  int  start  =  index  +  2  -  1;  [CE]  cannot  find  symbol  seqEnd  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  index  +  2  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  start  =  index  +  2  -  1;	  int    start    =    index    +    2;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	7	None	replace
41	[BUG]  [BUGGY]  char  inputValue  =  input.getIntValue();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  inputValue  =  input.getIntValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  inputValue  =  input.getIntValue();	  int    inputValue    =    input.getIntValue();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
42	[BUG]  [BUGGY]  int  inputValue  =  input.getIntValue()  -  1;  [CE]  cannot  find  symbol  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputValue  =  input.getIntValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputValue  =  input.getIntValue()  -  1;	  int    inputValue    =    input.getIntValue();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
43	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentIndex()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentIndex()  -  1;	  Integer    input    =    input.getAscentIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	31	None	replace
44	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentIndex()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentIndex()  +  1;	  Integer    input    =    input.getAscentIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	31	None	replace
45	[BUG]  [BUGGY]  Integer  input  =  out.getAscentIndex();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  out.getAscentIndex();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  out.getAscentIndex();	  Integer    input    =    input.getAscentIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	31	None	replace
46	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	int  seqEnd  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
47	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  int  len  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	2	replace
48	[BUG]  [BUGGY]  int  len  =  input.length();  [CE]  cannot  find  symbol  seqEnd  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  len  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	36	None	replace
49	[BUG]  [BUGGY]  char  seqEnd  =  input.length();  int  len  =  input.length();  [CE]  possible  loss  of  precision  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  seqEnd  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  seqEnd  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	non-compiled	[CE]  possible  loss  of  precision	36	None	replace
50	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  int  len  =  output.length();  [CE]  cannot  find  symbol  output  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  len  =  output.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  int  len  =  output.length();	  int    seqEnd    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  output	36	None	replace
51	[BUG]  [BUGGY]  int  end  =  input.length()  -  index  +  1;  [CE]  cannot  find  symbol  seqEnd  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.length()  -  index  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  end  =  input.length()  -  index  +  1;	  int    end    =    input.length()    -    index;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	56	None	replace
52	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length()  -  1;  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	int  seqEnd  =  input.length()  -  1;  int  len  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	replace
53	[BUG]  [BUGGY]  int  seqEnd  =  input.length()  -  1;  int  len  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length()  -  1;  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length()  -  1;  int  len  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	replace
54	[BUG]  [BUGGY]  int  nfe  =  input.getIndex()  *  1;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex()  *  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex()  *  1;	  int    nfe    =    input.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
55	[BUG]  [BUGGY]  int  nfe  =  input.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex()  -  1;	  int    nfe    =    input.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
56	[BUG]  [BUGGY]  Integer  input  =  input.getIndex();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getIndex();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getIndex();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	25	None	replace
57	[BUG]  [BUGGY]  String  end  =  input.length();  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  String  end  =  input.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	String  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  incompatible  types	49	None	replace
58	[BUG]  [BUGGY]  Char  end  =  input.length();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Char  end  =  input.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Char  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
59	[BUG]  [BUGGY]  Character  end  =  input.length();  [CE]  incompatible  types  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Character  end  =  input.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Character  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  incompatible  types	49	None	replace
60	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf('-',  index);  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.lastIndexOf('-',  index);  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.lastIndexOf('-',  index);	  int    seqEnd    =    input.lastIndexOf('-');    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
61	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf('-',  out);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.lastIndexOf('-',  out);  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.lastIndexOf('-',  out);	  int    seqEnd    =    input.lastIndexOf('-');    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
62	[BUG]  [BUGGY]  int  seqEnd  =  input.indexOf('-');  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.indexOf('-');  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.indexOf('-');	  int    seqEnd    =    input.lastIndexOf('-');    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
63	[BUG]  [BUGGY]  int  entityValue  =  input.getEntityValue();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  entityValue  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  entityValue  =  input.getEntityValue();	  int    inputValue    =    input.getEntityValue();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
64	[BUG]  [BUGGY]  char  inputValue  =  input.getEntityValue();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  inputValue  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  inputValue  =  input.getEntityValue();	  int    inputValue    =    input.getEntityValue();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
65	[BUG]  [BUGGY]  int  outputValue  =  input.getEntityValue();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  outputValue  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  outputValue  =  input.getEntityValue();	  int    inputValue    =    input.getEntityValue();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
66	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index),  out.intValue();  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index),  out.intValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index),  out.intValue();	  int    nfe    =    input.getIndex(index).intValue();    	non-compiled	[CE]  ';'  expected	51	None	replace
67	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index,  out).intValue();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index,  out).intValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index,  out).intValue();	  int    nfe    =    input.getIndex(index).intValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
68	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  Integer  seqEnd  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  Integer  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  Integer  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    +    1;    Integer    seqEnd    =    input.length()    +    1;    	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	13	None	replace
69	[BUG]  [BUGGY]  int  inputNumberValue  =  input.getNumberValue();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputNumberValue  =  input.getNumberValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputNumberValue  =  input.getNumberValue();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
70	[BUG]  [BUGGY]  int  inputNumber  =  input.getNumberValue();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputNumber  =  input.getNumberValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputNumber  =  input.getNumberValue();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
71	[BUG]  [BUGGY]  int  input  =  input.getIndex()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex()  -  1;	  int    input    =    input.getIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	45	None	replace
72	[BUG]  [BUGGY]  int  input  =  input.getIndex()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex()  +  1;	  int    input    =    input.getIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	45	None	replace
73	[BUG]  [BUGGY]  int  input  =  input.getIndex()  -  index;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex()  -  index;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex()  -  index;	  int    input    =    input.getIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	45	None	replace
74	[BUG]  [BUGGY]  int  input  =  input.getIndex(index  +  1);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex(index  +  1);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex(index  +  1);	  int    input    =    input.getIndex(index);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	46	None	replace
75	[BUG]  [BUGGY]  int  input  =  input.getIndex(index,  out);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex(index,  out);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex(index,  out);	  int    input    =    input.getIndex(index);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	46	None	replace
76	[BUG]  [BUGGY]  int  input  =  input.getIndex(index  -  1);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex(index  -  1);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex(index  -  1);	  int    input    =    input.getIndex(index);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	46	None	replace
77	[BUG]  [BUGGY]  char  seqEnd  -=  input.length();  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  seqEnd  -=  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  seqEnd  -=  input.length();	  int    seqEnd    -=    input.length()    +    1;    	non-compiled	[CE]  ';'  expected	26	None	replace
78	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  seqStart  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	int  seqEnd  =  input.length();  int  seqStart  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    seqStart    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	2	replace
79	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  int  seqStart  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  int  seqStart  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  int  seqStart  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    seqStart    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	2	replace
80	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  seqStart  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	Integer  seqEnd  =  input.length();  int  seqStart  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    seqStart    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	2	replace
81	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  int  seqStart  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  seqStart  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length();  int  seqStart  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    seqStart    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	2	replace
82	[BUG]  [BUGGY]  String  nfe  =  input.getEntityValue();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  String  nfe  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	String  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
83	[BUG]  [BUGGY]  Char  nfe  =  input.getEntityValue();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Char  nfe  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Char  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
84	[BUG]  [BUGGY]  int  end  =  index  +  4;  [CE]  cannot  find  symbol  seqEnd  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  index  +  4;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  end  =  index  +  4;	  int    end    =    index    +    3;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	18	None	replace
85	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  /  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentValue()  /  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentValue()  /  1;	  Integer    input    =    input.getAscentValue()    +    1;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	32	None	replace
86	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index)+  2;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index)+  2;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index)+  2;	  int    nfe    =    input.getIndex(index)+    1;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
87	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index)/  1;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index)/  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index)/  1;	  int    nfe    =    input.getIndex(index)+    1;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
88	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index  +  1)+  1;  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index  +  1)+  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index  +  1)+  1;	  int    nfe    =    input.getIndex(index)+    1;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
89	[BUG]  [BUGGY]  int  input  =  input.getEntityValue()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getEntityValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getEntityValue()  -  1;	  int    input    =    input.getEntityValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	47	None	replace
90	[BUG]  [BUGGY]  int  input  =  input.getEntryValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getEntryValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getEntryValue();	  int    input    =    input.getEntityValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	47	None	replace
91	[BUG]  [BUGGY]  char  input  =  input.getEntityValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  input  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  input  =  input.getEntityValue();	  int    input    =    input.getEntityValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	47	None	replace
92	[BUG]  [BUGGY]  int  seqEnd  -=  input.length()  *  2  +  1;  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  input.length()  *  2  +  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  input.length()  *  2  +  1;	  int    seqEnd    -=    input.length()    *    2;    	non-compiled	[CE]  ';'  expected	28	None	replace
93	[BUG]  [BUGGY]  int  seqEnd  -=  input.length()  +  2;  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  input.length()  +  2;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  input.length()  +  2;	  int    seqEnd    -=    input.length()    *    2;    	non-compiled	[CE]  ';'  expected	28	None	replace
94	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index  +  1,  out);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index  +  1,  out);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index  +  1,  out);	  int    nfe    =    input.getIndex(index    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
95	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index  +  2);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index  +  2);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index  +  2);	  int    nfe    =    input.getIndex(index    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
96	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index  +  3);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index  +  3);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index  +  3);	  int    nfe    =    input.getIndex(index    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
97	[BUG]  [BUGGY]  int  inputIndex  =  input.getIndex()  -  1;  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.getIndex()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.getIndex()  -  1;	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
98	[BUG]  [BUGGY]  int  inputIndex  =  input.getIndex()  -  index;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.getIndex()  -  index;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.getIndex()  -  index;	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
99	[BUG]  [BUGGY]  int  inputIndex  =  input.indexOf('.');  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.indexOf('.');  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.indexOf('.');	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
100	[BUG]  [BUGGY]  int  input  =  input.getIntValue()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIntValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIntValue()  -  1;	  int    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	1	None	replace
101	[BUG]  [BUGGY]  char  input  =  input.getIntValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  char  input  =  input.getIntValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	char  input  =  input.getIntValue();	  int    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	1	None	replace
102	[BUG]  [BUGGY]  int  input  =  input.getIntValue()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIntValue()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIntValue()  +  1;	  int    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	1	None	replace
103	[BUG]  [BUGGY]  int  seqEnd  -=  input.length()  /  2;  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  input.length()  /  2;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  input.length()  /  2;	  int    seqEnd    -=    input.length()    *    2;    	non-compiled	[CE]  ';'  expected	28	None	replace
104	[BUG]  [BUGGY]  Integer  end  =  input.length();  [CE]  cannot  find  symbol  seqEnd  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  end  =  input.length();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  end  =  input.length();	  int    end    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol  seqEnd	22	None	replace
105	[BUG]  [BUGGY]  int  inputValue  =  output.getIntValue();  [CE]  cannot  find  symbol  output  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputValue  =  output.getIntValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputValue  =  output.getIntValue();	  int    inputValue    =    input.getIntValue();    	non-compiled	[CE]  cannot  find  symbol  output	2	None	replace
106	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAssignedValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAssignedValue();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	25	None	replace
107	[BUG]  [BUGGY]  int  nfe  =  input.getIndex()  /  1;  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex()  /  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex()  /  1;	  int    nfe    =    input.getIndex()    +    1;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
108	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  Int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length();  Int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    Int    seqEnd    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
109	[BUG]  [BUGGY]  int  len  =  input.length();  Int  seqEnd  =  input.length();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  len  =  input.length();  Int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  len  =  input.length();  Int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    Int    seqEnd    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
110	[BUG]  [BUGGY]  int  input  =  input.getIntValue()  -  index;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIntValue()  -  index;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIntValue()  -  index;	  int    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	1	None	replace
111	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqStart  =  input.length();  [CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqStart  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer    seqEnd    =    input.length();    Integer  seqStart  =  input.length();	  	non-compiled	[CE]  variable  seqEnd  is  already  defined  in  method  translate(CharSequence,int,Writer)	58	None	add
112	[BUG]  [BUGGY]  Integer  input  =  output.getIntValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  output.getIntValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  output.getIntValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	23	None	replace
113	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index)-  1;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index)-  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index)-  1;	  int    nfe    =    input.getIndex(index).intValue();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
114	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	add	Integer  seqEnd  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	replace
115	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  int  len  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	2	replace
116	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  *  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentValue()  *  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentValue()  *  1;	  Integer    input    =    input.getAscentValue()    -    1;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	43	None	replace
117	[BUG]  [BUGGY]  int  seqEnd  -=  input.size();  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  input.size();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  input.size();	  int    seqEnd    -=    input.length()    -    1;    	non-compiled	[CE]  ';'  expected	27	None	replace
118	[BUG]  [BUGGY]  int  nfe  =  out.getIndex(index,  input);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  out.getIndex(index,  input);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  out.getIndex(index,  input);	  int    nfe    =    input.getIndex(index,    out);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
119	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex(index);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentIndex(index);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getAscentIndex(index);	  Integer    input    =    input.getAscentIndex();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	31	None	replace
120	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitKey();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getImplicitKey();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getImplicitKey();	  Integer    input    =    input.getImplicitValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,int,Writer)	50	None	replace
121	[BUG]  [BUGGY]  int  input  =  input.getInput();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getInput();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getInput();	  int    input    =    input.getIndex();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
122	[BUG]  [BUGGY]  int  input  =  input.getNumberValue();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getNumberValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getNumberValue();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
123	[BUG]  [BUGGY]  int  inputValue  =  input.getNumberValue();  [CE]  cannot  find  symbol  input  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputValue  =  input.getNumberValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputValue  =  input.getNumberValue();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  cannot  find  symbol  input	53	None	replace
124	[BUG]  [BUGGY]  int  input  =  input.getIndex(index)+  1;  [CE]  illegal  forward  reference  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex(index)+  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex(index)+  1;	  int    nfe    =    input.getIndex(index)+    1;    	non-compiled	[CE]  illegal  forward  reference	6	None	replace
125	[BUG]  [BUGGY]  int  end  =  input.length()  -  start;  [CE]  variable  end  is  already  defined  in  class  NumericEntityUnescaper  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.length()  -  start;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  end  =  input.length()  -  start;	  int    end    =    input.length()    -    index;    	non-compiled	[CE]  variable  end  is  already  defined  in  class  NumericEntityUnescaper	56	None	replace
126	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  +  1;  [CE]  illegal  forward  reference  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getValue()  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getValue()  +  1;	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  illegal  forward  reference	24	None	replace
127	[BUG]  [BUGGY]  int  seqEnd  =  input.lastIndexOf('-')+  1;  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.lastIndexOf('-')+  1;  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.lastIndexOf('-')+  1;	  int    seqEnd    =    input.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
128	[BUG]  [BUGGY]  int  inputIndex  =  output.getIndex();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  output.getIndex();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  output.getIndex();	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
129	[BUG]  [BUGGY]  int  inputIndex  =  input.index;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.index;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.index;	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
130	[BUG]  [BUGGY]  Integer  input  =  input.getInput();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getInput();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getInput();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
131	[BUG]  [BUGGY]  int  input  =  input.getEntity();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getEntity();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getEntity();	  int    input    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
132	[BUG]  [BUGGY]  int  seqEnd  =  input.length();  Integer  seqEnd  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  input.length();  Integer  seqEnd  =  input.charAt(index  +  1);  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  input.length();  Integer  seqEnd  =  input.charAt(index  +  1);	  int    seqEnd    =    input.length()    +    1;    Integer    seqEnd    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  int  seqEnd  =  index  +  2;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  index  +  2;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  index  +  2;	  int    end    =    index    +    2;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
134	[BUG]  [BUGGY]  int  seqStart  =  input.length();  int  len  =  input.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqStart  =  input.length();  int  len  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqStart  =  input.length();  int  len  =  input.length();	  int    seqEnd    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
135	[BUG]  [BUGGY]  int  seqEnd  =  index  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  =  index  +  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  =  index  +  1;	  int    end    =    index    +    1    -    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
136	[BUG]  [BUGGY]  int  start  =  index  +  1  -  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  index  +  1  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  start  =  index  +  1  -  1;	  int    end    =    index    +    1    -    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
137	[BUG]  [BUGGY]  Int  seqEnd  =  input.length();  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Int  seqEnd  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Int  seqEnd  =  input.length();	  int    seqEnd    =    input.length()    -    1;    Int    seqEnd    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
138	[BUG]  [BUGGY]  int  inputIndex  =  input.indexOf('  ');  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.indexOf('  ');  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.indexOf('  ');	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
139	[BUG]  [BUGGY]  int  inputIndex  =  input.indexOf(':');  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.indexOf(':');  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputIndex  =  input.indexOf(':');	  int    inputIndex    =    input.getIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
140	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(index)+  3;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(index)+  3;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(index)+  3;	  int    nfe    =    input.getIndex(index)+    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
141	[BUG]  [BUGGY]  int  input  =  input.getIndex(index).intValue();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getIndex(index).intValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getIndex(index).intValue();	  int    nfe    =    input.getIndex(index).intValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
142	[BUG]  [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqEnd  =  input.length());  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.length();  Integer  seqEnd  =  input.length());  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer    seqEnd    =    input.length();    Integer  seqEnd  =  input.length());	  	non-compiled	[CE]  illegal  start  of  type	58	None	add
143	[BUG]  [BUGGY]  int  inputValue  =  input.getIntValue()  -  index;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputValue  =  input.getIntValue()  -  index;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  inputValue  =  input.getIntValue()  -  index;	  int    inputValue    =    input.getIntValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
144	[BUG]  [BUGGY]  Integer  seqEnd  =  input.getLength();  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  seqEnd  =  input.getLength();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  seqEnd  =  input.getLength();	  Integer    seqEnd    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
145	[BUG]  [BUGGY]  int  start  =  input.length()  +  2;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  input.length()  +  2;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  start  =  input.length()  +  2;	  int    start    =    index    +    2;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
146	[BUG]  [BUGGY]  CharSequence  input  =  input.length();  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  CharSequence  input  =  input.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	CharSequence  input  =  input.length();	  char    seqEnd    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
147	[BUG]  [BUGGY]  int  seqEnd  -=  input.charAt(index  -  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  input.charAt(index  -  1);  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  input.charAt(index  -  1);	  int    seqEnd    -=    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
148	[BUG]  [BUGGY]  int  input  =  input.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getValue()  -  1;  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  input  =  input.getValue()  -  1;	  Integer    input    =    input.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
149	[BUG]  [BUGGY]  int  nfe  =  input.getIndex(input,  index);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  nfe  =  input.getIndex(input,  index);  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  nfe  =  input.getIndex(input,  index);	  int    nfe    =    input.getIndex(index,    out);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
150	[BUG]  [BUGGY]  int  seqEnd  -=  output.length();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  seqEnd  -=  output.length();  [BUGGY]        if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	int  seqEnd  -=  output.length();	  int    seqEnd    -=    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
151	[BUG]  [BUGGY]  Integer  input  =  input.getLongValue();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getLongValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getLongValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
152	[BUG]  [BUGGY]  Integer  input  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntityValue();  [BUGGY]      int  seqEnd  =  input.length();  if(input.charAt(index)  ==  '&'  &&  index  <  seqEnd  -  1  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  seqEnd  start  Writer  out  char[]  chrs  	projects/Lang19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	0.8164965809277261	38	38	2	replace	Integer  input  =  input.getEntityValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
