bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_SINGLE_QUOTED;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_SINGLE_QUOTED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_SINGLE_QUOTED;	  last    =    PEEKED_NULL;    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  last  =  PEEKED_EOF;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_EOF;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_EOF;	  last    =    PEEKED_NULL;    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EOF;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EOF;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EOF;	  last    =    PEEKED_NULL;    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_NUMBER;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_NUMBER;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_NUMBER;	  last    =    PEEKED_NULL;    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_SINGLE_QUOTED_NAME;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_SINGLE_QUOTED_NAME;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_SINGLE_QUOTED_NAME;	  last    =    PEEKED_NULL;    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  last  =  Integer.parseInt(c);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  Integer.parseInt(c);  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  Integer.parseInt(c);	  last    =    0;    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  last  =  Integer.MIN_VALUE;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  Integer.MIN_VALUE;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  Integer.MIN_VALUE;	  last    =    0;    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  last  =  Integer.MAX_VALUE;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  Integer.MAX_VALUE;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  Integer.MAX_VALUE;	  last    =    0;    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_FRACTION_DIGIT  +  c;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_FRACTION_DIGIT  +  c;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_FRACTION_DIGIT  +  c;	  last    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	9	None	replace
10	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_FRACTION_SIGN;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_FRACTION_SIGN;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_FRACTION_SIGN;	  last    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_DECIMAL;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_DECIMAL;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_DECIMAL;	  last    =    NUMBER_CHAR_FRACTION_DIGIT;    	non-compiled	[CE]  	2	None	replace
12	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_NONE;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_NONE;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_NONE;	  last    =    NUMBER_CHAR_FRACTION_DIGIT;    	non-compiled	[CE]  	2	None	replace
13	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_SIGN  +  1;	  last    =    NUMBER_CHAR_FRACTION_DIGIT;    	non-compiled	[CE]  	2	None	replace
14	[BUG]  [BUGGY]  last  =  pos  +  1;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  pos  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  pos  +  1;	  last    =    pos;    	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_ESIGN;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_ESIGN;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_ESIGN;	  last    =    pos;    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_QUOTED;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_QUOTED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_QUOTED;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
17	[BUG]  [BUGGY]  last  =  PEEKED_SINGLE_QUOTED_NAME;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_SINGLE_QUOTED_NAME;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_SINGLE_QUOTED_NAME;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
18	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_QUOTED_NAME;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_QUOTED_NAME;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_QUOTED_NAME;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
19	[BUG]  [BUGGY]  last  =  PEEKED_BUFFERED;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_BUFFERED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_BUFFERED;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
20	[BUG]  [BUGGY]  last  =  c  +  1;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  c  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  c  +  1;	  last    =    c;    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_FALSE  +  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_FALSE  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_FALSE  +  1;	  last    =    NUMBER_CHAR_FALSE;    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;	      	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  last  =  buffer[p  +  i];  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  buffer[p  +  i];  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  buffer[p  +  i];	      	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_SIGN  +  2;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_SIGN  +  2;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_SIGN  +  2;	  last    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_SIGN  -  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_SIGN  -  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_SIGN  -  1;	  last    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	10	None	replace
26	[BUG]  [BUGGY]  last  =  p;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  p;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  p;	  last    =    pos;    	non-compiled	[CE]  	7	None	replace
27	[BUG]  [BUGGY]  last  =  SINGLE_QUOTED_NAME;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  SINGLE_QUOTED_NAME;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  SINGLE_QUOTED_NAME;	  last    =    PEEKED_NONE;    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_LONG;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_LONG;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_LONG;	  last    =    PEEKED_NONE;    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  last  =  SINGLE_QUOTED;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  SINGLE_QUOTED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  SINGLE_QUOTED;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  last  =  PEEKED_SINGLE_QUOTED;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_SINGLE_QUOTED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_SINGLE_QUOTED;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_NAME;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_NAME;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_NAME;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
32	[BUG]  [BUGGY]  last  =  buffer[NUMBER_CHAR_SIGN  +  1];  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  buffer[NUMBER_CHAR_SIGN  +  1];  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  buffer[NUMBER_CHAR_SIGN  +  1];	  last    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  last  =  buffer[pos  +  i];  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  buffer[pos  +  i];  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  buffer[pos  +  i];	      	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  +  i;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  +  i;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_SIGN  +  i;	      	non-compiled	[CE]  	8	None	replace
35	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  l  =  buffer[pos  +  i];  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  l  =  buffer[pos  +  i];  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_SIGN;  l  =  buffer[pos  +  i];	      	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  -  1;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN  -  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_SIGN  -  1;	  last    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  last  =  -1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  -1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  -1;	  last    =    0;    	non-compiled	[CE]  	3	None	replace
38	[BUG]  [BUGGY]  last  =  EOF;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  EOF;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  EOF;	  last    =    PEEKED_NONE;    	non-compiled	[CE]  	5	None	replace
39	[BUG]  [BUGGY]  last  =  p  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  p  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  p  +  1;	  last    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	10	None	replace
40	[BUG]  [BUGGY]  last  =  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_DOUBLE_QUOTED;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_DOUBLE_QUOTED;	  last    =    PEEKED_UNQUOTED;    	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  last  =  l;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  l;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  l;	  last    =    pos;    	non-compiled	[CE]  	7	None	replace
42	[BUG]  [BUGGY]  last  =  i;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  i;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  i;	  last    =    pos;    	non-compiled	[CE]  	7	None	replace
43	[BUG]  [BUGGY]  last  =  PEEKED_LONG;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  PEEKED_LONG;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  PEEKED_LONG;	  last    =    0;    	non-compiled	[CE]  	3	None	replace
44	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }	      	non-compiled	[CE]  	8	None	replace
45	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  }  [CE]  empty  character  literal  [FE]                        ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_SIGN;  }	      	non-compiled	[CE]  empty  character  literal	8	None	replace
46	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  [CE]  empty  character  literal  [FE]                          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }	      	non-compiled	[CE]  empty  character  literal	8	None	replace
47	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [CE]  empty  character  literal  [FE]                            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }	      	non-compiled	[CE]  empty  character  literal	8	None	replace
48	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [CE]  empty  character  literal  [FE]                              ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }	      	non-compiled	[CE]  empty  character  literal	8	None	replace
49	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  continue;  }  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  continue;  }  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	if(c  ==  '.')  {  if(last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  continue;  }	      	non-compiled	[CE]  	8	None	replace
50	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_FRACTION_DIGIT  +  1;  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_FRACTION_DIGIT  +  1;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_FRACTION_DIGIT  +  1;	  last    =    NUMBER_CHAR_FRACTION_DIGIT;    	non-compiled	[CE]  empty  character  literal	2	None	replace
51	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_DIGIT;  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':  if  (last  ==  NUMBER_CHAR_NONE)  {  negative  =  true;    [BUGGY]  last  =  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]    continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	last  =  NUMBER_CHAR_EXP_DIGIT;	  last    =    NUMBER_CHAR_FRACTION_DIGIT;    	non-compiled	[CE]  empty  character  literal	2	None	replace
