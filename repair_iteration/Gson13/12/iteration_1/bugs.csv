bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  PEEKED_UNQUOTED;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_UNQUOTED;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_UNQUOTED;	return  result;  	non-compiled	[CE]  	23	None	replace
2	[BUG]  [BUGGY]  return  PEEKED_NULL;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_NULL;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_NULL;	return  result;  	non-compiled	[CE]  	23	None	replace
3	[BUG]  [BUGGY]  return  PEEKED_SINGLE_QUOTED;  [CE]  [FE]        ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_SINGLE_QUOTED;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_SINGLE_QUOTED;	return  result;  	non-compiled	[CE]  	23	None	replace
4	[BUG]  [BUGGY]  return  PEEKED_LONG;  [CE]  [FE]          ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_LONG;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_LONG;	return  result;  	non-compiled	[CE]  	23	None	replace
5	[BUG]  [BUGGY]  return  PEEKED_NUMBER;  [CE]  [FE]            ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_NUMBER;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_NUMBER;	return  result;  	non-compiled	[CE]  	23	None	replace
6	[BUG]  [BUGGY]  return  PEEKED_BUFFERED;  [CE]  [FE]              ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_BUFFERED;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_BUFFERED;	return  result;  	non-compiled	[CE]  	23	None	replace
7	[BUG]  [BUGGY]  return  result  +  PEEKED_SINGLE_QUOTED;  [CE]  [FE]                ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  result  +  PEEKED_SINGLE_QUOTED;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  result  +  PEEKED_SINGLE_QUOTED;	return  result;  	non-compiled	[CE]  	23	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]    [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	  	return  result;  	non-compiled	[CE]  	23	None	replace
9	[BUG]  [BUGGY]  return  result  +  PEEKED_UNQUOTED;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  result  +  PEEKED_UNQUOTED;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  result  +  PEEKED_UNQUOTED;	return  result;  	non-compiled	[CE]  	23	None	replace
10	[BUG]  [BUGGY]  return  PEEKED_NONE;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_NONE;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_NONE;	return  result;  	non-compiled	[CE]  	23	None	replace
11	[BUG]  [BUGGY]  return  NON_EXECIMAL;  [CE]  [FE]        ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  NON_EXECIMAL;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  NON_EXECIMAL;	return  result;  	non-compiled	[CE]  	23	None	replace
12	[BUG]  [BUGGY]  return  PEEKED_BOOLEAN;  [CE]  [FE]          ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_BOOLEAN;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_BOOLEAN;	return  result;  	non-compiled	[CE]  	23	None	replace
13	[BUG]  [BUGGY]  return  PEEKED_EOF;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  [BUGGY]  return  PEEKED_EOF;  [BUGGY]  }  if  (!isLiteral(buffer[pos]))  {  throw  syntaxError( "Expected  value ");  }  checkLenient();  return  peeked  =  PEEKED_UNQUOTED;  }  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	return  PEEKED_EOF;	return  result;  	non-compiled	[CE]  	23	None	replace
