bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  negative;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  negative;	  peekedLong    =    value?    -peekedNumber    :    negative;    	non-compiled	[CE]  	83	None	replace
2	[BUG]  [BUGGY]  peekedLong  =  negative?  -peekedNumber  :  value;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -peekedNumber  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -peekedNumber  :  value;	  peekedLong    =    value?    -peekedNumber    :    negative;    	non-compiled	[CE]  	83	None	replace
3	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumber  :  PEEKED_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumber  :  PEEKED_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumber  :  PEEKED_LONG;	  peekedLong    =    value?    -peekedNumber    :    negative;    	non-compiled	[CE]  	83	None	replace
4	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  Long.MIN_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  Long.MIN_VALUE;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
5	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_NONE;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
6	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  value.longValue();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  value.longValue();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  value.longValue();	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
7	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
8	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  PEEKED_NUMBER;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  PEEKED_NUMBER;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  PEEKED_NUMBER;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
9	[BUG]  [BUGGY]  peekedLong  =  value?  last  :  -peekedLong;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  :  -peekedLong;	  peekedLong    =    i?    value    :    -peekedLong;    	non-compiled	[CE]  	103	None	replace
10	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -peekedLong;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -peekedLong;	  peekedLong    =    i?    value    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	103	None	replace
11	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedLong  :  i;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedLong  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedLong  :  i;	  peekedLong    =    i?    value    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	103	None	replace
12	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  Long.MIN_VALUE;	  peekedLong    =    -negative?    value    :    Long.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	11	None	replace
13	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MIN_VALUE;	  peekedLong    =    -negative?    value    :    Long.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	11	None	replace
14	[BUG]  [BUGGY]  peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MIN_VALUE;	  peekedLong    =    -negative?    value    :    Long.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	11	None	replace
15	[BUG]  [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  0;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  0;	  peekedLong    =    value?    MIN_INCOMPLETE_INTEGER    :    -1;    	non-compiled	[CE]  not  a  statement	49	None	replace
16	[BUG]  [BUGGY]  peekedLong  =  last?  MIN_INCOMPLETE_INTEGER  :  -1;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  MIN_INCOMPLETE_INTEGER  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  MIN_INCOMPLETE_INTEGER  :  -1;	  peekedLong    =    value?    MIN_INCOMPLETE_INTEGER    :    -1;    	non-compiled	[CE]  not  a  statement	49	None	replace
17	[BUG]  [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  Integer.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  Integer.MAX_VALUE;	  peekedLong    =    value?    MIN_INCOMPLETE_INTEGER    :    -1;    	non-compiled	[CE]  not  a  statement	49	None	replace
18	[BUG]  [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  1;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  1;	  peekedLong    =    value?    MIN_INCOMPLETE_INTEGER    :    -1;    	non-compiled	[CE]  not  a  statement	49	None	replace
19	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  0;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  0;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  not  a  statement	80	None	replace
20	[BUG]  [BUGGY]  peekedLong  =  last?  PEEKED_LONG  :  -1;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  PEEKED_LONG  :  -1;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  not  a  statement	80	None	replace
21	[BUG]  [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -1;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  PEEKED_LONG  :  -1;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  not  a  statement	80	None	replace
22	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  1;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  1;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  not  a  statement	80	None	replace
23	[BUG]  [BUGGY]  peekedLong  =  last?  -1  :  -1;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -1  :  -1;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  not  a  statement	51	None	replace
24	[BUG]  [BUGGY]  peekedLong  =  value?  1  :  -1;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  1  :  -1;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  not  a  statement	51	None	replace
25	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  0;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  0;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  not  a  statement	51	None	replace
26	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  1;  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  1;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  not  a  statement	51	None	replace
27	[BUG]  [BUGGY]  peekedLong  =  i?  -1  :  -1;  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -1  :  -1;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  not  a  statement	51	None	replace
28	[BUG]  [BUGGY]  peekedLong  =  value?  last  :  -peeked;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  :  -peeked;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  :  -peeked;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  not  a  statement	104	None	replace
29	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -peeked;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -peeked;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -peeked;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  not  a  statement	104	None	replace
30	[BUG]  [BUGGY]  peekedLong  =  last?  value  :  -peeked;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  value  :  -peeked;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  value  :  -peeked;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  not  a  statement	104	None	replace
31	[BUG]  [BUGGY]  peekedLong  =  value?  -peeked  :  i;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peeked  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peeked  :  i;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  not  a  statement	104	None	replace
32	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathNames[i]);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathNames[i]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathNames[i]);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  not  a  statement	99	None	replace
33	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[0]);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[0]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[0]);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  not  a  statement	99	None	replace
34	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  -  1);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  -  1);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[i]  -  1);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  not  a  statement	99	None	replace
35	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  +  1);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  +  1);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[i]  +  1);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  not  a  statement	99	None	replace
36	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i],  value);  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i],  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[i],  value);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  not  a  statement	99	None	replace
37	[BUG]  [BUGGY]  peekedLong  =  last?  i  :  -1;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  i  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  i  :  -1;	  peekedLong    =    last?    value    :    -1;    	non-compiled	[CE]  not  a  statement	1	None	replace
38	[BUG]  [BUGGY]  peekedLong  =  last?  value  :  0;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  value  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  value  :  0;	  peekedLong    =    last?    value    :    -1;    	non-compiled	[CE]  not  a  statement	1	None	replace
39	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  NUMBER_CHAR_DIGIT;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  not  a  statement	91	None	replace
40	[BUG]  [BUGGY]  peekedLong  =  last?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -peekedLong  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  not  a  statement	91	None	replace
41	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  NUMBER_CHAR_DIGIT?  -peekedLong  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  not  a  statement	91	None	replace
42	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_SIGN;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_SIGN;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  not  a  statement	91	None	replace
43	[BUG]  [BUGGY]  peekedLong  =  lenient?  last  :  -1;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  last  :  -1;	  peekedLong    =    lenient?    negative    :    -1;    	non-compiled	[CE]  not  a  statement	78	None	replace
44	[BUG]  [BUGGY]  peekedLong  =  value?  pos  :  -1;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  pos  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  pos  :  -1;	  peekedLong    =    value?    i    :    -1;    	non-compiled	[CE]  not  a  statement	93	None	replace
45	[BUG]  [BUGGY]  peekedLong  =  value?  i  :  0;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  i  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  i  :  0;	  peekedLong    =    value?    i    :    -1;    	non-compiled	[CE]  not  a  statement	93	None	replace
46	[BUG]  [BUGGY]  peekedLong  =  value?  0  :  -1;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  0  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  0  :  -1;	  peekedLong    =    value?    i    :    -1;    	non-compiled	[CE]  not  a  statement	93	None	replace
47	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BUFFERED;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BUFFERED;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BUFFERED;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE_QUOTED;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE_QUOTED;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE_QUOTED;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BOOLEAN;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BOOLEAN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_BOOLEAN;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_NUMBER;  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_NUMBER;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_NUMBER;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
51	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE;  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_DOUBLE;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
52	[BUG]  [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -negative;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -negative;	  peekedLong    =    value?    lenient    :    -negative;    	non-compiled	[CE]  not  a  statement	66	None	replace
53	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  -1;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  -1;	  peekedLong    =    value?    lenient    :    -negative;    	non-compiled	[CE]  not  a  statement	66	None	replace
54	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -1;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -1;	  peekedLong    =    i?    value    :    -1;    	non-compiled	[CE]  not  a  statement	17	None	replace
55	[BUG]  [BUGGY]  int  pos  =(int)Math.rint(pathNames[i]);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.rint(pathNames[i]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.rint(pathNames[i]);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
56	[BUG]  [BUGGY]  int  pos  =(int)Math.rint(peekedNumberLength);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.rint(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.rint(peekedNumberLength);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
57	[BUG]  [BUGGY]  int  pos  =(int)Math.rint(pathNames[value]);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.rint(pathNames[value]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.rint(pathNames[value]);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
58	[BUG]  [BUGGY]  char  pos  =(char)Math.rint(value);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  char  pos  =(char)Math.rint(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	char  pos  =(char)Math.rint(value);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
59	[BUG]  [BUGGY]  int  pos  =(int)Math.rint(pathNames[0],  value);  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.rint(pathNames[0],  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.rint(pathNames[0],  value);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
60	[BUG]  [BUGGY]  float  pos  =(float)Math.rint(value);  [CE]  not  a  statement  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  float  pos  =(float)Math.rint(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	float  pos  =(float)Math.rint(value);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  not  a  statement	28	None	replace
61	[BUG]  [BUGGY]  peekedLong  =  last?  -value  :  -1;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -value  :  -1;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  not  a  statement	3	None	replace
62	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -value;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -value;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  -value;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  -value;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  not  a  statement	3	None	replace
64	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  -pos;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  -pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  -pos;	  peekedLong    =    -negative?    value    :    -pos;    	non-compiled	[CE]  not  a  statement	95	None	replace
65	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  -1;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  -1;	  peekedLong    =    -negative?    last    :    -value;    	non-compiled	[CE]  not  a  statement	9	None	replace
66	[BUG]  [BUGGY]  peekedLong  =  -1?  last  :  -1;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  last  :  -1;	  peekedLong    =    -negative?    last    :    -value;    	non-compiled	[CE]  not  a  statement	9	None	replace
67	[BUG]  [BUGGY]  peekedLong  =  last?  -value  :  -negative;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -value  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -value  :  -negative;	  peekedLong    =    last?    -negative    :    -value;    	non-compiled	[CE]  not  a  statement	55	None	replace
68	[BUG]  [BUGGY]  peekedLong  =  last?  -1  :  -value;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -1  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -1  :  -value;	  peekedLong    =    last?    -negative    :    -value;    	non-compiled	[CE]  not  a  statement	55	None	replace
69	[BUG]  [BUGGY]  peekedLong  =  last?  -negative  :  -1;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -negative  :  -1;	  peekedLong    =    last?    -negative    :    -value;    	non-compiled	[CE]  not  a  statement	55	None	replace
70	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_LONG;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  not  a  statement	88	None	replace
71	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_LONG;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  not  a  statement	88	None	replace
72	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	88	None	replace
73	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	88	None	replace
74	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  -peekedNumber;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  -peekedNumber;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  	96	None	replace
75	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -peekedNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -peekedNumberLength;	  peekedLong    =    -value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	44	None	replace
76	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumberLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumberLength;	  peekedLong    =    -value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	44	None	replace
77	[BUG]  [BUGGY]  peekedLong  =  -value?  negative  :  -1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  negative  :  -1;	  peekedLong    =    -value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	44	None	replace
78	[BUG]  [BUGGY]  peekedLong  =  -i?  negative  :  -value;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  negative  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  negative  :  -value;	  peekedLong    =    i?    negative    :    -value;    	non-compiled	[CE]  	68	None	replace
79	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  2;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  2;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
80	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
81	[BUG]  [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
82	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  3;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  3;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  3;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
83	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  Integer.MIN_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  Integer.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  Integer.MIN_VALUE;	  peekedLong    =    -value?    value    :    value;    	non-compiled	[CE]  	106	None	replace
84	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  value;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MIN_VALUE  :  value;	  peekedLong    =    -value?    value    :    value;    	non-compiled	[CE]  	106	None	replace
85	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  Integer.MAX_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  Integer.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  Integer.MAX_VALUE;	  peekedLong    =    -value?    value    :    value;    	non-compiled	[CE]  	106	None	replace
86	[BUG]  [BUGGY]  peekedLong  =  last?  negative  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  negative  :  -1;	  peekedLong    =    i?    negative    :    -1;    	non-compiled	[CE]  	92	None	replace
87	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  0;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  0;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  	89	None	replace
88	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  	89	None	replace
89	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  -1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  -1;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  	89	None	replace
90	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  i;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  i;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  	89	None	replace
91	[BUG]  [BUGGY]  peekedLong  =  value?  -i  :  -value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -i  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -i  :  -value;	  peekedLong    =    value?    i    :    -value;    	non-compiled	[CE]  	14	None	replace
92	[BUG]  [BUGGY]  peekedLong  =  last?  i  :  -value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  i  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  i  :  -value;	  peekedLong    =    value?    i    :    -value;    	non-compiled	[CE]  	14	None	replace
93	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  Long.MAX_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
94	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MAX_VALUE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MIN_VALUE  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
95	[BUG]  [BUGGY]  peekedLong  =  -value?  null  :  Long.MAX_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  null  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  null  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
96	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  Long.MAX_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
97	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  Long.MAX_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
98	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MIN_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MIN_VALUE;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
99	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
100	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_NONE;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
101	[BUG]  [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_DIGIT  :  value;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_DIGIT  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  NUMBER_CHAR_DIGIT  :  value;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
102	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  value;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_NONE  :  value;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
103	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MAX_VALUE;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  Long.MAX_VALUE;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  	41	None	replace
104	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  i;	  peekedLong    =    -value?    value    :    i;    	non-compiled	[CE]  	74	None	replace
105	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  i;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MIN_VALUE  :  i;	  peekedLong    =    -value?    value    :    i;    	non-compiled	[CE]  	74	None	replace
106	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  i;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  i;	  peekedLong    =    -value?    value    :    i;    	non-compiled	[CE]  	74	None	replace
107	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_LONG  :  0;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_LONG  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_LONG  :  0;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  	81	None	replace
108	[BUG]  [BUGGY]  peekedLong  =  last?  NUMBER_CHAR_LONG  :  -1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  NUMBER_CHAR_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  NUMBER_CHAR_LONG  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  	81	None	replace
109	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_LONG?  value  :  -1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  NUMBER_CHAR_LONG?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  NUMBER_CHAR_LONG?  value  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  	81	None	replace
110	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MAX_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MAX_VALUE;	  peekedLong    =    -value?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  	6	None	replace
111	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MIN_VALUE;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MIN_VALUE;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
112	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_SIGN;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
113	[BUG]  [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_LONG  :  value;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_LONG  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  NUMBER_CHAR_LONG  :  value;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
114	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  PEEKED_NUMBER;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  PEEKED_NUMBER;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  PEEKED_NUMBER;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
115	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_NONE;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
116	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  value;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  value;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  empty  character  literal	72	None	replace
117	[BUG]  [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Integer  pos  =  pathIndices.size();  peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  empty  character  literal	72	None	replace
118	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  +=  i;  [CE]  empty  character  literal  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  +=  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  +=  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  empty  character  literal	72	None	replace
119	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  PEEKED_LONG;  [CE]  empty  character  literal  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  PEEKED_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  PEEKED_LONG;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  empty  character  literal	72	None	replace
120	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  0;  [CE]  empty  character  literal  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  0;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  empty  character  literal	72	None	replace
121	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -negativeNumberLength;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  -negativeNumberLength;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumberLength;    	non-compiled	[CE]  empty  character  literal	86	None	replace
122	[BUG]  [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedNumberLength;  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  PEEKED_LONG  :  -peekedNumberLength;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumberLength;    	non-compiled	[CE]  empty  character  literal	86	None	replace
123	[BUG]  [BUGGY]  peekedLong  =  value  -  last;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  last;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  empty  character  literal	77	None	replace
124	[BUG]  [BUGGY]  peekedLong  =  value  :  -1;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  :  -1;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	77	None	replace
125	[BUG]  [BUGGY]  peekedLong  =  value  -  negative;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  negative;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	77	None	replace
126	[BUG]  [BUGGY]  peekedLong  =  value  -  peekedNumber;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  peekedNumber;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	77	None	replace
127	[BUG]  [BUGGY]  peekedLong  =  value  -  bufferNumber;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  bufferNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  bufferNumber;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	77	None	replace
128	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  last  :  -1;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  NUMBER_CHAR_DIGIT?  last  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  not  a  statement	19	None	replace
129	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_SIGN?  value  :  -1;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  NUMBER_CHAR_SIGN?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  NUMBER_CHAR_SIGN?  value  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  not  a  statement	19	None	replace
130	[BUG]  [BUGGY]  peekedLong  =  last?  NUMBER_CHAR_DIGIT  :  -1;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  NUMBER_CHAR_DIGIT  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  NUMBER_CHAR_DIGIT  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  not  a  statement	19	None	replace
131	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_SIGN;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  not  a  statement	4	None	replace
132	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_NONE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  not  a  statement	4	None	replace
133	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  PEEKED_NUMBER;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  PEEKED_NUMBER;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  PEEKED_NUMBER;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  not  a  statement	4	None	replace
134	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  null;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  null;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  null;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  not  a  statement	4	None	replace
135	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_DIGIT;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  not  a  statement	4	None	replace
136	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -peekedNumberLength;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -peekedNumberLength;	  peekedLong    =    i?    last    :    -value;    	non-compiled	[CE]  not  a  statement	16	None	replace
137	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -peekedNumber;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -peekedNumber;	  peekedLong    =    i?    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	84	None	replace
138	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -peekedNumber;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -peekedNumber;	  peekedLong    =    i?    value    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	84	None	replace
139	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  last;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  last;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  not  a  statement	58	None	replace
140	[BUG]  [BUGGY]  peekedLong  =  last?  -negative  :  value;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -negative  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -negative  :  value;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  not  a  statement	58	None	replace
141	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  Long.MIN_VALUE;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  not  a  statement	58	None	replace
142	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  last.longValue;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  last.longValue;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  last.longValue;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  not  a  statement	58	None	replace
143	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -negative;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -negative;	  peekedLong    =    -value?    value    :    -negative;    	non-compiled	[CE]  not  a  statement	65	None	replace
144	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  -negative;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  -negative;	  peekedLong    =    -value?    value    :    -negative;    	non-compiled	[CE]  not  a  statement	65	None	replace
145	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -peekedNumberLength;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -peekedNumberLength;	  peekedLong    =    value?    -1    :    -negative;    	non-compiled	[CE]  not  a  statement	22	None	replace
146	[BUG]  [BUGGY]  peekedLong  =  last?  -1  :  -negative;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -1  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -1  :  -negative;	  peekedLong    =    value?    -1    :    -negative;    	non-compiled	[CE]  not  a  statement	22	None	replace
147	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -2;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -2;	  peekedLong    =    value?    -1    :    -negative;    	non-compiled	[CE]  	22	None	replace
148	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  Long.MIN_VALUE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  Long.MIN_VALUE;	  peekedLong    =    -value?    negative    :    Long.MIN_VALUE;    	non-compiled	[CE]  	39	None	replace
149	[BUG]  [BUGGY]  peekedLong  =  -value?  null  :  Long.MIN_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  null  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  null  :  Long.MIN_VALUE;	  peekedLong    =    -value?    negative    :    Long.MIN_VALUE;    	non-compiled	[CE]  	39	None	replace
150	[BUG]  [BUGGY]  peekedLong  =  -1?  negative  :  Long.MIN_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  negative  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  negative  :  Long.MIN_VALUE;	  peekedLong    =    -value?    negative    :    Long.MIN_VALUE;    	non-compiled	[CE]  	39	None	replace
151	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -peekedLong;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -peekedLong;	  peekedLong    =    -value?    value    :    -peekedLong;    	non-compiled	[CE]  	105	None	replace
152	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedLong;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -peekedLong;	  peekedLong    =    -value?    value    :    -peekedLong;    	non-compiled	[CE]  	105	None	replace
153	[BUG]  [BUGGY]  peekedLong  =  value?  last  :  -peekedNumberLength;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  :  -peekedNumberLength;	  peekedLong    =    negative?    last    :    -peekedNumberLength;    	non-compiled	[CE]  	46	None	replace
154	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  -peekedNumberLength;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  -peekedNumberLength;	  peekedLong    =    negative?    last    :    -peekedNumberLength;    	non-compiled	[CE]  	46	None	replace
155	[BUG]  [BUGGY]  peekedLong  =  last?  negative  :  -peekedNumberLength;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  negative  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  negative  :  -peekedNumberLength;	  peekedLong    =    negative?    last    :    -peekedNumberLength;    	non-compiled	[CE]  	46	None	replace
156	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	8	None	replace
157	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	8	None	replace
158	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	8	None	replace
159	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -1;	  peekedLong    =    -value?    last    :    -negative;    	non-compiled	[CE]  	102	None	replace
160	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -2;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -2;	  peekedLong    =    -value?    last    :    -negative;    	non-compiled	[CE]  not  a  statement	102	None	replace
161	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  0;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  0;	  peekedLong    =    -value?    last    :    -negative;    	non-compiled	[CE]  not  a  statement	102	None	replace
162	[BUG]  [BUGGY]  peekedLong  =  last?  PEEKED_LONG  :  -peekedLong;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  PEEKED_LONG  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  PEEKED_LONG  :  -peekedLong;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	90	None	replace
163	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  1;	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  	26	None	replace
164	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  +  1;	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  	26	None	replace
165	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  2;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  2;	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  	26	None	replace
166	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  4;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  4;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  4;	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  	26	None	replace
167	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  3;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  3;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  3;	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  	26	None	replace
168	[BUG]  [BUGGY]  peekedLong  =  i  -  negativeNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  negativeNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
169	[BUG]  [BUGGY]  peekedLong  =  pos  -  negativeNumberLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos  -  negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos  -  negativeNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
170	[BUG]  [BUGGY]  peekedLong  =  value  /  negativeNumberLength;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  /  negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  /  negativeNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
171	[BUG]  [BUGGY]  peekedLong  =  last  -  negativeNumberLength;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last  -  negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last  -  negativeNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
172	[BUG]  [BUGGY]  peekedLong  =  value  -  PEEKED_NUMBER;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  PEEKED_NUMBER;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  PEEKED_NUMBER;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
173	[BUG]  [BUGGY]  peekedLong  =  value  -  PEEKED_MIN_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  PEEKED_MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  PEEKED_MIN_VALUE;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
174	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  -peekedLong;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  -peekedLong;	  peekedLong    =    value?    negative    :    -peekedLong;    	non-compiled	[CE]  	53	None	replace
175	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -peekedLong;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -peekedLong;	  peekedLong    =    value?    negative    :    -peekedLong;    	non-compiled	[CE]  	53	None	replace
176	[BUG]  [BUGGY]  peekedLong  =  negative?  -peekedNumberLength  :  value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -peekedNumberLength  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -peekedNumberLength  :  value;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  	87	None	replace
177	[BUG]  [BUGGY]  peekedLong  =  -value?  -peekedNumberLength  :  negative;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  -peekedNumberLength  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  -peekedNumberLength  :  negative;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  not  a  statement	87	None	replace
178	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  i;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumberLength  :  i;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  not  a  statement	87	None	replace
179	[BUG]  [BUGGY]  peekedLong  =  last?  lenient  :  -1;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  lenient  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  lenient  :  -1;	  peekedLong    =    value?    lenient    :    -1;    	non-compiled	[CE]  not  a  statement	50	None	replace
180	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  value;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  value;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  not  a  statement	13	None	replace
181	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  Long.MIN_VALUE;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  not  a  statement	13	None	replace
182	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  i;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  i;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  not  a  statement	13	None	replace
183	[BUG]  [BUGGY]  peekedLong  =  last?  -value  :  i;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -value  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -value  :  i;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  not  a  statement	13	None	replace
184	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  NUMBER_CHAR_SIGN;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  NUMBER_CHAR_SIGN;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  not  a  statement	13	None	replace
185	[BUG]  [BUGGY]  peekedLong  =  value?  last  :  -negativeNumber;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  :  -negativeNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  :  -negativeNumber;	  peekedLong    =    value?    last    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	85	None	replace
186	[BUG]  [BUGGY]  peekedLong  =  last?  value  :  -peekedNumber;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  value  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  value  :  -peekedNumber;	  peekedLong    =    value?    last    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	85	None	replace
187	[BUG]  [BUGGY]  peekedLong  =  -1;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1;	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
188	[BUG]  [BUGGY]  peekedLong  =  -peekedNumberLength;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -peekedNumberLength;	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
189	[BUG]  [BUGGY]  peekedLong  =  -value.longValue();  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value.longValue();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value.longValue();	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
190	[BUG]  [BUGGY]  peekedLong  =  -i;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i;	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
191	[BUG]  [BUGGY]  peekedLong  =  -peekedLong;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -peekedLong;	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
192	[BUG]  [BUGGY]  peekedLong  =  -value.longValue;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value.longValue;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value.longValue;	  peekedLong    =    -value;    	non-compiled	[CE]  not  a  statement	70	None	replace
193	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(value,  peekedNumberLength);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(value,  peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(value,  peekedNumberLength);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  not  a  statement	29	None	replace
194	[BUG]  [BUGGY]  char  pos  =(char)Math.ceil(peekedNumberLength,  value);  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  char  pos  =(char)Math.ceil(peekedNumberLength,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	char  pos  =(char)Math.ceil(peekedNumberLength,  value);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  not  a  statement	29	None	replace
195	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(value,  value);  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(value,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(value,  value);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  not  a  statement	29	None	replace
196	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(value,  peeredNumberLength);  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(value,  peeredNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(value,  peeredNumberLength);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  not  a  statement	29	None	replace
197	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(peekedNumber,  value);  [CE]  not  a  statement  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(peekedNumber,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(peekedNumber,  value);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  not  a  statement	29	None	replace
198	[BUG]  [BUGGY]  peekedLong  =  i?  -negative  :  value;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -negative  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -negative  :  value;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  not  a  statement	20	None	replace
199	[BUG]  [BUGGY]  peekedLong  =  value?  -negatedNumberLength  :  i;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negatedNumberLength  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negatedNumberLength  :  i;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  not  a  statement	20	None	replace
200	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  -peekedNumber;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  -peekedNumber;	  peekedLong    =    value?    negative    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	24	None	replace
201	[BUG]  [BUGGY]  peekedLong  =  value?  negative  :  -negative;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  negative  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  negative  :  -negative;	  peekedLong    =    negative?    value    :    -negative;    	non-compiled	[CE]  not  a  statement	57	None	replace
202	[BUG]  [BUGGY]  peekedLong  =  negative?  last  :  -negative;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  last  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  last  :  -negative;	  peekedLong    =    negative?    value    :    -negative;    	non-compiled	[CE]  not  a  statement	57	None	replace
203	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  -negative;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  -negative;	  peekedLong    =    negative?    value    :    -negative;    	non-compiled	[CE]  not  a  statement	57	None	replace
204	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  lenient;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  not  a  statement	67	None	replace
205	[BUG]  [BUGGY]  peekedLong  =  last?  -value  :  lenient;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -value  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -value  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  not  a  statement	67	None	replace
206	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  Long.MAX_VALUE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  Long.MAX_VALUE;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  not  a  statement	67	None	replace
207	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  lenient;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  not  a  statement	67	None	replace
208	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  -peekedNumberLength;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  -peekedNumberLength;	  peekedLong    =    -value?    value    :    -peekedNumberLength;    	non-compiled	[CE]  not  a  statement	45	None	replace
209	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  -negativeNumberLength;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  -negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  -negativeNumberLength;	  peekedLong    =    -value?    value    :    -peekedNumberLength;    	non-compiled	[CE]  not  a  statement	45	None	replace
210	[BUG]  [BUGGY]  int  pos  =(int)Math.floor(peekedNumberLength);  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.floor(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.floor(peekedNumberLength);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	27	None	replace
211	[BUG]  [BUGGY]  int  pos  =(int)Math.floor(pathNames[i]);  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.floor(pathNames[i]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.floor(pathNames[i]);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  not  a  statement	27	None	replace
212	[BUG]  [BUGGY]  int  pos  =(int)Math.floor(pathNames[value]);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.floor(pathNames[value]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.floor(pathNames[value]);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  	27	None	replace
213	[BUG]  [BUGGY]  char  pos  =(char)Math.floor(value);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  char  pos  =(char)Math.floor(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	char  pos  =(char)Math.floor(value);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  	27	None	replace
214	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(value);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(value);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  	27	None	replace
215	[BUG]  [BUGGY]  float  pos  =(float)Math.floor(value);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  float  pos  =(float)Math.floor(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	float  pos  =(float)Math.floor(value);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  	27	None	replace
216	[BUG]  [BUGGY]  peekedLong  =  last?  lenient  :  -value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  lenient  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  lenient  :  -value;	  peekedLong    =    lenient?    last    :    -value;    	non-compiled	[CE]  	56	None	replace
217	[BUG]  [BUGGY]  peekedLong  =  last?  -value  :  -lenient;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  -value  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  -value  :  -lenient;	  peekedLong    =    lenient?    last    :    -value;    	non-compiled	[CE]  	56	None	replace
218	[BUG]  [BUGGY]  peekedLong  =  negative?  -value  :  value;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -value  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -value  :  value;	  peekedLong    =    value?    -value    :    negative;    	non-compiled	[CE]  	48	None	replace
219	[BUG]  [BUGGY]  peekedLong  =  negative?  -peekedLong  :  value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -peekedLong  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -peekedLong  :  value;	  peekedLong    =    value?    -peekedLong    :    negative;    	non-compiled	[CE]  	60	None	replace
220	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_NONE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
221	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  Long.MIN_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  Long.MIN_VALUE;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
222	[BUG]  [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_EXP_SIGN  :  value;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  NUMBER_CHAR_EXP_SIGN  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  NUMBER_CHAR_EXP_SIGN  :  value;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
223	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
224	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  2];  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  2];  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  2];	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  	73	None	replace
225	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  1]  +  1;	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  	73	None	replace
226	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1].length;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1].length;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  1].length;	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  	73	None	replace
227	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  3];  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  3];  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  3];	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  	73	None	replace
228	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  Integer.MIN_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  Integer.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  Integer.MIN_VALUE;	  peekedLong    =    -value?    last    :    value;    	non-compiled	[CE]  	38	None	replace
229	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  value.longValue();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  value.longValue();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  value.longValue();	  peekedLong    =    -value?    last    :    value;    	non-compiled	[CE]  	38	None	replace
230	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  value  -  1);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  value  -  1);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  value  -  1);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
231	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  negative);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  negative);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  negative);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
232	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  value  +  1);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  value  +  1);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  value  +  1);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
233	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  value  *  Long.MIN_VALUE);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  value  *  Long.MIN_VALUE);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  value  *  Long.MIN_VALUE);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
234	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  NUMBER_CHAR_SIGN);  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  NUMBER_CHAR_SIGN);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  NUMBER_CHAR_SIGN);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
235	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  long.MIN_VALUE);  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  long.MIN_VALUE);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  long.MIN_VALUE);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
236	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  size);  [CE]  [FE]                                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  size);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  size);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
237	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathNames[pos]);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathNames[pos]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathNames[pos]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
238	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[peekedNumber]);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[peekedNumber]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[peekedNumber]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
239	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[pos  +  1]);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[pos  +  1]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[pos  +  1]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
240	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[peekedNumberLength]);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[peekedNumberLength]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[peekedNumberLength]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
241	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[pos]  -  1);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[pos]  -  1);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[pos]  -  1);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
242	[BUG]  [BUGGY]  peekedLong  =  -1  -negative?  value  :  -1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1  -negative?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1  -negative?  value  :  -1;	  peekedLong    =    -negative?    value    :    -1;    	non-compiled	[CE]  	10	None	replace
243	[BUG]  [BUGGY]  peekedLong  =  last  :  -peekedLong;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last  :  -peekedLong;	  peekedLong    =    value    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	59	None	replace
244	[BUG]  [BUGGY]  peekedLong  =  value  -  peekedLong;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  peekedLong;	  peekedLong    =    value    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	59	None	replace
245	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  -negative;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  -negative;	  peekedLong    =    value?    -negative    :    -value;    	non-compiled	[CE]  not  a  statement	47	None	replace
246	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumber;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -peekedNumber;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	82	None	replace
247	[BUG]  [BUGGY]  peekedLong  =  -1?  value  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  value  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  value  :  Long.MIN_VALUE;	  peekedLong    =    -value?    value    :    Long.MIN_VALUE;    	non-compiled	[CE]  not  a  statement	5	None	replace
248	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  Long.MIN_VALUE;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  Long.MIN_VALUE;	  peekedLong    =    -value?    PEEKED_LONG    :    value;    	non-compiled	[CE]  not  a  statement	40	None	replace
249	[BUG]  [BUGGY]  peekedLong  =  -1?  PEEKED_LONG  :  value;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  PEEKED_LONG  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  PEEKED_LONG  :  value;	  peekedLong    =    -value?    PEEKED_LONG    :    value;    	non-compiled	[CE]  not  a  statement	40	None	replace
250	[BUG]  [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Integer  pos  =  pathIndices.size();  peekedNumberLength  =  pos;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  not  a  statement	71	None	replace
251	[BUG]  [BUGGY]  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	pos  =  pathIndices.size();  peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  not  a  statement	71	None	replace
252	[BUG]  [BUGGY]  peekedNumberLength  =  pathIndices.size();  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedNumberLength  =  pathIndices.size();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedNumberLength  =  pathIndices.size();	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  not  a  statement	71	None	replace
253	[BUG]  [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Int  pos  =  pathIndices.size();  peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  not  a  statement	71	None	replace
254	[BUG]  [BUGGY]  peekedLong  =  last?  negative  :  -peekedNumber;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  negative  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  negative  :  -peekedNumber;	  peekedLong    =    negative?    last    :    -peekedNumber;    	non-compiled	[CE]  not  a  statement	25	None	replace
255	[BUG]  [BUGGY]  peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  Long.MIN_VALUE  :  Long.MAX_VALUE;	  peekedLong    =    -negative?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
256	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  Long.MAX_VALUE;	  peekedLong    =    -negative?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
257	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  -1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MIN_VALUE  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MIN_VALUE  :  -1;	  peekedLong    =    -value?    value    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
258	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  0;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  0;	  peekedLong    =    -value?    value    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
259	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -1;	  peekedLong    =    -value?    value    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
260	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -value.longValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -value.longValue();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -value.longValue();	  peekedLong    =    value?    -1    :    -value;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
261	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  -lenient;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
262	[BUG]  [BUGGY]  peekedLong  =  -value?  negative  :  -lenient;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  negative  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  negative  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
263	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -lenient;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
264	[BUG]  [BUGGY]  int  pos  =  stack.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.size()  -  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.size()  -  1;	  int    pos    =    stack.size();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
265	[BUG]  [BUGGY]  int  pos  =  stack.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.size()  -  2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.size()  -  2;	  int    pos    =    stack.size();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
266	[BUG]  [BUGGY]  int  pos  =  stack.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.size()  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.size()  +  1;	  int    pos    =    stack.size();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
267	[BUG]  [BUGGY]  int  pos  =  stack.size()  -  4;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.size()  -  4;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.size()  -  4;	  int    pos    =    stack.size();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
268	[BUG]  [BUGGY]  peekedLong  =  -i?  last  :  -negative;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  last  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  last  :  -negative;	  peekedLong    =    i?    last    :    -negative;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
269	[BUG]  [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE)?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =(value  ==  Long.MIN_VALUE)?  -1  :  -1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
270	[BUG]  [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE  ||  value  ==  Long.MIN_VALUE)?  -1  :  -1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE  ||  value  ==  Long.MIN_VALUE)?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =(value  ==  Long.MIN_VALUE  ||  value  ==  Long.MIN_VALUE)?  -1  :  -1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  	12	None	replace
271	[BUG]  [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE  ||  value!=  Long.MIN_VALUE)?  -1  :  -1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE  ||  value!=  Long.MIN_VALUE)?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =(value  ==  Long.MIN_VALUE  ||  value!=  Long.MIN_VALUE)?  -1  :  -1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  	12	None	replace
272	[BUG]  [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -value;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  MIN_INCOMPLETE_INTEGER  :  -value;	  peekedLong    =    value?    lenient    :    -value;    	non-compiled	[CE]  	34	None	replace
273	[BUG]  [BUGGY]  peekedLong  =  -value?  lenient  :  -value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  lenient  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  lenient  :  -value;	  peekedLong    =    value?    lenient    :    -value;    	non-compiled	[CE]  	34	None	replace
274	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_DIGIT  :  0;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_DIGIT  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_DIGIT  :  0;	  peekedLong    =    value?    NUMBER_CHAR_DIGIT    :    -1;    	non-compiled	[CE]  	75	None	replace
275	[BUG]  [BUGGY]  peekedLong  =  last?  negative  :  -peekedLong;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  negative  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  negative  :  -peekedLong;	  peekedLong    =    negative?    last    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	54	None	replace
276	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  -peekedLong;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  -peekedLong;	  peekedLong    =    negative?    last    :    -peekedLong;    	non-compiled	[CE]  not  a  statement	54	None	replace
277	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_LONG;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  PEEKED_LONG;	  peekedLong    =    -value?    negative    :    -value;    	non-compiled	[CE]  not  a  statement	94	None	replace
278	[BUG]  [BUGGY]  peekedLong  =  -1?  negative  :  -1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  negative  :  -1;	  peekedLong    =    -value?    negative    :    -value;    	non-compiled	[CE]  	94	None	replace
279	[BUG]  [BUGGY]  peekedLong  =  value?  last  :  0;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  :  0;	  peekedLong    =    value?    last    :    -1;    	non-compiled	[CE]  	52	None	replace
280	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  -peekedNumberLength;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  -peekedNumberLength;	  peekedLong    =    value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	43	None	replace
281	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  -negative;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumberLength  :  -negative;	  peekedLong    =    value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	43	None	replace
282	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(negative);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(negative);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(negative);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  	97	None	replace
283	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(peekedNumberLength);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(peekedNumberLength);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  	97	None	replace
284	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(peekedNumber);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(peekedNumber);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(peekedNumber);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  	97	None	replace
285	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathNames[value]);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathNames[value]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathNames[value]);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  	97	None	replace
286	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(peekedLong);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(peekedLong);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(peekedLong);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  	97	None	replace
287	[BUG]  [BUGGY]  peekedLong  =  i?  value  :  -negativeNumberLength;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  value  :  -negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  value  :  -negativeNumberLength;	  peekedLong    =    i?    value    :    -peekedNumberLength;    	non-compiled	[CE]  	69	None	replace
288	[BUG]  [BUGGY]  peekedLong  =  last?  value  :  -peekedNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  last?  value  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  last?  value  :  -peekedNumberLength;	  peekedLong    =    i?    value    :    -peekedNumberLength;    	non-compiled	[CE]  	69	None	replace
289	[BUG]  [BUGGY]  char  pos  =(char)Math.ceil(peekedNumberLength);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  char  pos  =(char)Math.ceil(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	char  pos  =(char)Math.ceil(peekedNumberLength);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
290	[BUG]  [BUGGY]  float  pos  =(float)Math.ceil(peekedNumberLength);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  float  pos  =(float)Math.ceil(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	float  pos  =(float)Math.ceil(peekedNumberLength);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
291	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekedNumberLength]);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekedNumberLength]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames[peekedNumberLength]);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
292	[BUG]  [BUGGY]  short  pos  =(short)Math.ceil(peekedNumberLength);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  short  pos  =(short)Math.ceil(peekedNumberLength);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	short  pos  =(short)Math.ceil(peekedNumberLength);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
293	[BUG]  [BUGGY]  peekedLong  =  i  :  -peekedNumberLength;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  :  -peekedNumberLength;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  	61	None	replace
294	[BUG]  [BUGGY]  peekedLong  =  value  -peekedNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -peekedNumberLength;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  	61	None	replace
295	[BUG]  [BUGGY]  peekedLong  =  value  -  bufferNumberLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  bufferNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  bufferNumberLength;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  	61	None	replace
296	[BUG]  [BUGGY]  peekedLong  =  i  -  value;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  value;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  	61	None	replace
297	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(value);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(value);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
298	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekedNumberLength]);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekedNumberLength]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames[peekedNumberLength]);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
299	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(peekedNumber);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(peekedNumber);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(peekedNumber);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
300	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(PeekedNumber.MIN_VALUE);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(PeekedNumber.MIN_VALUE);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(PeekedNumber.MIN_VALUE);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
301	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames[i]);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames[i]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames[i]);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
302	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  -1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumberLength  :  -1;	  peekedLong    =    i?    value    :    -peekedNumberLength;    	non-compiled	[CE]  	69	None	replace
303	[BUG]  [BUGGY]  peekedLong  =  i?  negative  :  -peekedNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  negative  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  negative  :  -peekedNumberLength;	  peekedLong    =    i?    value    :    -peekedNumberLength;    	non-compiled	[CE]  	69	None	replace
304	[BUG]  [BUGGY]  peekedLong  =  value?  -negative  :  Long.MAX_VALUE;  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -negative  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -negative  :  Long.MAX_VALUE;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  empty  character  literal	20	None	replace
305	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i],  negative);  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i],  negative);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[i],  negative);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  empty  character  literal	99	None	replace
306	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  &  0xFFFF);  [CE]  empty  character  literal  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[i]  &  0xFFFF);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[i]  &  0xFFFF);	  int    pos    =    Integer.parseInt(pathIndices[i]);    	non-compiled	[CE]  empty  character  literal	99	None	replace
307	[BUG]  [BUGGY]  peekedLong  =  negative?  -1  :  -1;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -1  :  -1;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  empty  character  literal	51	None	replace
308	[BUG]  [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -peekedNumber;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -peekedNumber;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  empty  character  literal	96	None	replace
309	[BUG]  [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_NONE  :  -peekedNumber;  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_NONE  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  NUMBER_CHAR_NONE  :  -peekedNumber;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
310	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  -peekNumber;  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  -peekNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  -peekNumber;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
311	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  -2;  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  -2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  -2;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
312	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_LONG;  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  unclosed  string  literal	88	None	replace
313	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_LONG;  [CE]  unclosed  string  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  unclosed  string  literal	88	None	replace
314	[BUG]  [BUGGY]  peekedLong  =  -peekedNumber;  [CE]  unclosed  string  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -peekedNumber;	  peekedLong    =    -value;    	non-compiled	[CE]  unclosed  string  literal	70	None	replace
315	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -lenient;  [CE]  unclosed  string  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
316	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -lenient;  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
317	[BUG]  [BUGGY]  peekedLong  =  lenient?  last  :  -negative;  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  last  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  last  :  -negative;	  peekedLong    =    lenient?    last    :    -value;    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
318	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -negative;  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  -negative;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumber;    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
319	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -peekNumber;  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -peekNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  -peekNumber;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumber;    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
320	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -value;  [CE]  unclosed  string  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -value;	  peekedLong    =    -value?    value    :    -value;    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
321	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -value;  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -value;	  peekedLong    =    -value?    value    :    -value;    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
322	[BUG]  [BUGGY]  int  pos  =  pathNames.size();  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathNames.size();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathNames.size();	  int    pos    =    pathIndices.size();    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
323	[BUG]  [BUGGY]  peekedLong  =  -value?  pos  :  i;  [CE]  unclosed  string  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  pos  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  pos  :  i;	  peekedLong    =    -value?    value    :    i;    	non-compiled	[CE]  unclosed  string  literal	74	None	replace
324	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  i;  [CE]  unclosed  string  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  i;	  peekedLong    =    -value?    value    :    i;    	non-compiled	[CE]  unclosed  string  literal	74	None	replace
325	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_DIGIT  :  NUMBER_CHAR_NONE;  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_DIGIT  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_DIGIT  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
326	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  NUMBER_CHAR_DIGIT;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    value;    	non-compiled	[CE]  empty  character  literal	41	None	replace
327	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_VALUE;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_VALUE;	  peekedLong    =    -value?    PEEKED_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	40	None	replace
328	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  Long.MAX_VALUE;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  Long.MAX_VALUE;	  peekedLong    =    -value?    PEEKED_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	40	None	replace
329	[BUG]  [BUGGY]  peekedLong  =  negative?  PEEKED_LONG  :  -1;  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  PEEKED_LONG  :  -1;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  empty  character  literal	80	None	replace
330	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  Integer.MIN_VALUE;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  Integer.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  Integer.MIN_VALUE;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  empty  character  literal	80	None	replace
331	[BUG]  [BUGGY]  peekedLong  =  negative?  last  :  -1;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  last  :  -1;	  peekedLong    =    value?    last    :    -1;    	non-compiled	[CE]  empty  character  literal	52	None	replace
332	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  empty  character  literal	71	None	replace
333	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  empty  character  literal	71	None	replace
334	[BUG]  [BUGGY]  int  pos  =  pathNames.size();  peekedNumberLength  =  pos;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathNames.size();  peekedNumberLength  =  pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathNames.size();  peekedNumberLength  =  pos;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  empty  character  literal	71	None	replace
335	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_EXP_SIGN;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    negative;    	non-compiled	[CE]  empty  character  literal	76	None	replace
336	[BUG]  [BUGGY]  peekedLong  =  -value?  negative  :  NUMBER_CHAR_DIGIT;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  negative  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  negative  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    NUMBER_CHAR_DIGIT    :    negative;    	non-compiled	[CE]  empty  character  literal	76	None	replace
337	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  Integer.MAX_VALUE;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  Integer.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  Integer.MAX_VALUE;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
338	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  Long.MIN_VALUE;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  Long.MIN_VALUE;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
339	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  Integer.MIN_VALUE;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  Integer.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  Integer.MIN_VALUE;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
340	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  NUMBER_CHAR_NONE;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  NUMBER_CHAR_NONE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  NUMBER_CHAR_NONE;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
341	[BUG]  [BUGGY]  int  pos  =(int)Math.rint(value,  negative);  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.rint(value,  negative);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.rint(value,  negative);	  int    pos    =(int)Math.rint(value);    	non-compiled	[CE]  empty  character  literal	28	None	replace
342	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  Long.MAX_VALUE  +  1;  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  Long.MAX_VALUE  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  Long.MAX_VALUE  +  1;	  peekedLong    =    -negative?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  empty  character  literal	79	None	replace
343	[BUG]  [BUGGY]  peekedLong  =  -negative?  Long.MAX_VALUE  :  Long.MIN_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  Long.MAX_VALUE  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  Long.MAX_VALUE  :  Long.MIN_VALUE;	  peekedLong    =    -negative?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  	79	None	replace
344	[BUG]  [BUGGY]  peekedLong  =  negative?  -value  :  last;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -value  :  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -value  :  last;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  	58	None	replace
345	[BUG]  [BUGGY]  peekedLong  =  lenient?  -negative  :  last;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  -negative  :  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  -negative  :  last;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  	58	None	replace
346	[BUG]  [BUGGY]  peekedLong  =  negative  -  value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative  -  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative  -  value;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
347	[BUG]  [BUGGY]  peekedLong  =  value  -  NUMBER_CHAR_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  NUMBER_CHAR_DIGIT;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
348	[BUG]  [BUGGY]  peekedLong  =  value  -  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  1;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
349	[BUG]  [BUGGY]  peekedLong  =  value  -  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  -  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  -  i;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
350	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  0;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  0;	  peekedLong    =    -negative?    value    :    -1;    	non-compiled	[CE]  	10	None	replace
351	[BUG]  [BUGGY]  peekedLong  =  negative?  -1  :  -value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -1  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -1  :  -value;	  peekedLong    =    value?    -1    :    -value;    	non-compiled	[CE]  	15	None	replace
352	[BUG]  [BUGGY]  peekedLong  =  value?  -1  :  -peeked;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -1  :  -peeked;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -1  :  -peeked;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  	104	None	replace
353	[BUG]  [BUGGY]  peekedLong  =  value?  -peeked  :  value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peeked  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peeked  :  value;	  peekedLong    =    i?    value    :    -peeked;    	non-compiled	[CE]  	104	None	replace
354	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  negative;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  negative;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  	107	None	replace
355	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_NUMBER_LONG  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  	107	None	replace
356	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[index]);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[index]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[index]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
357	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices,  value);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices,  value);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
358	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[1]);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[1]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[1]);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
359	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  Long.MAX_VALUE  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  Long.MAX_VALUE  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  Long.MAX_VALUE  +  1;	  peekedLong    =    -value?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  	6	None	replace
360	[BUG]  [BUGGY]  peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MIN_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Long.MAX_VALUE  :  Long.MIN_VALUE;	  peekedLong    =    -value?    value    :    Long.MAX_VALUE;    	non-compiled	[CE]  	6	None	replace
361	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	8	None	replace
362	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  value;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_SIGN  :  value;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	8	None	replace
363	[BUG]  [BUGGY]  peekedLong  =  0?  negative  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  0?  negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  0?  negative  :  -1;	  peekedLong    =    lenient?    negative    :    -1;    	non-compiled	[CE]  	78	None	replace
364	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames,  value);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames,  value);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  	29	None	replace
365	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(value,  buffer);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(value,  buffer);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(value,  buffer);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  	29	None	replace
366	[BUG]  [BUGGY]  peekedLong  =  value?  -peekNumber  :  negative;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekNumber  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekNumber  :  negative;	  peekedLong    =    value?    -peekedNumber    :    negative;    	non-compiled	[CE]  	83	None	replace
367	[BUG]  [BUGGY]  peekedLong  =  negative?  -value  :  -value;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -value  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -value  :  -value;	  peekedLong    =    value?    -negative    :    -value;    	non-compiled	[CE]  	47	None	replace
368	[BUG]  [BUGGY]  peekedLong  =  -value?  -1  :  -1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  -1  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  -1  :  -1;	  peekedLong    =    -value?    negative    :    -value;    	non-compiled	[CE]  	94	None	replace
369	[BUG]  [BUGGY]  peekedLong  =  i?  NUMBER_CHAR_DIGIT  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  NUMBER_CHAR_DIGIT  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  NUMBER_CHAR_DIGIT  :  -1;	  peekedLong    =    i?    negative    :    -1;    	non-compiled	[CE]  	92	None	replace
370	[BUG]  [BUGGY]  peekedLong  =  negative?  lenient  :  -1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  lenient  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  lenient  :  -1;	  peekedLong    =    value?    lenient    :    -1;    	non-compiled	[CE]  	50	None	replace
371	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  Long.MIN_VALUE  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  Long.MIN_VALUE  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  Long.MIN_VALUE  +  1;	  peekedLong    =    -negative?    value    :    Long.MIN_VALUE;    	non-compiled	[CE]  	11	None	replace
372	[BUG]  [BUGGY]  peekedLong  =  negative?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -peekedLong  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -peekedLong  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	91	None	replace
373	[BUG]  [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE)?  value  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =(value  ==  Long.MIN_VALUE)?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =(value  ==  Long.MIN_VALUE)?  value  :  -1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  	12	None	replace
374	[BUG]  [BUGGY]  peekedLong  =  -1?  value  :  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1?  value  :  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1?  value  :  1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  	12	None	replace
375	[BUG]  [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -pos;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  NUMBER_CHAR_DIGIT  :  -pos;	  peekedLong    =    -negative?    value    :    -pos;    	non-compiled	[CE]  	95	None	replace
376	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumber  :  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumber  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumber  :  i;	  peekedLong    =    i?    value    :    -peekedNumber;    	non-compiled	[CE]  	84	None	replace
377	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  -peekedNumberLength;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  -peekedNumberLength;	  peekedLong    =    i?    value    :    -peekedNumber;    	non-compiled	[CE]  	84	None	replace
378	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekNumberLength]);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekNumberLength]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames[peekNumberLength]);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
379	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames[0]);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames[0]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames[0]);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  	31	None	replace
380	[BUG]  [BUGGY]  peekedLong  =  negative?  lenient  :  -value;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  lenient  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  lenient  :  -value;	  peekedLong    =    value?    lenient    :    -value;    	non-compiled	[CE]  	34	None	replace
381	[BUG]  [BUGGY]  peekedLong  =  value?  -inCOMPLETE_INTEGER  :  -value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -inCOMPLETE_INTEGER  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -inCOMPLETE_INTEGER  :  -value;	  peekedLong    =    value?    lenient    :    -value;    	non-compiled	[CE]  	34	None	replace
382	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames.length);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames.length);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames.length);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
383	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekNumberLength]);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekNumberLength]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames[peekNumberLength]);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
384	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekedNumberLength  -  1]);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames[peekedNumberLength  -  1]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames[peekedNumberLength  -  1]);	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
385	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_SIGN  :  -1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_SIGN  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_SIGN  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  	19	None	replace
386	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_EXP_DIGIT  :  -1;  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_EXP_DIGIT  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_EXP_DIGIT  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  empty  character  literal	19	None	replace
387	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_NONE  :  -1;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_NONE  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_NONE  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  empty  character  literal	19	None	replace
388	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_EXP_SIGN  :  -1;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_EXP_SIGN  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_EXP_SIGN  :  -1;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  empty  character  literal	19	None	replace
389	[BUG]  [BUGGY]  peekedLong  =  lenient?  negative  :  -value;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  negative  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  negative  :  -value;	  peekedLong    =    last?    negative    :    -value;    	non-compiled	[CE]  empty  character  literal	33	None	replace
390	[BUG]  [BUGGY]  peekedLong  =  lenient?  last  :  -peekedNumberLength;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  last  :  -peekedNumberLength;	  peekedLong    =    negative?    last    :    -peekedNumberLength;    	non-compiled	[CE]  not  a  statement	46	None	replace
391	[BUG]  [BUGGY]  peekedLong  =  -negative?  last  :  i;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  last  :  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  last  :  i;	  peekedLong    =    i?    last    :    -negative;    	non-compiled	[CE]  not  a  statement	23	None	replace
392	[BUG]  [BUGGY]  peekedLong  =  value?  last  -value  :  -value;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  last  -value  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  last  -value  :  -value;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  not  a  statement	3	None	replace
393	[BUG]  [BUGGY]  peekedLong  =  value?  -value  :  last;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -value  :  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -value  :  last;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  not  a  statement	3	None	replace
394	[BUG]  [BUGGY]  peekedLong  =  negative  :  -peekedNumber;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative  :  -peekedNumber;	  peekedLong    =    value    :    -peekedNumber;    	non-compiled	[CE]  	77	None	replace
395	[BUG]  [BUGGY]  peekedLong  =  negative  :  -peekedNumberLength;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative  :  -peekedNumberLength;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  	61	None	replace
396	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -1;	  peekedLong    =    -value?    value    :    -1;    	non-compiled	[CE]  	37	None	replace
397	[BUG]  [BUGGY]  peekedLong  =  negative?  NUMBER_CHAR_DIGIT  :  -1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  NUMBER_CHAR_DIGIT  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  NUMBER_CHAR_DIGIT  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_DIGIT    :    -1;    	non-compiled	[CE]  	75	None	replace
398	[BUG]  [BUGGY]  peekedLong  =  lenient?  -peekedNumberLength  :  negative;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  -peekedNumberLength  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  -peekedNumberLength  :  negative;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  	87	None	replace
399	[BUG]  [BUGGY]  peekedLong  =  negative  -peekedNumberLength  :  value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative  -peekedNumberLength  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative  -peekedNumberLength  :  value;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  	87	None	replace
400	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  i;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  	72	None	replace
401	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  i;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  	72	None	replace
402	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_SIGN;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  	72	None	replace
403	[BUG]  [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size();  peekedNumberLength  =  NUMBER_CHAR_DIGIT;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    i;    	non-compiled	[CE]  	72	None	replace
404	[BUG]  [BUGGY]  peekedLong  =  lenient?  -value  :  -negative;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  lenient?  -value  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  lenient?  -value  :  -negative;	  peekedLong    =    last?    -negative    :    -value;    	non-compiled	[CE]  	55	None	replace
405	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -peekedLong  +  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_LONG  :  -peekedLong  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_LONG  :  -peekedLong  +  1;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedLong;    	non-compiled	[CE]  	90	None	replace
406	[BUG]  [BUGGY]  peekedLong  =  negative?  -value  :  lenient;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  -value  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  -value  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  	67	None	replace
407	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -peekedNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_DIGIT  :  -peekedNumberLength;	  peekedLong    =    -value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	44	None	replace
408	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -peekedNumberLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  -peekedNumberLength;	  peekedLong    =    -value?    negative    :    -peekedNumberLength;    	non-compiled	[CE]  	44	None	replace
409	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  -  1;  peekedNumberLength  =  pos  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
410	[BUG]  [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.size()  +  1;  peekedNumberLength  =  pos  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
411	[BUG]  [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Int  pos  =  pathIndices.size();  peekedNumberLength  =  pos  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
412	[BUG]  [BUGGY]  float  pos  =(float)Math.pow(10,  value);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  float  pos  =(float)Math.pow(10,  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	float  pos  =(float)Math.pow(10,  value);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
413	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  long);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  long);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  long);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
414	[BUG]  [BUGGY]  int  pos  =  stack.size()  -  3;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.size()  -  3;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.size()  -  3;	  int    pos    =    stack.size();    	non-compiled	[CE]  	98	None	replace
415	[BUG]  [BUGGY]  peekedLong  =  negative  :  -peekedLong;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative  :  -peekedLong;	  peekedLong    =    value    :    -peekedLong;    	non-compiled	[CE]  	59	None	replace
416	[BUG]  [BUGGY]  peekedLong  =  value  /  -peekedLong;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value  /  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value  /  -peekedLong;	  peekedLong    =    value    :    -peekedLong;    	non-compiled	[CE]  	59	None	replace
417	[BUG]  [BUGGY]  peekedLong  =  -value?  value  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  value  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  value  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
418	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  negative;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  negative;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
419	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_DIGIT;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
420	[BUG]  [BUGGY]  peekedLong  =  negative?  NUMBER_CHAR_LONG  :  -1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  NUMBER_CHAR_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  NUMBER_CHAR_LONG  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
421	[BUG]  [BUGGY]  peekedLong  =  i?  NUMBER_CHAR_LONG  :  -1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  NUMBER_CHAR_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  NUMBER_CHAR_LONG  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
422	[BUG]  [BUGGY]  peekedLong  =  value?  PEEKED_NUMBER_LONG  :  -1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  PEEKED_NUMBER_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  PEEKED_NUMBER_LONG  :  -1;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
423	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  Negate.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  Negate.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  Negate.MIN_VALUE;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
424	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathNames);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathNames);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathNames);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
425	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(value,  negative);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(value,  negative);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(value,  negative);	  int    pos    =    Integer.parseInt(value);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
426	[BUG]  [BUGGY]  int  pos  =(int)Math.peek(value);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.peek(value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.peek(value);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
427	[BUG]  [BUGGY]  int  pos  =(int)Math.floor(pathNames[0],  value);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.floor(pathNames[0],  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.floor(pathNames[0],  value);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
428	[BUG]  [BUGGY]  peekedLong  =  -value?  next  :  negative;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  next  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  next  :  negative;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
429	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -negative;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -negative;	  peekedLong    =    -value?    value    :    -negative;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
430	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -negative;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_NONE  :  -negative;	  peekedLong    =    -value?    value    :    -negative;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
431	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  value;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  1]  +  value;	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
432	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1  +  1];  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1  +  1];  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  1  +  1];	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
433	[BUG]  [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  size;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices[pathIndices.length  -  1]  +  size;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices[pathIndices.length  -  1]  +  size;	  int    pos    =    pathIndices[pathIndices.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
434	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_NONE  :  -peekedNumberLength;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_NONE  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_NONE  :  -peekedNumberLength;	  peekedLong    =    -value?    value    :    -peekedNumberLength;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
435	[BUG]  [BUGGY]  peekedLong  =  value?  i  :  -peekedNumberLength;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  i  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  i  :  -peekedNumberLength;	  peekedLong    =    value?    i    :    -value;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
436	[BUG]  [BUGGY]  peekedLong  =  -value?  Integer.MIN_VALUE  :  Long.MIN_VALUE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  Integer.MIN_VALUE  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  Integer.MIN_VALUE  :  Long.MIN_VALUE;	  peekedLong    =    -value?    negative    :    Long.MIN_VALUE;    	non-compiled	[CE]  	39	None	replace
437	[BUG]  [BUGGY]  peekedLong  =  negative?  MIN_INCOMPLETE_INTEGER  :  -1;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  negative?  MIN_INCOMPLETE_INTEGER  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  negative?  MIN_INCOMPLETE_INTEGER  :  -1;	  peekedLong    =    value?    MIN_INCOMPLETE_INTEGER    :    -1;    	non-compiled	[CE]  empty  character  literal	49	None	replace
438	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekedNumberLength],  value);  [CE]  empty  character  literal  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames[peekedNumberLength],  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames[peekedNumberLength],  value);	  int    pos    =(int)Math.ceil(peekedNumberLength,    value);    	non-compiled	[CE]  empty  character  literal	29	None	replace
439	[BUG]  [BUGGY]  peekedLong  =  pos?  value  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos?  value  :  -1;	  peekedLong    =    i?    value    :    -1;    	non-compiled	[CE]  	17	None	replace
440	[BUG]  [BUGGY]  peekedNumberLength  =  i?  value  :  -1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedNumberLength  =  i?  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedNumberLength  =  i?  value  :  -1;	  peekedLong    =    i?    value    :    -1;    	non-compiled	[CE]  	17	None	replace
441	[BUG]  [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_LONG  :  Integer.MAX_VALUE;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  NUMBER_CHAR_LONG  :  Integer.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  NUMBER_CHAR_LONG  :  Integer.MAX_VALUE;	  peekedLong    =    value?    NUMBER_CHAR_LONG    :    -1;    	non-compiled	[CE]  	81	None	replace
442	[BUG]  [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[0],  value);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  Integer.parseInt(pathIndices[0],  value);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  Integer.parseInt(pathIndices[0],  value);	  int    pos    =    Integer.parseInt(pathIndices[pos]);    	non-compiled	[CE]  	101	None	replace
443	[BUG]  [BUGGY]  peekedLong  =  i  :  -peekedNumber;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  :  -peekedNumber;	  peekedLong    =    negative?    last    :    -peekedNumber;    	non-compiled	[CE]  	25	None	replace
444	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -1;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -1;	  peekedLong    =    -value?    value    :    -1;    	non-compiled	[CE]  not  a  statement	37	None	replace
445	[BUG]  [BUGGY]  peekedLong  =  i?  lenient  :  -1;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  lenient  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  lenient  :  -1;	  peekedLong    =    value?    lenient    :    -1;    	non-compiled	[CE]  not  a  statement	50	None	replace
446	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  not  a  statement	7	None	replace
447	[BUG]  [BUGGY]  peekedLong  =  -i?  PEEKED_LONG  :  negative;  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  PEEKED_LONG  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  PEEKED_LONG  :  negative;	  peekedLong    =    -value?    PEEKED_LONG    :    negative;    	non-compiled	[CE]  empty  character  literal	7	None	replace
448	[BUG]  [BUGGY]  int  pos  =(int)Math.floor(peekedNumber);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.floor(peekedNumber);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.floor(peekedNumber);	  int    pos    =(int)Math.floor(value);    	non-compiled	[CE]  empty  character  literal	27	None	replace
449	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_LONG;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  NUMBER_CHAR_LONG;	  peekedLong    =    -value?    NUMBER_CHAR_LONG    :    value;    	non-compiled	[CE]  empty  character  literal	107	None	replace
450	[BUG]  [BUGGY]  peekedLong  =  pos?  negative  :  -1;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos?  negative  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos?  negative  :  -1;	  peekedLong    =    i?    negative    :    -1;    	non-compiled	[CE]  empty  character  literal	92	None	replace
451	[BUG]  [BUGGY]  peekedLong  =  i?  positive  :  -1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  positive  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  positive  :  -1;	  peekedLong    =    i?    negative    :    -1;    	non-compiled	[CE]  	92	None	replace
452	[BUG]  [BUGGY]  int  pos  =  stack.getLength();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  stack.getLength();  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  stack.getLength();	  int    pos    =    stack.size();    	non-compiled	[CE]  	98	None	replace
453	[BUG]  [BUGGY]  peekedLong  =  -1  |  value  :  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -1  |  value  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -1  |  value  :  -1;	  peekedLong    =    -1?    value    :    -1;    	non-compiled	[CE]  	12	None	replace
454	[BUG]  [BUGGY]  peekedLong  =  -i?  next  :  value;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  next  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  next  :  value;	  peekedLong    =    -value?    next    :    value;    	non-compiled	[CE]  	42	None	replace
455	[BUG]  [BUGGY]  peekedLong  =  i?  lenient  :  -negative;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  lenient  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  lenient  :  -negative;	  peekedLong    =    value?    lenient    :    -negative;    	non-compiled	[CE]  	66	None	replace
456	[BUG]  [BUGGY]  peekedLong  =  i?  negative  :  -negative;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  negative  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  negative  :  -negative;	  peekedLong    =    value?    lenient    :    -negative;    	non-compiled	[CE]  	66	None	replace
457	[BUG]  [BUGGY]  peekedLong  =  value?  i  :  -peekedNumber;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  i  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  i  :  -peekedNumber;	  peekedLong    =    value?    i    :    -value;    	non-compiled	[CE]  	14	None	replace
458	[BUG]  [BUGGY]  peekedLong  =  value?  -inCOMPLETE_INTEGER  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -inCOMPLETE_INTEGER  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -inCOMPLETE_INTEGER  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -peekedLong    :    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	91	None	replace
459	[BUG]  [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  PEEKED_LONG  :  -1;	  peekedLong    =    -negative?    value    :    -1;    	non-compiled	[CE]  	10	None	replace
460	[BUG]  [BUGGY]  peekedLong  =  i?  -1  :  value;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -1  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -1  :  value;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  	20	None	replace
461	[BUG]  [BUGGY]  peekedLong  =  i?  -negative  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -negative  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -negative  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  	20	None	replace
462	[BUG]  [BUGGY]  peekedLong  =  value?  -i  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -i  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -i  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  	20	None	replace
463	[BUG]  [BUGGY]  peekedLong  =  value?  -i  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -i  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -i  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    value?    -negative    :    i;    	non-compiled	[CE]  	20	None	replace
464	[BUG]  [BUGGY]  peekedLong  =  i?  -1  :  -value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -1  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -1  :  -value;	  peekedLong    =    value?    -1    :    -value;    	non-compiled	[CE]  	15	None	replace
465	[BUG]  [BUGGY]  pokeedLong  =  i  -  negativeNumberLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  pokeedLong  =  i  -  negativeNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	pokeedLong  =  i  -  negativeNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
466	[BUG]  [BUGGY]  peekedLong  =  i  -  positiveNumberLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  positiveNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  positiveNumberLength;	  peekedLong    =    value    -    negativeNumberLength;    	non-compiled	[CE]  	62	None	replace
467	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  value  :  0;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  NUMBER_CHAR_DIGIT?  value  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  NUMBER_CHAR_DIGIT?  value  :  0;	  peekedLong    =    NUMBER_CHAR_DIGIT?    value    :    -1;    	non-compiled	[CE]  	19	None	replace
468	[BUG]  [BUGGY]  peekedLong  =  -value?  last  :  PEEKED_LONG;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  last  :  PEEKED_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  last  :  PEEKED_LONG;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  	4	None	replace
469	[BUG]  [BUGGY]  peekedLong  =  -i?  last  :  negative;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  last  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  last  :  negative;	  peekedLong    =    -value?    last    :    negative;    	non-compiled	[CE]  	4	None	replace
470	[BUG]  [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -pos;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -pos;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  PEEKED_LONG  :  -pos;	  peekedLong    =    -negative?    value    :    -pos;    	non-compiled	[CE]  	95	None	replace
471	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  -i;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  -i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  -i;	  peekedLong    =    -negative?    value    :    -pos;    	non-compiled	[CE]  	95	None	replace
472	[BUG]  [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedLong;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  PEEKED_LONG  :  -peekedLong;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedLong;    	non-compiled	[CE]  	90	None	replace
473	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  lenient;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  	67	None	replace
474	[BUG]  [BUGGY]  peekedLong  =  i  -  value  :  lenient;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  value  :  lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  value  :  lenient;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  	67	None	replace
475	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    value?    -value    :    lenient;    	non-compiled	[CE]  	67	None	replace
476	[BUG]  [BUGGY]  peekedLong  =  -i?  last  :  -value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  last  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  last  :  -value;	  peekedLong    =    lenient?    last    :    -value;    	non-compiled	[CE]  	56	None	replace
477	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -lenient;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -lenient;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -lenient;	  peekedLong    =    -value?    value    :    -lenient;    	non-compiled	[CE]  	35	None	replace
478	[BUG]  [BUGGY]  peekedLong  =  i?  lenient  :  -value;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  lenient  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  lenient  :  -value;	  peekedLong    =    value?    lenient    :    -value;    	non-compiled	[CE]  	34	None	replace
479	[BUG]  [BUGGY]  peekedLong  =  -i?  1  :  negative;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  1  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  1  :  negative;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
480	[BUG]  [BUGGY]  peekedLong  =  -value?  1  :  value;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  1  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  1  :  value;	  peekedLong    =    -value?    1    :    negative;    	non-compiled	[CE]  empty  character  literal	89	None	replace
481	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_EXP_SIGN;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedLong  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    i?    value    :    -peekedLong;    	non-compiled	[CE]  empty  character  literal	103	None	replace
482	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  -value;  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  -value;	  peekedLong    =    last?    -value    :    -value;    	non-compiled	[CE]  empty  character  literal	3	None	replace
483	[BUG]  [BUGGY]  int  pos  =  pathIndices.get(pathNames.indexOf(peekedNumber));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =  pathIndices.get(pathNames.indexOf(peekedNumber));  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =  pathIndices.get(pathNames.indexOf(peekedNumber));	  int    pos    =    pathIndices.get(peekedNumberLength);    	non-compiled	[CE]  	30	None	replace
484	[BUG]  [BUGGY]  peekedLong  =  pos?  PEEKED_LONG  :  -1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos?  PEEKED_LONG  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos?  PEEKED_LONG  :  -1;	  peekedLong    =    value?    PEEKED_LONG    :    -1;    	non-compiled	[CE]  	80	None	replace
485	[BUG]  [BUGGY]  peekedLong  =  pos?  last  :  -negative;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos?  last  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos?  last  :  -negative;	  peekedLong    =    i?    last    :    -negative;    	non-compiled	[CE]  	23	None	replace
486	[BUG]  [BUGGY]  peekedLong  =  i?  last  :  -2;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  last  :  -2;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  last  :  -2;	  peekedLong    =    i?    last    :    -negative;    	non-compiled	[CE]  	23	None	replace
487	[BUG]  [BUGGY]  peekedLong  =  -i?  PEEKED_LONG  :  value;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -i?  PEEKED_LONG  :  value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -i?  PEEKED_LONG  :  value;	  peekedLong    =    -value?    PEEKED_LONG    :    value;    	non-compiled	[CE]  	40	None	replace
488	[BUG]  [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -peekedNumber;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  PEEKED_LONG  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  PEEKED_LONG  :  -peekedNumber;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  	96	None	replace
489	[BUG]  [BUGGY]  peekedLong  =  -negative?  value  :  -peekedNumberLength;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -negative?  value  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -negative?  value  :  -peekedNumberLength;	  peekedLong    =    -negative?    value    :    -peekedNumber;    	non-compiled	[CE]  	96	None	replace
490	[BUG]  [BUGGY]  peekedLong  =  i?  -1  :  -negative;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -1  :  -negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -1  :  -negative;	  peekedLong    =    value?    -1    :    -negative;    	non-compiled	[CE]  	22	None	replace
491	[BUG]  [BUGGY]  peekedLong  =  i?  -negative  :  -value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -negative  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -negative  :  -value;	  peekedLong    =    last?    -negative    :    -value;    	non-compiled	[CE]  	55	None	replace
492	[BUG]  [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  Int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	Int  pos  =  pathIndices.size();  peekedNumberLength  =  i  +  1;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos    +    1;    	non-compiled	[CE]  	100	None	replace
493	[BUG]  [BUGGY]  peekedLong  =  i?  -peekedNumber  :  negative;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -peekedNumber  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -peekedNumber  :  negative;	  peekedLong    =    value?    -peekedNumber    :    negative;    	non-compiled	[CE]  empty  character  literal	83	None	replace
494	[BUG]  [BUGGY]  peekedLong  =  i?  -negative  :  last;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -negative  :  last;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -negative  :  last;	  peekedLong    =    value?    -negative    :    last;    	non-compiled	[CE]  empty  character  literal	58	None	replace
495	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  negative;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  negative;	  peekedLong    =    value?    -value    :    negative;    	non-compiled	[CE]  empty  character  literal	48	None	replace
496	[BUG]  [BUGGY]  int  pos  =(int)Math.ceil(pathNames[i]);  [CE]  empty  character  literal  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.ceil(pathNames[i]);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.ceil(pathNames[i]);	  int    pos    =(int)Math.ceil(peekedNumberLength);    	non-compiled	[CE]  empty  character  literal	31	None	replace
497	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_DIGIT;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_DIGIT;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  empty  character  literal	88	None	replace
498	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_EXP_SIGN;  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    -value?    value    :    NUMBER_CHAR_LONG;    	non-compiled	[CE]  empty  character  literal	88	None	replace
499	[BUG]  [BUGGY]  peekedLong  =  i  :  -peekedLong;  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  :  -peekedLong;	  peekedLong    =    value    :    -peekedLong;    	non-compiled	[CE]  empty  character  literal	59	None	replace
500	[BUG]  [BUGGY]  peekedLong  =  value?  0  :  0;  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  0  :  0;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  0  :  0;	  peekedLong    =    value?    -1    :    -1;    	non-compiled	[CE]  empty  character  literal	51	None	replace
501	[BUG]  [BUGGY]  peekedLong  =  i?  negative  :  -peekedNumber;  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  negative  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  negative  :  -peekedNumber;	  peekedLong    =    i?    negative    :    -value;    	non-compiled	[CE]  empty  character  literal	68	None	replace
502	[BUG]  [BUGGY]  peekedLong  =  i?  negative  :  -peekedLong;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  negative  :  -peekedLong;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  negative  :  -peekedLong;	  peekedLong    =    i?    negative    :    -value;    	non-compiled	[CE]  empty  character  literal	68	None	replace
503	[BUG]  [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -value;  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  PEEKED_LONG  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  PEEKED_LONG  :  -value;	  peekedLong    =    -value?    negative    :    -value;    	non-compiled	[CE]  empty  character  literal	94	None	replace
504	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -value;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  -value;	  peekedLong    =    -value?    negative    :    -value;    	non-compiled	[CE]  empty  character  literal	94	None	replace
505	[BUG]  [BUGGY]  peekedLong  =  i?  -peekedNumberLength  :  negative;  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -peekedNumberLength  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -peekedNumberLength  :  negative;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  empty  character  literal	87	None	replace
506	[BUG]  [BUGGY]  peekedLong  =  i  -peekedNumberLength  :  negative;  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -peekedNumberLength  :  negative;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -peekedNumberLength  :  negative;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  empty  character  literal	87	None	replace
507	[BUG]  [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  PEEKED_LONG;  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  value?  -peekedNumberLength  :  PEEKED_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  value?  -peekedNumberLength  :  PEEKED_LONG;	  peekedLong    =    value?    -peekedNumberLength    :    negative;    	non-compiled	[CE]  empty  character  literal	87	None	replace
508	[BUG]  [BUGGY]  peekedLong  =  i  -  peekedNumberLength;  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  peekedNumberLength;	  peekedLong    =    value    :    -peekedNumberLength;    	non-compiled	[CE]  empty  character  literal	61	None	replace
509	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  i);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  i);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  i);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
510	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  MIN_INCOMPLETE_INTEGER);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
511	[BUG]  [BUGGY]  int  pos  =(int)Math.pow(10,  NUMBER_CHAR_EXP_SIGN);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  int  pos  =(int)Math.pow(10,  NUMBER_CHAR_EXP_SIGN);  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	int  pos  =(int)Math.pow(10,  NUMBER_CHAR_EXP_SIGN);	  int    pos    =(int)Math.pow(10,    value);    	non-compiled	[CE]  	32	None	replace
512	[BUG]  [BUGGY]  peekedNumberLength  =  -value;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedNumberLength  =  -value;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedNumberLength  =  -value;	  peekedLong    =    -value;    	non-compiled	[CE]  	70	None	replace
513	[BUG]  [BUGGY]  peekedLong  =  -peeked;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -peeked;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -peeked;	  peekedLong    =    -value;    	non-compiled	[CE]  	70	None	replace
514	[BUG]  [BUGGY]  peekedLong  =  pos?  last  :  -1;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  pos?  last  :  -1;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  pos?  last  :  -1;	  peekedLong    =    value?    last    :    -1;    	non-compiled	[CE]  	52	None	replace
515	[BUG]  [BUGGY]  peekedNumberLength  =  i;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedNumberLength  =  i;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedNumberLength  =  i;	  int    pos    =    pathIndices.size();    peekedNumberLength    =    pos;    	non-compiled	[CE]  	71	None	replace
516	[BUG]  [BUGGY]  peekedLong  =  i  -  last  :  -peekedNumberLength;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i  -  last  :  -peekedNumberLength;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i  -  last  :  -peekedNumberLength;	  peekedLong    =    negative?    last    :    -peekedNumberLength;    	non-compiled	[CE]  	46	None	replace
517	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MAX_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MAX_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_LONG  :  Long.MAX_VALUE;	  peekedLong    =    -value?    negative    :    Long.MAX_VALUE;    	non-compiled	[CE]  	63	None	replace
518	[BUG]  [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_FRACTION_DIGIT;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_FRACTION_DIGIT;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  -value?  NUMBER_CHAR_EXP_SIGN  :  NUMBER_CHAR_FRACTION_DIGIT;	  peekedLong    =    -value?    NUMBER_CHAR_EXP_SIGN    :    value;    	non-compiled	[CE]  	64	None	replace
519	[BUG]  [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedNumber;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  PEEKED_LONG  :  -peekedNumber;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  PEEKED_LONG  :  -peekedNumber;	  peekedLong    =    value?    PEEKED_LONG    :    -peekedNumber;    	non-compiled	[CE]  	82	None	replace
520	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_LONG;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_LONG;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  NUMBER_CHAR_LONG;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  	13	None	replace
521	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  NUMBER_CHAR_EXP_SIGN;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  	13	None	replace
522	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  NUMBER_CHAR_SIGN;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  NUMBER_CHAR_SIGN;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  	13	None	replace
523	[BUG]  [BUGGY]  peekedLong  =  i?  -value  :  Long.MIN_VALUE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {      [BUGGY]  peekedLong  =  i?  -value  :  Long.MIN_VALUE;  [BUGGY]      pos  +=  i;  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	peekedLong  =  i?  -value  :  Long.MIN_VALUE;	  peekedLong    =    value?    -value    :    i;    	non-compiled	[CE]  	13	None	replace
