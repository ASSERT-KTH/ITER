bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (pos  <  =  NUMBER_CHAR_SIGN)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (pos  <  =  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (pos  <  =  NUMBER_CHAR_SIGN)  {	  if    (last    <    =    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_L)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_L)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_EXP_L)  {	  if    (last    <    =    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  if  (last  <  =  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  <  =  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  <  =  NUMBER_CHAR_EXP_SIGN)  {	  if    (last    ==    NUMBER_CHAR_FRACTION_DIGIT)    {    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  if  (negative  ||  last!=  NUMBER_CHAR_SIGN)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last!=  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last!=  NUMBER_CHAR_SIGN)  {	  if    (last!=    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	8	None	replace
5	[BUG]  [BUGGY]  int  lineNumber  =  buffer[p  +  i];  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =  buffer[p  +  i];  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =  buffer[p  +  i];	      	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  int  lineNumber  =(int)PeekStack[pos  +  1];  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =(int)PeekStack[pos  +  1];  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =(int)PeekStack[pos  +  1];	      	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  int  lineNumber  =(int)PeekStack.peek();  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =(int)PeekStack.peek();  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =(int)PeekStack.peek();	      	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  int  lineNumber  =(int)PeekStack[p  +  i];  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =(int)PeekStack[p  +  i];  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =(int)PeekStack[p  +  i];	      	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  p  =  pos  +  1;  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  p  =  pos  +  1;  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	p  =  pos  +  1;	      	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  int  lineNumber  =  buffer[pos  +  i];  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =  buffer[pos  +  i];  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =  buffer[pos  +  i];	      	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  int  lineNumber  =(int)Math.floor(p  +  i);  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =(int)Math.floor(p  +  i);  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =(int)Math.floor(p  +  i);	      	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  if(!lenient)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(!lenient)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(!lenient)  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(c  ==  '-'  ||  c  ==  '+')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  if(c  ==  '-')  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(c  ==  '-')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(c  ==  '-')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  if(l  ==  '-'  ||  c  ==  '+')  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(l  ==  '-'  ||  c  ==  '+')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(l  ==  '-'  ||  c  ==  '+')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  if(c  ==  '+'  ||  c  ==  '-')  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(c  ==  '+'  ||  c  ==  '-')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(c  ==  '+'  ||  c  ==  '-')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
17	[BUG]  [BUGGY]  if  (pos  >=  NUMBER_CHAR_SIGN)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (pos  >=  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (pos  >=  NUMBER_CHAR_SIGN)  {	  if    (last    >=    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	9	None	replace
18	[BUG]  [BUGGY]  if(pos  ==  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(pos  ==  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(pos  ==  NUMBER_CHAR_EXP_SIGN)  {	  if    (pos    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	5	None	replace
19	[BUG]  [BUGGY]  if  (pos  <  =  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (pos  <  =  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (pos  <  =  NUMBER_CHAR_EXP_SIGN)  {	  if    (pos    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	5	None	replace
20	[BUG]  [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  if  (negative  ||  last  <  =  NUMBER_CHAR_SIGN)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  <  =  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  <  =  NUMBER_CHAR_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  if  (last  ||  negative  ==  NUMBER_CHAR_SIGN)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ||  negative  ==  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ||  negative  ==  NUMBER_CHAR_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
23	[BUG]  [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  if  (negative  ||  last  <  NUMBER_CHAR_SIGN)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  <  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  <  NUMBER_CHAR_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_FLOAT)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_FLOAT)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  ==  NUMBER_CHAR_FLOAT)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_DECIMAL)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_DECIMAL)  {	  if    (last    <    =    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	4	None	replace
27	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_LONG)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_LONG)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_LONG)  {	  if    (last    <    =    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  if(negative  ||  buffer[pos  +  i]  ==  '-')  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(negative  ||  buffer[pos  +  i]  ==  '-')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(negative  ||  buffer[pos  +  i]  ==  '-')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  if  (negative  &&  last  ==  NUMBER_CHAR_SIGN)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  &&  last  ==  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  &&  last  ==  NUMBER_CHAR_SIGN)  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  if(negative  ||  buffer[pos  +  i]!=  '-')  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(negative  ||  buffer[pos  +  i]!=  '-')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(negative  ||  buffer[pos  +  i]!=  '-')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  if  (last  >  NUMBER_CHAR_SIGN)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  >  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  >  NUMBER_CHAR_SIGN)  {	  if    (last    >=    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	9	None	replace
32	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_NONE)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_NONE)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_EXP_NONE)  {	  if    (last    ==    NUMBER_CHAR_EXP_SIGN)    {    	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  if  (p  ==  NUMBER_CHAR_SIGN)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (p  ==  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (p  ==  NUMBER_CHAR_SIGN)  {	  if    (pos    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  if  (p  ==  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (p  ==  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (p  ==  NUMBER_CHAR_EXP_SIGN)  {	  if    (pos    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	5	None	replace
35	[BUG]  [BUGGY]  if  (negative  ||  last  <  =  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  <  =  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  <  =  NUMBER_CHAR_EXP_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
36	[BUG]  [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_DECIMAL)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  ==  NUMBER_CHAR_DECIMAL)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  ==  NUMBER_CHAR_DECIMAL)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
37	[BUG]  [BUGGY]  if  (negative  ||  last  >  NUMBER_CHAR_SIGN)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  >  NUMBER_CHAR_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  >  NUMBER_CHAR_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  int  lineNumber  =  stack.size();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =  stack.size();  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =  stack.size();	      	non-compiled	[CE]  	6	None	replace
39	[BUG]  [BUGGY]  p  =  pos;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  p  =  pos;  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	p  =  pos;	      	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  pos  =  pos  +  1;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  pos  =  pos  +  1;  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	pos  =  pos  +  1;	      	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  int  lineNumber  =  stack.size()  -  1;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =  stack.size()  -  1;  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =  stack.size()  -  1;	      	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  int  lineNumber  =  stack.length();  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  int  lineNumber  =  stack.length();  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	int  lineNumber  =  stack.length();	      	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  if  (p  ==  0)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (p  ==  0)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (p  ==  0)  {	  if    (pos    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  last  =  p  +  1;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  last  =  p  +  1;  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	last  =  p  +  1;	      	non-compiled	[CE]  	6	None	replace
45	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  c;  }  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  c;  }  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  c;  }	      	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  if(p  >  0)  {  if(!fillBuffer(pos  +  1))  {  break;  }  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(p  >  0)  {  if(!fillBuffer(pos  +  1))  {  break;  }  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(p  >  0)  {  if(!fillBuffer(pos  +  1))  {  break;  }	      	non-compiled	[CE]  	6	None	replace
47	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  buffer[pos  +  i]  =  c;  }  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  buffer[pos  +  i]  =  c;  }  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(p  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  buffer[pos  +  i]  =  c;  }	      	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '.';  }  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '.';  }  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '.';  }	      	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '-';  }  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '-';  }  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(p  >  0)  {  for(int  i  =  0;  i  <  limit;  ++i)  {  buffer[pos  +  i]  =  '-';  }	      	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_DIGIT)  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_DIGIT)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_EXP_DIGIT)  {	  if    (last    ==    NUMBER_CHAR_FRACTION_DIGIT)    {    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_E)  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (last  ==  NUMBER_CHAR_EXP_E)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (last  ==  NUMBER_CHAR_EXP_E)  {	  if    (last    <    =    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	4	None	replace
52	[BUG]  [BUGGY]  if  (negative  ||  last  <  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if  (negative  ||  last  <  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if  (negative  ||  last  <  NUMBER_CHAR_EXP_SIGN)  {	  if    (negative    ||    last    ==    NUMBER_CHAR_SIGN)    {    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  if(last!=  NUMBER_CHAR_EXP_SIGN)  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(last!=  NUMBER_CHAR_EXP_SIGN)  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(last!=  NUMBER_CHAR_EXP_SIGN)  {	  if    (last    ==    NUMBER_CHAR_EXP_SIGN)    {    	non-compiled	[CE]  	7	None	replace
54	[BUG]  [BUGGY]  if(negative  ||  c  ==  '-')  {  [CE]  [FE]              ComparisonFailure    [CONTEXT]    if  (!fillBuffer(i  +  1))  {  break;  }  p  =  pos;  l  =  limit;  }  char  c  =  buffer[p  +  i];  switch  (c)  {  case  '-':    [BUGGY]  if(negative  ||  c  ==  '-')  {  [BUGGY]    negative  =  true;  last  =  NUMBER_CHAR_SIGN;  continue;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E)  {  last  =  NUMBER_CHAR_EXP_SIGN;  continue;  }  return  PEEKED_NONE;  case  '+':  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	if(negative  ||  c  ==  '-')  {	  if    (negative)    {    	non-compiled	[CE]  	10	None	replace
