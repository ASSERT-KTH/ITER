bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  Long.MIN_VALUE;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
2	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  Long.MAX_VALUE;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
3	[BUG]  [BUGGY]  pos  +=  length;  [CE]  [FE]        ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  length;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  length;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
4	[BUG]  [BUGGY]  pos  +=  PEEKED_LONG;  [CE]  [FE]          ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  PEEKED_LONG;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_LONG;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
5	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN;  [CE]  [FE]            ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_SIGN;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
6	[BUG]  [BUGGY]  pos  +=  PEEKED_NUMBERLength;  [CE]  [FE]              ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  PEEKED_NUMBERLength;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NUMBERLength;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
7	[BUG]  [BUGGY]  pos  +=  long.length;  [CE]  [FE]                ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  long.length;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  long.length;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]    [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	  	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
9	[BUG]  [BUGGY]  pos  +=  long;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  long;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  long;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
10	[BUG]  [BUGGY]  pos  +=  shortNumberLength;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  shortNumberLength;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  shortNumberLength;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
11	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
12	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_LONG;  [CE]  [FE]      ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  NUMBER_CHAR_LONG;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_LONG;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
13	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_DIGIT;  [CE]  [FE]        ComparisonFailure  [CONTEXT]  last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  [BUGGY]  pos  +=  NUMBER_CHAR_DIGIT;  [BUGGY]  return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_DIGIT;	pos  +=  i;  	non-compiled	[CE]  	19	None	replace
