bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  +  1;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
2	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  -  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  -  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  -  1;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  int  pos  +=  Long.MAX_VALUE;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  int  pos  +=  Long.MAX_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	int  pos  +=  Long.MAX_VALUE;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
4	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedLong  =  Long.MIN_VALUE;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedLong  =  Long.MIN_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  ||  peekedLong  =  Long.MIN_VALUE;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
5	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedLong.length()  >  Long.MAX_VALUE;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedLong.length()  >  Long.MAX_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  ||  peekedLong.length()  >  Long.MAX_VALUE;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
6	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  +  1;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_SIGN  +  1;	  pos    +=    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_NONE;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_NONE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_NONE;	  pos    +=    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	5	None	replace
8	[BUG]  [BUGGY]  pos  +=  peekedLong;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  peekedLong;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  peekedLong;	  pos    +=    length;    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  pos  +=  peekedNumberLength;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  peekedNumberLength;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  peekedNumberLength;	  pos    +=    length;    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  pos  +=  peekedLong.length;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  peekedLong.length;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  peekedLong.length;	  pos    +=    length;    	non-compiled	[CE]  	3	None	replace
11	[BUG]  [BUGGY]  pos  +=  length  -  1;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  length  -  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  length  -  1;	  pos    +=    length;    	non-compiled	[CE]  	3	None	replace
12	[BUG]  [BUGGY]  pos  +=  longLength;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  longLength;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  longLength;	  pos    +=    long;    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  peekedNumberLength  =  i;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  peekedNumberLength  =  i;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	peekedNumberLength  =  i;	      	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }	      	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  int  i  =  pathIndices.size();  peekedNumberLength  =  i;  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  int  i  =  pathIndices.size();  peekedNumberLength  =  i;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	int  i  =  pathIndices.size();  peekedNumberLength  =  i;	      	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  }  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  }	      	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  int  i  =  pathIndices.size();  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  int  i  =  pathIndices.size();  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	int  i  =  pathIndices.size();	      	non-compiled	[CE]  	8	None	replace
18	[BUG]  [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedLong!=  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }	      	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  pos  +=  PEEKED_NUMBER;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_NUMBER;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NUMBER;	  pos    +=    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
20	[BUG]  [BUGGY]  pos  +=  PEEKED_NUMBERLENGTH;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_NUMBERLENGTH;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NUMBERLENGTH;	  pos    +=    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
21	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  +  1;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  +  1;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
23	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  -  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  -  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  -  1;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
24	[BUG]  [BUGGY]  int  pos  +=  Long.MIN_VALUE;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  int  pos  +=  Long.MIN_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	int  pos  +=  Long.MIN_VALUE;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
25	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  ||  Long.MAX_VALUE;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  ||  Long.MAX_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  ||  Long.MAX_VALUE;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
26	[BUG]  [BUGGY]  pos  +=  long.MIN_VALUE;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  long.MIN_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  long.MIN_VALUE;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  pos  +=  PEEKED_BUFFERED;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_BUFFERED;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_BUFFERED;	  pos    +=    PEEKED_LONG;    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  pos  +=  PEEKED_LONG.length;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_LONG.length;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_LONG.length;	  pos    +=    PEEKED_LONG;    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  pos  +=  PEEKED_NUMBER_LONG;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_NUMBER_LONG;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NUMBER_LONG;	  pos    +=    PEEKED_NUMBERLength;    	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  pos  +=  PEEKED_NUMBERLENGTH  +  1;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_NUMBERLENGTH  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NUMBERLENGTH  +  1;	  pos    +=    PEEKED_NUMBERLength;    	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  pos  +=  longNumberLength;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  longNumberLength;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  longNumberLength;	  pos    +=    shortNumberLength;    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  pos  +=  shortNumberLength  +  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  shortNumberLength  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  shortNumberLength  +  1;	  pos    +=    shortNumberLength;    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  pos  +=  size;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  size;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  size;	  pos    +=    shortNumberLength;    	non-compiled	[CE]  	10	None	replace
34	[BUG]  [BUGGY]  pos  +=  long.length  -  1;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  long.length  -  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  long.length  -  1;	  pos    +=    long.length;    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  pos  +=  long.length  +  1;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  long.length  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  long.length  +  1;	  pos    +=    long.length;    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }	      	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  if(peekedNumberLength!=  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedNumberLength!=  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedNumberLength!=  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }	      	non-compiled	[CE]  	8	None	replace
38	[BUG]  [BUGGY]  if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  }  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedNumberLength  ==  Long.MIN_VALUE)  {  peekedNumberLength  =  i;  }	      	non-compiled	[CE]  	8	None	replace
39	[BUG]  [BUGGY]  pos  +=  short.length;  [CE]  empty  character  literal  [FE]                    ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  short.length;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  short.length;	  pos    +=    long.length;    	non-compiled	[CE]  empty  character  literal	7	None	replace
40	[BUG]  [BUGGY]  pos  +=  PEEKED_NONE;  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  PEEKED_NONE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  PEEKED_NONE;	  pos    +=    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  empty  character  literal	13	None	replace
41	[BUG]  [BUGGY]  pos  +=  NUMBER_LONG;  [CE]  empty  character  literal  [FE]              ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_LONG;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_LONG;	  pos    +=    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  empty  character  literal	13	None	replace
42	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  +  peekedLong;  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  +  peekedLong;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  +  peekedLong;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  empty  character  literal	1	None	replace
43	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  +  2;  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  +  2;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  +  2;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  empty  character  literal	1	None	replace
44	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  -(peekedLong);  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  -(peekedLong);  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  -(peekedLong);	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  empty  character  literal	1	None	replace
45	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [CE]  empty  character  literal  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  empty  character  literal	2	None	replace
46	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  +  peekedLong;  [CE]  empty  character  literal  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  +  peekedLong;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  +  peekedLong;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  empty  character  literal	2	None	replace
47	[BUG]  [BUGGY]  pos  +=  Long.parseLong(peekedLong);  [CE]  empty  character  literal  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.parseLong(peekedLong);  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.parseLong(peekedLong);	  pos    +=    long;    	non-compiled	[CE]  empty  character  literal	9	None	replace
48	[BUG]  [BUGGY]  pos  +=  peekedLength;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  peekedLength;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  peekedLength;	  pos    +=    length;    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_LENGTH;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_LENGTH;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_LENGTH;	  pos    +=    PEEKED_NUMBERLength;    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_DIGIT  +  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_DIGIT  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_DIGIT  +  1;	  pos    +=    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	13	None	replace
51	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  *  NUMBER_CHAR_EXP_E;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  *  NUMBER_CHAR_EXP_E;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_SIGN  *  NUMBER_CHAR_EXP_E;	  pos    +=    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedLong  ==  null)  {  peekedNumberLength  =  i;  return  PEEKED_LONG;  }	      	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_LONG;  }  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_LONG;  }  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	if(peekedLong!=  null)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_LONG;  }	      	non-compiled	[CE]  	8	None	replace
54	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_LONG  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_LONG  +  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_LONG  +  1;	  pos    +=    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
55	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  NUMBER_CHAR_EXP_DIGIT;	  pos    +=    PEEKED_NUMBERLength;    	non-compiled	[CE]  	6	None	replace
56	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_EXP_SIGN;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
57	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong!=  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong!=  NUMBER_CHAR_EXP_SIGN;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  &&  peekedLong!=  NUMBER_CHAR_EXP_SIGN;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_DECIMAL;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_DECIMAL;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MIN_VALUE  &&  peekedLong  <  =  NUMBER_CHAR_DECIMAL;	  pos    +=    Long.MIN_VALUE;    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  pos  +=  shortNumberLength  -  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  shortNumberLength  -  1;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  shortNumberLength  -  1;	  pos    +=    shortNumberLength;    	non-compiled	[CE]  	10	None	replace
60	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  *  Long.MAX_VALUE;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  *  Long.MAX_VALUE;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  *  Long.MAX_VALUE;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
61	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE  -  2;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    last  =  NUMBER_CHAR_FRACTION_DIGIT;  }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;    [BUGGY]  pos  +=  Long.MAX_VALUE  -  2;  [BUGGY]    return  peeked  =  PEEKED_LONG;  }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	pos  +=  Long.MAX_VALUE  -  2;	  pos    +=    Long.MAX_VALUE;    	non-compiled	[CE]  	2	None	replace
