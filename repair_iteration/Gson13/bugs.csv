bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] result = Long.toString(peekedLong); [FE] ComparisonFailure [CONTEXT] if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); } else if (p == PEEKED_BUFFERED) { result = peekedString; peekedString = null; } else if (p == PEEKED_LONG) { [BUGGY] result = Long.toString(peekedLong); [BUGGY] } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	1.0	820	820	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); } else if (p == PEEKED_BUFFERED) { result = peekedString; peekedString = null; } else if (p == PEEKED_LONG) { [BUGGY] [BUGGY] result = Long.toString(peekedLong); } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; } [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	1.0	820	820	1	add	
3	[BUG] [BUGGY] } else if (p == PEEKED_LONG) { [FE] ComparisonFailure [CONTEXT] String result; if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); } else if (p == PEEKED_BUFFERED) { result = peekedString; peekedString = null; [BUGGY] } else if (p == PEEKED_LONG) { [BUGGY] result = Long.toString(peekedLong); } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5773502691896258	819	819	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] String result; if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); } else if (p == PEEKED_BUFFERED) { result = peekedString; peekedString = null; [BUGGY] [BUGGY] } else if (p == PEEKED_LONG) { result = Long.toString(peekedLong); } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } peeked = PEEKED_NONE; pathIndices[stackSize - 1]++; return result; [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5773502691896258	819	819	1	add	
5	[BUG] [BUGGY] } else if (p == PEEKED_BUFFERED) { [FE] ComparisonFailure [CONTEXT] if (p == PEEKED_NONE) { p = doPeek(); } String result; if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); [BUGGY] } else if (p == PEEKED_BUFFERED) { [BUGGY] result = peekedString; peekedString = null; } else if (p == PEEKED_LONG) { result = Long.toString(peekedLong); } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5	816	816	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (p == PEEKED_NONE) { p = doPeek(); } String result; if (p == PEEKED_UNQUOTED) { result = nextUnquotedValue(); } else if (p == PEEKED_SINGLE_QUOTED) { result = nextQuotedValue('\''); } else if (p == PEEKED_DOUBLE_QUOTED) { result = nextQuotedValue('"'); [BUGGY] [BUGGY] } else if (p == PEEKED_BUFFERED) { result = peekedString; peekedString = null; } else if (p == PEEKED_LONG) { result = Long.toString(peekedLong); } else if (p == PEEKED_NUMBER) { result = new String(buffer, pos, peekedNumberLength); pos += peekedNumberLength; } else { throw new IllegalStateException("Expected a string but was " + peek() + locationString()); } [CLASS] JsonReader 1 [METHOD] nextString [RETURN_TYPE] String  [VARIABLES] boolean fitsInLong lenient negative Reader in int[] pathIndices stack String keyword keywordUpper peekedString result String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.5	816	816	1	add	
7	[BUG] [BUGGY] return JsonToken.NUMBER; [FE] ComparisonFailure [CONTEXT] return JsonToken.BOOLEAN; case PEEKED_NULL: return JsonToken.NULL; case PEEKED_SINGLE_QUOTED: case PEEKED_DOUBLE_QUOTED: case PEEKED_UNQUOTED: case PEEKED_BUFFERED: return JsonToken.STRING; case PEEKED_LONG: case PEEKED_NUMBER: [BUGGY] return JsonToken.NUMBER; [BUGGY] case PEEKED_EOF: return JsonToken.END_DOCUMENT; default: throw new AssertionError(); } } [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	453	453	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] return JsonToken.BOOLEAN; case PEEKED_NULL: return JsonToken.NULL; case PEEKED_SINGLE_QUOTED: case PEEKED_DOUBLE_QUOTED: case PEEKED_UNQUOTED: case PEEKED_BUFFERED: return JsonToken.STRING; case PEEKED_LONG: case PEEKED_NUMBER: [BUGGY] [BUGGY] return JsonToken.NUMBER; case PEEKED_EOF: return JsonToken.END_DOCUMENT; default: throw new AssertionError(); } } [CLASS] JsonReader 1 [METHOD] peek [RETURN_TYPE] JsonToken  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME limit lineNumber lineStart p peeked peekedNumberLength pos stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.4082482904638631	453	453	1	add	
9	[BUG] [BUGGY] if (last == NUMBER_CHAR_NONE) { [FE] ComparisonFailure [CONTEXT] if (!fillBuffer(i + 1)) { break; } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': [BUGGY] if (last == NUMBER_CHAR_NONE) { [BUGGY] negative = true; last = NUMBER_CHAR_SIGN; continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (!fillBuffer(i + 1)) { break; } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': [BUGGY] [BUGGY] if (last == NUMBER_CHAR_NONE) { negative = true; last = NUMBER_CHAR_SIGN; continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	672	672	1	add	
11	[BUG] [BUGGY] negative = true; [FE] ComparisonFailure [CONTEXT] break; } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { [BUGGY] negative = true; [BUGGY] last = NUMBER_CHAR_SIGN; continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	673	673	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] break; } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { [BUGGY] [BUGGY] negative = true; last = NUMBER_CHAR_SIGN; continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	673	673	1	add	
13	[BUG] [BUGGY] last = NUMBER_CHAR_SIGN; [FE] ComparisonFailure [CONTEXT] } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { negative = true; [BUGGY] last = NUMBER_CHAR_SIGN; [BUGGY] continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { negative = true; [BUGGY] [BUGGY] last = NUMBER_CHAR_SIGN; continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	674	674	1	add	
15	[BUG] [BUGGY] continue; [FE] ComparisonFailure [CONTEXT] p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { negative = true; last = NUMBER_CHAR_SIGN; [BUGGY] continue; [BUGGY] } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	675	675	1	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] p = pos; l = limit; } char c = buffer[p + i]; switch (c) { case '-': if (last == NUMBER_CHAR_NONE) { negative = true; last = NUMBER_CHAR_SIGN; [BUGGY] [BUGGY] continue; } else if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; } return PEEKED_NONE; case '+': if (last == NUMBER_CHAR_EXP_E) { last = NUMBER_CHAR_EXP_SIGN; continue; [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.31622776601683794	675	675	1	add	
17	[BUG] [BUGGY] peekedLong = negative ? value : -value; [FE] ComparisonFailure [CONTEXT] } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { [BUGGY] peekedLong = negative ? value : -value; [BUGGY] pos += i; return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else if (last == NUMBER_CHAR_DECIMAL) { last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { [BUGGY] [BUGGY] peekedLong = negative ? value : -value; pos += i; return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	732	732	1	add	
19	[BUG] [BUGGY] pos += i; [FE] ComparisonFailure [CONTEXT] last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; [BUGGY] pos += i; [BUGGY] return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] last = NUMBER_CHAR_FRACTION_DIGIT; } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; [BUGGY] [BUGGY] pos += i; return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	733	733	1	add	
21	[BUG] [BUGGY] return peeked = PEEKED_LONG; [FE] ComparisonFailure [CONTEXT] } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; [BUGGY] return peeked = PEEKED_LONG; [BUGGY] } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else if (last == NUMBER_CHAR_EXP_E || last == NUMBER_CHAR_EXP_SIGN) { last = NUMBER_CHAR_EXP_DIGIT; } } }  if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) { peekedLong = negative ? value : -value; pos += i; [BUGGY] [BUGGY] return peeked = PEEKED_LONG; } else if (last == NUMBER_CHAR_DIGIT || last == NUMBER_CHAR_FRACTION_DIGIT || last == NUMBER_CHAR_EXP_DIGIT) { peekedNumberLength = i; return peeked = PEEKED_NUMBER; } else { return PEEKED_NONE; } } [CLASS] JsonReader 1 [METHOD] peekNumber [RETURN_TYPE] int  [VARIABLES] boolean fitsInLong lenient negative char c Reader in int[] pathIndices stack String keyword keywordUpper peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c i l last length limit lineNumber lineStart p peekStack peeked peekedNumberLength peeking pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	add	
23	[BUG] [BUGGY] return result; [FE] ComparisonFailure [CONTEXT] pos--; // Don't consume the first character in a literal value. } int result = peekKeyword(); if (result != PEEKED_NONE) { return result; } result = peekNumber(); if (result != PEEKED_NONE) { [BUGGY] return result; [BUGGY] } if (!isLiteral(buffer[pos])) { throw syntaxError("Expected value"); } checkLenient(); return peeked = PEEKED_UNQUOTED; } [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] pos--; // Don't consume the first character in a literal value. } int result = peekKeyword(); if (result != PEEKED_NONE) { return result; } result = peekNumber(); if (result != PEEKED_NONE) { [BUGGY] [BUGGY] return result; } if (!isLiteral(buffer[pos])) { throw syntaxError("Expected value"); } checkLenient(); return peeked = PEEKED_UNQUOTED; } [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.22941573387056174	586	586	1	add	
