bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  pos  -  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  i;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
2	[BUG]  [BUGGY]  return  i  -  peekedLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  peekedLength;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  peekedLength;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
3	[BUG]  [BUGGY]  peekedNumberLength  -  i;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  -  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  -  i;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
4	[BUG]  [BUGGY]  return  peekedLength  -  pos;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  pos;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
5	[BUG]  [BUGGY]  return  peekedNumberLength  -  pos;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  pos;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
6	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_LONG;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_LONG;	  return    peekedLong    =    NUMBER;    	non-compiled	[CE]  	17	None	replace
7	[BUG]  [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos  +  1]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos  +  1]);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.parseLong(pathNames[pos  +  1]);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
8	[BUG]  [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos]  +  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos]  +  1);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.parseLong(pathNames[pos]  +  1);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
9	[BUG]  [BUGGY]  return  peekedNumberLength  =  Long.parseLong(pathNames[pos]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  Long.parseLong(pathNames[pos]);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  Long.parseLong(pathNames[pos]);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
10	[BUG]  [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos]  -  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos]  -  1);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.parseLong(pathNames[pos]  -  1);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
11	[BUG]  [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos  -  1]);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos  -  1]);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.parseLong(pathNames[pos  -  1]);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
12	[BUG]  [BUGGY]  return  i  =  Long.parseLong(pathNames[pos]);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  Long.parseLong(pathNames[pos]);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  Long.parseLong(pathNames[pos]);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
13	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
14	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
15	[BUG]  [BUGGY]  pendLength  =  i;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
16	[BUG]  [BUGGY]  peakedNumberLength  =  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peakedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peakedNumberLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
17	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
18	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
19	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
20	[BUG]  [BUGGY]  return  peeked  =  NUMBER_CHAR_NONE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_CHAR_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_CHAR_NONE;	  return    peeked    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	112	None	replace
21	[BUG]  [BUGGY]  return  pos  -  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
22	[BUG]  [BUGGY]  return  i  -  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
23	[BUG]  [BUGGY]  peekedNumberLength  -  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  -  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
24	[BUG]  [BUGGY]  return  peekedNumberLength  /  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  /  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  /  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
25	[BUG]  [BUGGY]  return  peekedNumberLength  -  2;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  2;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  2;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
26	[BUG]  [BUGGY]  return  peekedLong  =  i  -  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  i  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  i  -  1;	  return    peekedLong    -    1;    	non-compiled	[CE]  	14	None	replace
27	[BUG]  [BUGGY]  return  last  -  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  1;	  return    peekedLong    -    1;    	non-compiled	[CE]  	14	None	replace
28	[BUG]  [BUGGY]  return  i  =  PEEKED_BUFFERED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  PEEKED_BUFFERED;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
29	[BUG]  [BUGGY]  return  pos  <  =  PEEKED_BUFFERED;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  PEEKED_BUFFERED;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
30	[BUG]  [BUGGY]  return  pos  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_CHAR_EXP_SIGN;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
31	[BUG]  [BUGGY]  return  pos  <  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  NUMBER_CHAR_SIGN;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
32	[BUG]  [BUGGY]  return  pos  =  PEEKED_EOF;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  PEEKED_EOF;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
33	[BUG]  [BUGGY]  return  pos  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_CHAR_SIGN;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
34	[BUG]  [BUGGY]  return  pos  <  =  PEEKED_BUCKET;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  PEEKED_BUCKET;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  PEEKED_BUCKET;	  return    pos    =    PEEKED_BUCKET;    	non-compiled	[CE]  	68	None	replace
35	[BUG]  [BUGGY]  return  pos  <  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  NUMBER_CHAR_EXP_SIGN;	  return    pos    =    PEEKED_BUCKET;    	non-compiled	[CE]  	68	None	replace
36	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  -  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  -  1;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
37	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  Long.MAX_VALUE;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  Long.MAX_VALUE;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
38	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  +  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  +  1;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
39	[BUG]  [BUGGY]  return  pos  =  Long.MIN_VALUE;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  Long.MIN_VALUE;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
40	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
41	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
42	[BUG]  [BUGGY]  return  PEEKED_NUMBERLength;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NUMBERLength;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NUMBERLength;	  return    peekedNumber;    	non-compiled	[CE]  	53	None	replace
43	[BUG]  [BUGGY]  return  PEEKED_LONG;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_LONG;	  return    peekedNumber;    	non-compiled	[CE]  	53	None	replace
44	[BUG]  [BUGGY]  return  peekedLong  =  PEEKED_BOOLEAN;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  PEEKED_BOOLEAN;	  return    peeked    =    PEEKED_BOOLEAN;    	non-compiled	[CE]  	51	None	replace
45	[BUG]  [BUGGY]  return  peekedLength  =  PEEKED_BOOLEAN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  PEEKED_BOOLEAN;	  return    peeked    =    PEEKED_BOOLEAN;    	non-compiled	[CE]  	51	None	replace
46	[BUG]  [BUGGY]  return  pos  =  0;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  0;	  return    peekedLength    =    0;    	non-compiled	[CE]  	76	None	replace
47	[BUG]  [BUGGY]  return  i  =  0;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  0;	  return    peekedLength    =    0;    	non-compiled	[CE]  	76	None	replace
48	[BUG]  [BUGGY]  return  peekedNumberLength  =  0;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  0;	  return    peekedLength    =    0;    	non-compiled	[CE]  	76	None	replace
49	[BUG]  [BUGGY]  return  peekedLength  <  =  0;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  0;	  return    peekedLength    =    0;    	non-compiled	[CE]  	76	None	replace
50	[BUG]  [BUGGY]  return  pos  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  +  1;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
51	[BUG]  [BUGGY]  return  PEEKED_NUMBER  +  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NUMBER  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NUMBER  +  1;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
52	[BUG]  [BUGGY]  return  peekedLong  +  pos;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  +  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  +  pos;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
53	[BUG]  [BUGGY]  return  PEEKED_LONG  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_LONG  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_LONG  +  1;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
54	[BUG]  [BUGGY]  return  peekedLong  =  Long.MAX_VALUE;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MAX_VALUE;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
55	[BUG]  [BUGGY]  return  peekedLength  =  Long.MAX_VALUE  -  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.MAX_VALUE  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.MAX_VALUE  -  1;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
56	[BUG]  [BUGGY]  return  pos  =  Long.MAX_VALUE;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  Long.MAX_VALUE;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
57	[BUG]  [BUGGY]  return  peekedNumberLength  =  Long.MAX_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  Long.MAX_VALUE;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
58	[BUG]  [BUGGY]  return  peekedLength  >  PEEKED_BUFFERED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  PEEKED_BUFFERED;	  return    peekedLength    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	30	None	replace
59	[BUG]  [BUGGY]  return  peekedLength  <  =  PEEKED_BUFFERED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  PEEKED_BUFFERED;	  return    peekedLength    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	30	None	replace
60	[BUG]  [BUGGY]  return  peekedNumberLength  =  PEEKED_BUFFERED;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  PEEKED_BUFFERED;	  return    peekedLength    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	30	None	replace
61	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
62	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
63	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
64	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
65	[BUG]  [BUGGY]  buckedNumberLength  =  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  buckedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	buckedNumberLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
66	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	87	None	replace
67	[BUG]  [BUGGY]  return  pos  =  NUMBER_CHAR_LONG;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_CHAR_LONG;	  return    i    =    PEEKED_LONG;    	non-compiled	[CE]  	75	None	replace
68	[BUG]  [BUGGY]  return  pos  =  NUMBER_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_LONG;	  return    i    =    PEEKED_LONG;    	non-compiled	[CE]  	75	None	replace
69	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
70	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
71	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumber;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
72	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
73	[BUG]  [BUGGY]  return  peekedNumberLength  =  pos;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  pos;	  return    peekedLength    =    pos;    	non-compiled	[CE]  	42	None	replace
74	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
75	[BUG]  [BUGGY]  pendNumberLength  =  i;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  =  i;	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
76	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
77	[BUG]  [BUGGY]  if(pos  >=  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
78	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
79	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_DOUBLE;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_DOUBLE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_DOUBLE;	  return    peeked    =    PEEKED_DOUBLE;    	non-compiled	[CE]  	50	None	replace
80	[BUG]  [BUGGY]  return  pos  -  PEEKED_BOOLEAN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  PEEKED_BOOLEAN;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
81	[BUG]  [BUGGY]  return  peekedNumberLength  -  PEEKED_BOOLEAN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  PEEKED_BOOLEAN;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
82	[BUG]  [BUGGY]  return  last  -  PEEKED_BOOLEAN;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  PEEKED_BOOLEAN;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
83	[BUG]  [BUGGY]  return  PEEKED_BOOLEAN  -  peekedLong;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_BOOLEAN  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_BOOLEAN  -  peekedLong;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
84	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_INCOMPLETE_INTEGER;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_INCOMPLETE_INTEGER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_INCOMPLETE_INTEGER;	  return    peekedLong    =    NUMBER_NUMBER;    	non-compiled	[CE]  	65	None	replace
85	[BUG]  [BUGGY]  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  pos  +  1;	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
86	[BUG]  [BUGGY]  peekedNumberLength  -=  i;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  -=  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  -=  i;	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
87	[BUG]  [BUGGY]  peekedNumberLength  =  0;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  0;	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
88	[BUG]  [BUGGY]  peekedNumberLength  =  Long.MIN_VALUE;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  Long.MIN_VALUE;	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
89	[BUG]  [BUGGY]  peekedNumberLength  -=  pos;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  -=  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  -=  pos;	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
90	[BUG]  [BUGGY]  return  pos  <  =  i;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  i;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
91	[BUG]  [BUGGY]  return  peekedLength  <  =  pos;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  pos;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
92	[BUG]  [BUGGY]  return  peekedLength  <  i;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  i;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
93	[BUG]  [BUGGY]  return  peekedNumberLength  <  =  i;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  <  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  <  =  i;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
94	[BUG]  [BUGGY]  return  peekedLength  <  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
95	[BUG]  [BUGGY]  return  peekedLength  +  i;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  +  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  +  i;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
96	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_LONG;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_LONG;	  return    peekedLong    =    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	107	None	replace
97	[BUG]  [BUGGY]  peekedNumber  =  pos;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  pos;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
98	[BUG]  [BUGGY]  peekedNumber  =  PEEKED_NUMBER;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  PEEKED_NUMBER;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
99	[BUG]  [BUGGY]  peekedNumber  =  Long.MIN_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  Long.MIN_VALUE;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
100	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_DECIMAL;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_DECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_DECIMAL;	  return    peekedLong    =    NUMBER_CHAR_DECIMAL;    	non-compiled	[CE]  	29	None	replace
101	[BUG]  [BUGGY]  return  pos  >  PEEKED_LONG;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  >  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  >  PEEKED_LONG;	  return    peekedLength    >    PEEKED_LONG;    	non-compiled	[CE]  	43	None	replace
102	[BUG]  [BUGGY]  return  peekedNumberLength  >  PEEKED_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  >  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  >  PEEKED_LONG;	  return    peekedLength    >    PEEKED_LONG;    	non-compiled	[CE]  	43	None	replace
103	[BUG]  [BUGGY]  return  peekedLength  >=  PEEKED_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >=  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >=  PEEKED_LONG;	  return    peekedLength    >    PEEKED_LONG;    	non-compiled	[CE]  	43	None	replace
104	[BUG]  [BUGGY]  return  peekedLength  >  pos;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  pos;	  return    peekedLength    >    PEEKED_LONG;    	non-compiled	[CE]  	43	None	replace
105	[BUG]  [BUGGY]  return  peekedLength  =  PEEKED_NUMBER;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  PEEKED_NUMBER;	  return    peeked    =    PEEKED_NUMBER;    	non-compiled	[CE]  	69	None	replace
106	[BUG]  [BUGGY]  peechedNumberLength  =  i;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peechedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peechedNumberLength  =  i;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    pos;    }    else    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	6	None	replace
107	[BUG]  [BUGGY]  peedNumberLength  =  i;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peedNumberLength  =  i;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    pos;    }    else    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	6	None	replace
108	[BUG]  [BUGGY]  return  peekedNumberLength  =  Long.MIN_VALUE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  Long.MIN_VALUE;	  return    peekedNumberLength    =    i;    	non-compiled	[CE]  	20	None	replace
109	[BUG]  [BUGGY]  return  pos  =  i;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  i;	  return    peekedNumberLength    =    i;    	non-compiled	[CE]  	20	None	replace
110	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_DIGIT;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_DIGIT;	  return    peekedLong    =    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	90	None	replace
111	[BUG]  [BUGGY]  return  i  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  +  1;	  return    peekedNumberLength    +    1;    	non-compiled	[CE]  	56	None	replace
112	[BUG]  [BUGGY]  peekedNumberLength  +=  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  +=  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  +=  1;	  return    peekedNumberLength    +    1;    	non-compiled	[CE]  	56	None	replace
113	[BUG]  [BUGGY]  pos  +=  Long.MIN_VALUE;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  Long.MIN_VALUE;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
114	[BUG]  [BUGGY]  pos  +=  Long.MAX_VALUE;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  Long.MAX_VALUE;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
115	[BUG]  [BUGGY]  pos  +=  length;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  length;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  length;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
116	[BUG]  [BUGGY]  pos  +=  long.length;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  long.length;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  long.length;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
117	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_SIGN;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
118	[BUG]  [BUGGY]  pos  +=  long;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  long;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  long;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
119	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_LONG;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_LONG;	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
120	[BUG]  [BUGGY]  pendNumberLength  =  pos;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  =  pos;	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
121	[BUG]  [BUGGY]  return  PEEKED_BUFFERED;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_BUFFERED;	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
122	[BUG]  [BUGGY]  return  pos  /  PEEKED_LONG;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  /  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  /  PEEKED_LONG;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
123	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_CHAR_SIGN;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_CHAR_SIGN;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
124	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
125	[BUG]  [BUGGY]  return  peekedNumberLength  /  PEEKED_LONG;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  /  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  /  PEEKED_LONG;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
126	[BUG]  [BUGGY]  return  peekedLong  /  PEEKED_BUFFERED;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  PEEKED_BUFFERED;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
127	[BUG]  [BUGGY]  return  PEEKED_LONG  /  peekedLong;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_LONG  /  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_LONG  /  peekedLong;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
128	[BUG]  [BUGGY]  return  peekedLong  /  PEEKED_NUMBER;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  PEEKED_NUMBER;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
129	[BUG]  [BUGGY]  return  peekedLength  =  Long.MIN_VALUE  -  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.MIN_VALUE  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.MIN_VALUE  -  1;	  return    peekedLength    =    Long.MIN_VALUE;    	non-compiled	[CE]  	49	None	replace
130	[BUG]  [BUGGY]  return  peekedLength  -  Long.MIN_VALUE;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  Long.MIN_VALUE;	  return    peekedLength    =    Long.MIN_VALUE;    	non-compiled	[CE]  	49	None	replace
131	[BUG]  [BUGGY]  return  i  =  Long.MIN_VALUE;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  Long.MIN_VALUE;	  return    peekedLength    =    Long.MIN_VALUE;    	non-compiled	[CE]  	49	None	replace
132	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_EXP_DIGIT;	  return    peeked    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	109	None	replace
133	[BUG]  [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;	  return    peeked    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	109	None	replace
134	[BUG]  [BUGGY]  return  peekedLength  =  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  NUMBER_CHAR_EXP_DIGIT;	  return    peeked    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	109	None	replace
135	[BUG]  [BUGGY]  return  pos  >  0;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  >  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  >  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
136	[BUG]  [BUGGY]  return  peekedLong  >  0;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  >  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  >  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
137	[BUG]  [BUGGY]  return  peekedNumberLength  >  0;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  >  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  >  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
138	[BUG]  [BUGGY]  return  i  >  0;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  >  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  >  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
139	[BUG]  [BUGGY]  return  peekedLength  >=  0;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >=  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >=  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	throw  new  IllegalArgumentException( " ");	  return    0;    	non-compiled	[CE]  	54	None	replace
141	[BUG]  [BUGGY]  if(pos  >  0)  {  return  0;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  0;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  0;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
142	[BUG]  [BUGGY]  if(pos  <  0)  {  return  0;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  0;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  0;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
143	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
144	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  ==  -1)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
145	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
146	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
147	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
148	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_NUMBER;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
149	[BUG]  [BUGGY]  while(pos  >=  -1)  {  peekedNumberLength  =  i;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  while(pos  >=  -1)  {  peekedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	while(pos  >=  -1)  {  peekedNumberLength  =  i;	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
150	[BUG]  [BUGGY]  return  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_EXP_SIGN;	  return    pos;    	non-compiled	[CE]  	8	None	replace
151	[BUG]  [BUGGY]  return  NUMBER_CHAR_SIGN;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_SIGN;	  return    pos;    	non-compiled	[CE]  	8	None	replace
152	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	86	None	replace
153	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	86	None	replace
154	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	86	None	replace
155	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	86	None	replace
156	[BUG]  [BUGGY]  return  pos  =   "0 ";  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =   "0 ";  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =   "0 ";	  return    peekedLong    =   "0   ";    	non-compiled	[CE]  	91	None	replace
157	[BUG]  [BUGGY]  return  peekedLong  =  null;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  null;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  null;	  return    peekedLong    =   "0   ";    	non-compiled	[CE]  	91	None	replace
158	[BUG]  [BUGGY]  return  i  =   "0 ";  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =   "0 ";  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =   "0 ";	  return    peekedLong    =   "0   ";    	non-compiled	[CE]  	91	None	replace
159	[BUG]  [BUGGY]  return  peekedLong  =  '0';  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  '0';  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  '0';	  return    peekedLong    =   "0   ";    	non-compiled	[CE]  	91	None	replace
160	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_DOUBLE_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_DOUBLE_QUOTED;	  return    peekedLong    =    NUMBER_DOUBLE_QUOTED;    	non-compiled	[CE]  	64	None	replace
161	[BUG]  [BUGGY]  return  pos  =  NUMBER_DOUBLE_QUOTED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_DOUBLE_QUOTED;	  return    peekedLong    =    NUMBER_DOUBLE_QUOTED;    	non-compiled	[CE]  	64	None	replace
162	[BUG]  [BUGGY]  return  peekedLength  ==  PEEKED_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  ==  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  ==  PEEKED_LONG;	  return    peekedLength    <    =    PEEKED_LONG;    	non-compiled	[CE]  	44	None	replace
163	[BUG]  [BUGGY]  return  peekedLength!=  PEEKED_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength!=  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength!=  PEEKED_LONG;	  return    peekedLength    <    =    PEEKED_LONG;    	non-compiled	[CE]  	44	None	replace
164	[BUG]  [BUGGY]  return  pos  <  =  PEEKED_LONG;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  PEEKED_LONG;	  return    peekedLength    <    =    PEEKED_LONG;    	non-compiled	[CE]  	44	None	replace
165	[BUG]  [BUGGY]  return  peekedLength  <  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    <    =    PEEKED_LONG;    	non-compiled	[CE]  	44	None	replace
166	[BUG]  [BUGGY]  return  peekedLong  =  PEEKED_BOTH;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  PEEKED_BOTH;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  PEEKED_BOTH;	  return    peeked    =    PEEKED_BOTH;    	non-compiled	[CE]  	103	None	replace
167	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_BOTH;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_BOTH;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_BOTH;	  return    peeked    =    PEEKED_BOTH;    	non-compiled	[CE]  	103	None	replace
168	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_QUOTED;	  return    peekedLong    =    PEEKED_DOUBLE_QUOTED;    	non-compiled	[CE]  	104	None	replace
169	[BUG]  [BUGGY]  return  i  -  peekedLong;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  peekedLong;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
170	[BUG]  [BUGGY]  peekedLong  -  i;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  -  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  -  i;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
171	[BUG]  [BUGGY]  peekedLong  -  pos;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  -  pos;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
172	[BUG]  [BUGGY]  pos  -=  i;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  -=  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  -=  i;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
173	[BUG]  [BUGGY]  peeredNumberLength  =  i;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peeredNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peeredNumberLength  =  i;	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
174	[BUG]  [BUGGY]  PeekedNumberLength  =  i;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  PeekedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	PeekedNumberLength  =  i;	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
175	[BUG]  [BUGGY]  piedNumberLength  =  i;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedNumberLength  =  i;	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
176	[BUG]  [BUGGY]  peerLength  =  i;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peerLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peerLength  =  i;	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
177	[BUG]  [BUGGY]  return  i  -  peekedNumberLength;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  peekedNumberLength;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  peekedNumberLength;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
178	[BUG]  [BUGGY]  peekedNumberLength  -  pos;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  -  pos;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
179	[BUG]  [BUGGY]  return  peekedNumberLength  /  i;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  /  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  /  i;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
180	[BUG]  [BUGGY]  return  pos  -  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  NUMBER_CHAR_SIGN;	  return    peekedLong    -    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	24	None	replace
181	[BUG]  [BUGGY]  return  last  -  NUMBER_CHAR_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  NUMBER_CHAR_SIGN;	  return    peekedLong    -    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	24	None	replace
182	[BUG]  [BUGGY]  return  NUMBER_CHAR_SIGN  -  peekedLong;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_SIGN  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_SIGN  -  peekedLong;	  return    peekedLong    -    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	24	None	replace
183	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_SIGN  +  1;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_SIGN  +  1;	  return    peekedLong    -    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	24	None	replace
184	[BUG]  [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
185	[BUG]  [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_LENGTH;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_LENGTH;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  NUMBER_CHAR_LENGTH;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
186	[BUG]  [BUGGY]  peekedNumberLength  +=  i;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  +=  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  +=  i;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
187	[BUG]  [BUGGY]  bucketNumberLength  =  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  bucketNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	bucketNumberLength  =  i;	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
188	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumber;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumber;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
189	[BUG]  [BUGGY]  return  peeked  =  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  PEEKED_DOUBLE_QUOTED;	  return    peeked    =    NUMBER_CHAR_QUOTED;    	non-compiled	[CE]  	108	None	replace
190	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_QUOTED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_QUOTED;	  return    peeked    =    NUMBER_CHAR_QUOTED;    	non-compiled	[CE]  	108	None	replace
191	[BUG]  [BUGGY]  peekedNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
192	[BUG]  [BUGGY]  buckedNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  buckedNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	buckedNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
193	[BUG]  [BUGGY]  peeredNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peeredNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peeredNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
194	[BUG]  [BUGGY]  pendNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
195	[BUG]  [BUGGY]  piedNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
196	[BUG]  [BUGGY]  PeekedNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  PeekedNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	PeekedNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
197	[BUG]  [BUGGY]  return  peekedLong  =  -1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  -1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  -1;	  return    peekedLong    =    0;    	non-compiled	[CE]  	66	None	replace
198	[BUG]  [BUGGY]  last  =  pos;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  pos;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
199	[BUG]  [BUGGY]  last  =  PEEKED_NUMBER;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  PEEKED_NUMBER;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
200	[BUG]  [BUGGY]  last  =  i;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  i;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
201	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_CHAR_SIGN;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
202	[BUG]  [BUGGY]  last  =  peekedNumberLength;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  peekedNumberLength;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  peekedNumberLength;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
203	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_CHAR_EXP_SIGN;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
204	[BUG]  [BUGGY]  last  =  peekedLong;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  peekedLong;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
205	[BUG]  [BUGGY]  return  peekedLong.length  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.length  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.length  -  1;	  return    peekedLength    -    1;    	non-compiled	[CE]  	99	None	replace
206	[BUG]  [BUGGY]  return  peeked  =  NUMBER_NUMBER;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_NUMBER;	  return    peeked    =    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	110	None	replace
207	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
208	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
209	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
210	[BUG]  [BUGGY]  pendNumberLength  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
211	[BUG]  [BUGGY]  return  PEEKED_LONG  -  last;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_LONG  -  last;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_LONG  -  last;	  return    last    -    PEEKED_LONG;    	non-compiled	[CE]  	34	None	replace
212	[BUG]  [BUGGY]  peedNumberLength  =  pos;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peedNumberLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peedNumberLength  =  pos;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    pos;    }    	non-compiled	[CE]  	5	None	replace
213	[BUG]  [BUGGY]  return  pos  -  PEEKED_BUFFERED;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  PEEKED_BUFFERED;	  return    pos    -    PEEKED_LONG;    	non-compiled	[CE]  	32	None	replace
214	[BUG]  [BUGGY]  return  pos  -  PEEKED_LONG  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  PEEKED_LONG  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  PEEKED_LONG  +  1;	  return    pos    -    PEEKED_LONG;    	non-compiled	[CE]  	32	None	replace
215	[BUG]  [BUGGY]  return  peekedLong  =  pos  -  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  pos  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  pos  -  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    -    1;    	non-compiled	[CE]  	26	None	replace
216	[BUG]  [BUGGY]  return  peekedLong  =  last  -  1;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  last  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  last  -  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    -    1;    	non-compiled	[CE]  	26	None	replace
217	[BUG]  [BUGGY]  return  peekedLong  =  value  -  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  value  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  value  -  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    -    1;    	non-compiled	[CE]  	26	None	replace
218	[BUG]  [BUGGY]  return  peekedLong  =  PEEKED_NUMBER  -  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  PEEKED_NUMBER  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  PEEKED_NUMBER  -  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    -    1;    	non-compiled	[CE]  	26	None	replace
219	[BUG]  [BUGGY]  return  peekedLength  /  PEEKED_LONG;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  /  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  /  PEEKED_LONG;	  return    peekedLength    -    PEEKED_LONG;    	non-compiled	[CE]  	74	None	replace
220	[BUG]  [BUGGY]  return  peekedLength  -  PEEKED_BUFFERED;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  PEEKED_BUFFERED;	  return    peekedLength    -    PEEKED_LONG;    	non-compiled	[CE]  	74	None	replace
221	[BUG]  [BUGGY]  return  peekedNumberLength  -  PEEKED_BUFFERED;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  PEEKED_BUFFERED;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
222	[BUG]  [BUGGY]  return  pos.longValue();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos.longValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos.longValue();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
223	[BUG]  [BUGGY]  return  peekedLong.intValue();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.intValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.intValue();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
224	[BUG]  [BUGGY]  return  peekedLong.booleanValue();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.booleanValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.booleanValue();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
225	[BUG]  [BUGGY]  return  peekedNumber.longValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumber.longValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumber.longValue();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
226	[BUG]  [BUGGY]  return  peekedLong.longValue()  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.longValue()  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.longValue()  +  1;	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
227	[BUG]  [BUGGY]  return  peekedLong  =  PEEKED_NONE;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  PEEKED_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  PEEKED_NONE;	  return    peeked    =    PEEKED_NONE;    	non-compiled	[CE]  	77	None	replace
228	[BUG]  [BUGGY]  return  peekedLength  =  PEEKED_NONE;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  PEEKED_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  PEEKED_NONE;	  return    peeked    =    PEEKED_NONE;    	non-compiled	[CE]  	77	None	replace
229	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_NONE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_NONE;	  return    peeked    =    PEEKED_NONE;    	non-compiled	[CE]  	77	None	replace
230	[BUG]  [BUGGY]  return  pos  -  peekedLong;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  peekedLong;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
231	[BUG]  [BUGGY]  return  peekedLong  -  pos  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  pos  +  1;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
232	[BUG]  [BUGGY]  return  i  -  pos;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  pos;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
233	[BUG]  [BUGGY]  return  last  -  pos;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  pos;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
234	[BUG]  [BUGGY]  return  pos  -  piedLong;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  piedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  piedLong;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
235	[BUG]  [BUGGY]  return  PEEKED_NULL;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NULL;	  return    peeked;    	non-compiled	[CE]  	78	None	replace
236	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_EXP_SIGN;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
237	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  0;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  0;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
238	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_EOF  :  PEEKED_LONG;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_EOF  :  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_EOF  :  PEEKED_LONG;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
239	[BUG]  [BUGGY]  return  pos  <  =  NUMBER_CHAR_LONG;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  NUMBER_CHAR_LONG;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
240	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_LONG  :  NUMBER_CHAR_SIGN;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
241	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
242	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
243	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
244	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_NULL;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
245	[BUG]  [BUGGY]  if(pos  >=  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
246	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
247	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
248	[BUG]  [BUGGY]  return  pos  -  PEEKED_NUMBER;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  PEEKED_NUMBER;	  return    peekedLong    -    PEEKED_NUMBER;    	non-compiled	[CE]  	80	None	replace
249	[BUG]  [BUGGY]  return  last  -  PEEKED_NUMBER;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  PEEKED_NUMBER;	  return    peekedLong    -    PEEKED_NUMBER;    	non-compiled	[CE]  	80	None	replace
250	[BUG]  [BUGGY]  return  pos.doubleValue();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
251	[BUG]  [BUGGY]  return  peekedNumber.doubleValue();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumber.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumber.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
252	[BUG]  [BUGGY]  return  peekedNumberLength.doubleValue();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
253	[BUG]  [BUGGY]  pos  +=  peekedLong.doubleValue();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  peekedLong.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  peekedLong.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
254	[BUG]  [BUGGY]  pos  =  peekedLong.doubleValue();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  =  peekedLong.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  =  peekedLong.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
255	[BUG]  [BUGGY]  return  peekedLong.doubleValue()  +  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.doubleValue()  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.doubleValue()  +  1;	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
256	[BUG]  [BUGGY]  return  peekedLength  -  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
257	[BUG]  [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
258	[BUG]  [BUGGY]  return  peekedLength  >  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
259	[BUG]  [BUGGY]  return  peekedLength  -  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  NUMBER_CHAR_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
260	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_EOF;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	92	None	replace
261	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	92	None	replace
262	[BUG]  [BUGGY]  pendNumberLength  +=  i;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  +=  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  +=  i;	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	92	None	replace
263	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	92	None	replace
264	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  +  1;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
265	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_NONE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_NONE;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
266	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  =  Long.MIN_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  =  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  =  Long.MIN_VALUE;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
267	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_LENGTH;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_LENGTH;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_LENGTH;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
268	[BUG]  [BUGGY]  if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
269	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  pos;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  pos;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  pos;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
270	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  pos;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  pos;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  pos;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
271	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
272	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_EXP_E;  }  else  {  peekedNumberLength  =  Long.MIN_VALUE;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
273	[BUG]  [BUGGY]  if(pos  >  -1)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  -1)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  -1)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
274	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
275	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
276	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
277	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BOTH;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
278	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_DOUBLE_QUOTED;	  return    peekedLong    -    PEEKED_BUFFERED;    	non-compiled	[CE]  	35	None	replace
279	[BUG]  [BUGGY]  return  last  -  PEEKED_BUFFERED;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  PEEKED_BUFFERED;	  return    peekedLong    -    PEEKED_BUFFERED;    	non-compiled	[CE]  	35	None	replace
280	[BUG]  [BUGGY]  return  PEEKED_LONG  -  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_LONG  -  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_LONG  -  i;	  return    i    -    PEEKED_LONG;    	non-compiled	[CE]  	83	None	replace
281	[BUG]  [BUGGY]  return  pos  +  PEEKED_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  +  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  +  PEEKED_LONG;	  return    i    -    PEEKED_LONG;    	non-compiled	[CE]  	83	None	replace
282	[BUG]  [BUGGY]  peechedNumberLength  =  pos;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peechedNumberLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peechedNumberLength  =  pos;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	4	None	replace
283	[BUG]  [BUGGY]  return  pos  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
284	[BUG]  [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
285	[BUG]  [BUGGY]  return  peekedLong  &  NUMBER_CHAR_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  &  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  &  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
286	[BUG]  [BUGGY]  return  last  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
287	[BUG]  [BUGGY]  return  peekedLong?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  NUMBER_CHAR_NONE  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
288	[BUG]  [BUGGY]  return  peekedLong  =  PEEKED_EOF;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  PEEKED_EOF;	  return    peeked    =    PEEKED_EOF;    	non-compiled	[CE]  	31	None	replace
289	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_EOF;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_EOF;	  return    peeked    =    PEEKED_EOF;    	non-compiled	[CE]  	31	None	replace
290	[BUG]  [BUGGY]  return  peekedLong  =  pos  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  pos  +  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	55	None	replace
291	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  +  pos;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  +  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_SIGN  +  pos;	  return    peekedLong    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	55	None	replace
292	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  /  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  /  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_SIGN  /  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	55	None	replace
293	[BUG]  [BUGGY]  return  pos  =  PEEKED_NUMBER;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  PEEKED_NUMBER;	  return    peekedLong    =    PEEKED_NUMBER;    	non-compiled	[CE]  	25	None	replace
294	[BUG]  [BUGGY]  while(pos  <  0)  {  peekedNumberLength  =  i;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  while(pos  <  0)  {  peekedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	while(pos  <  0)  {  peekedNumberLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
295	[BUG]  [BUGGY]  buckedNumber  =  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  buckedNumber  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	buckedNumber  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
296	[BUG]  [BUGGY]  while(pos  <  0)  {  peekedNumberLength++;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  while(pos  <  0)  {  peekedNumberLength++;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	while(pos  <  0)  {  peekedNumberLength++;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
297	[BUG]  [BUGGY]  return  peeked  =  Long.MIN_VALUE  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MIN_VALUE  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MIN_VALUE  -  1;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
298	[BUG]  [BUGGY]  return  peeked  =  Long.MIN_VALUE  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MIN_VALUE  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MIN_VALUE  +  1;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
299	[BUG]  [BUGGY]  return  peekedLong.MIN_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.MIN_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
300	[BUG]  [BUGGY]  return  peekedLong  -  Long.MIN_VALUE;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  Long.MIN_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
301	[BUG]  [BUGGY]  return  peekedLong  =  value;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  value;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  value;	  return    peekedLong    =    i;    	non-compiled	[CE]  	15	None	replace
302	[BUG]  [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  NUMBER_CHAR_SIGN;	  peekedNumber    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	41	None	replace
303	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_SIGN  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_SIGN  +  1;	  peekedNumber    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	41	None	replace
304	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	60	None	replace
305	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	60	None	replace
306	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
307	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
308	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFER;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFER;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFER;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
309	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
310	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
311	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
312	[BUG]  [BUGGY]  return  pos  =  NUMBER_CHAR_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  NUMBER_CHAR_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  NUMBER_CHAR_QUOTED;	  return    peekedLong    =    NUMBER_CHAR_QUOTED;    	non-compiled	[CE]  	27	None	replace
313	[BUG]  [BUGGY]  return  pos  >  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  >  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  >  i;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
314	[BUG]  [BUGGY]  return  peekedNumberLength  >  i;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  >  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  >  i;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
315	[BUG]  [BUGGY]  return  i  >  peekedLength;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  >  peekedLength;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  >  peekedLength;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
316	[BUG]  [BUGGY]  return  peekedLong  >  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  >  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  >  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
317	[BUG]  [BUGGY]  return  peekedLong  >  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  >  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  >  NUMBER_CHAR_SIGN;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
318	[BUG]  [BUGGY]  return  peekedLength  =  pos  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  pos  +  1;	  return    peekedLength    =    i    +    1;    	non-compiled	[CE]  	105	None	replace
319	[BUG]  [BUGGY]  return  peekedNumberLength  =  i  +  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  i  +  1;	  return    peekedLength    =    i    +    1;    	non-compiled	[CE]  	105	None	replace
320	[BUG]  [BUGGY]  return  peekedLength  -  i  +  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  i  +  1;	  return    peekedLength    =    i    +    1;    	non-compiled	[CE]  	105	None	replace
321	[BUG]  [BUGGY]  return  peekedNumberLength  -  i  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  i  +  1;	  return    peekedLength    =    i    +    1;    	non-compiled	[CE]  	105	None	replace
322	[BUG]  [BUGGY]  return  peekedNumberLength  =  pos  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  pos  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  pos  +  1;	  return    peekedLength    =    i    +    1;    	non-compiled	[CE]  	105	None	replace
323	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_LONG;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_CHAR_LONG;	  return    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
324	[BUG]  [BUGGY]  peekedLong  =  i;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  =  i;	  return    PEEKED_NUMBER;    	non-compiled	[CE]  	10	None	replace
325	[BUG]  [BUGGY]  peekedLong  =  NUMBER_CHAR_SIGN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  =  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  =  NUMBER_CHAR_SIGN;	  return    PEEKED_NUMBER;    	non-compiled	[CE]  	10	None	replace
326	[BUG]  [BUGGY]  peekedLong  =  PEEKED_NUMBER;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  =  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  =  PEEKED_NUMBER;	  return    PEEKED_NUMBER;    	non-compiled	[CE]  	10	None	replace
327	[BUG]  [BUGGY]  return  pos  -  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    -    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	37	None	replace
328	[BUG]  [BUGGY]  return  last  -  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  last  -  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  last  -  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    -    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	37	None	replace
329	[BUG]  [BUGGY]  return  NUMBER_CHAR_EXP_SIGN  -  peekedLong;  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_EXP_SIGN  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_EXP_SIGN  -  peekedLong;	  return    peekedLong    -    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	37	None	replace
330	[BUG]  [BUGGY]  peekedNumberLength  =  -peekedLong;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
331	[BUG]  [BUGGY]  peechedNumberLength  =  -peekedLong;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peechedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peechedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
332	[BUG]  [BUGGY]  pieedNumberLength  =  -peekedLong;  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pieedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pieedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
333	[BUG]  [BUGGY]  piedNumberLength  =  -peekedLong;  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
334	[BUG]  [BUGGY]  pendNumberLength  =  -peekedLong;  [CE]  [FE]                                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
335	[BUG]  [BUGGY]  piedNumberLength  =  pos;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedNumberLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedNumberLength  =  pos;	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
336	[BUG]  [BUGGY]  bucketLength  =  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  bucketLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	bucketLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
337	[BUG]  [BUGGY]  peerLength  =  pos;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peerLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peerLength  =  pos;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
338	[BUG]  [BUGGY]  piedLength  =  i;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedLength  =  i;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
339	[BUG]  [BUGGY]  return  peekedLength  <  =  i  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  i  +  1;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
340	[BUG]  [BUGGY]  return  peekedLength  >  Long.MIN_VALUE;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  Long.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  Long.MIN_VALUE;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
341	[BUG]  [BUGGY]  return  peekedLength  >  Long.MAX_VALUE;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  Long.MAX_VALUE;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
342	[BUG]  [BUGGY]  return  PEEKED_NUMBERL;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NUMBERL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NUMBERL;	  return    peekedNumber;    	non-compiled	[CE]  	53	None	replace
343	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
344	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MAX_VALUE;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MAX_VALUE;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  Long.MAX_VALUE;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
345	[BUG]  [BUGGY]  return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  >  Long.MAX_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
346	[BUG]  [BUGGY]  return  peeked  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MIN_VALUE  ||  peekedNumberLength  >  Long.MAX_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
347	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_SIGN  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_SIGN  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_SIGN  -  1;	  peekedNumber    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	41	None	replace
348	[BUG]  [BUGGY]  peekedNumber  =  0;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  0;	  peekedNumber    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	41	None	replace
349	[BUG]  [BUGGY]  return  peeked  =  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_CHAR_EXP_SIGN  +  1;	  return    peeked    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	111	None	replace
350	[BUG]  [BUGGY]  return  peekedLength  =  Long.MIN_VALUE  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.MIN_VALUE  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.MIN_VALUE  +  1;	  return    peekedLength    =    Long.MIN_VALUE;    	non-compiled	[CE]  	49	None	replace
351	[BUG]  [BUGGY]  return  pos  =  PEEKED_DOUBLE;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  PEEKED_DOUBLE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  PEEKED_DOUBLE;	  return    pos    =    PEEKED_BUFFERED;    	non-compiled	[CE]  	28	None	replace
352	[BUG]  [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos++]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.parseLong(pathNames[pos++]);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.parseLong(pathNames[pos++]);	  return    peekedLength    =    Long.parseLong(pathNames[pos]);    	non-compiled	[CE]  	73	None	replace
353	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MAX_VALUE;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MAX_VALUE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  Long.MAX_VALUE;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
354	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
355	[BUG]  [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  i;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  i;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  peekedNumberLength  =  i;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
356	[BUG]  [BUGGY]  return  peekedNumberLength  -  PEEKED_NUMBER;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  PEEKED_NUMBER;	  return    peekedLong    -    PEEKED_NUMBER;    	non-compiled	[CE]  	80	None	replace
357	[BUG]  [BUGGY]  return  i  -  PEEKED_NUMBER;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  PEEKED_NUMBER;	  return    peekedLong    -    PEEKED_NUMBER;    	non-compiled	[CE]  	80	None	replace
358	[BUG]  [BUGGY]  return  i  =  PEEKED_BUCKET;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  PEEKED_BUCKET;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  PEEKED_BUCKET;	  return    pos    =    PEEKED_BUCKET;    	non-compiled	[CE]  	68	None	replace
359	[BUG]  [BUGGY]  return  peekedNumber  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumber  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumber  +  1;	  return    peekedNumberLength    +    1;    	non-compiled	[CE]  	56	None	replace
360	[BUG]  [BUGGY]  piedNumber  =  i;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  piedNumber  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	piedNumber  =  i;	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
361	[BUG]  [BUGGY]  return  pos  -  PEEKED_EOF;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  PEEKED_EOF;	  return    pos    -    PEEKED_LONG;    	non-compiled	[CE]  	32	None	replace
362	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_EXP_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_EXP_SIGN;	  return    i    -    PEEKED_LONG;    	non-compiled	[CE]  	83	None	replace
363	[BUG]  [BUGGY]  return  i  -  PEEKED_LONG  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  PEEKED_LONG  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  PEEKED_LONG  +  1;	  return    i    -    PEEKED_LONG;    	non-compiled	[CE]  	83	None	replace
364	[BUG]  [BUGGY]  return  peekedLong.value();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.value();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.value();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
365	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_EXP_SIGN  +  1;	  return    peekedLong    -    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	37	None	replace
366	[BUG]  [BUGGY]  if(pos  <  =  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  =  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  =  0)  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
367	[BUG]  [BUGGY]  peerLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peerLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peerLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
368	[BUG]  [BUGGY]  return  peekedLong  =  i  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  i  +  1;	  return    peekedLong    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	55	None	replace
369	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  +  2;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_SIGN  +  2;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_SIGN  +  2;	  return    peekedLong    =    NUMBER_CHAR_SIGN    +    1;    	non-compiled	[CE]  	55	None	replace
370	[BUG]  [BUGGY]  return  i  =  PEEKED_EOF;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  PEEKED_EOF;	  return    i    =    PEEKED_LONG;    	non-compiled	[CE]  	75	None	replace
371	[BUG]  [BUGGY]  return  i  =  NUMBER;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  NUMBER;	  return    i    =    PEEKED_LONG;    	non-compiled	[CE]  	75	None	replace
372	[BUG]  [BUGGY]  return  i  -  PEEKED_BUFFERED;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  PEEKED_BUFFERED;	  return    peekedLong    -    PEEKED_BUFFERED;    	non-compiled	[CE]  	35	None	replace
373	[BUG]  [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_DECIMAL;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
374	[BUG]  [BUGGY]  return  peekedNumberLength  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
375	[BUG]  [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  NUMBER_CHAR_SIGN  :  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
376	[BUG]  [BUGGY]  return  peekedLong  =  -peekedLong;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  -peekedLong;	  return    peekedLong    =   "0   ";    	non-compiled	[CE]  	91	None	replace
377	[BUG]  [BUGGY]  return  peekedLong  -  i  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  i  +  1;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
378	[BUG]  [BUGGY]  return  peekedLong  -  i.intValue;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  i.intValue;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  i.intValue;	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
379	[BUG]  [BUGGY]  return  peekedLong  -  i.longValue();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  i.longValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  i.longValue();	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
380	[BUG]  [BUGGY]  return  PEEKED_NUMBER  -  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NUMBER  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NUMBER  -  1;	  return    peekedLong    -    1;    	non-compiled	[CE]  	14	None	replace
381	[BUG]  [BUGGY]  return  NUMBER_NUMBER;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_NUMBER;	  return    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
382	[BUG]  [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  =  NUMBER_CHAR_DIGIT;	  return    peekedNumberLength    =    i;    	non-compiled	[CE]  	20	None	replace
383	[BUG]  [BUGGY]  return  peekedNumberLength  -  PEEKED_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  PEEKED_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  PEEKED_SIGN;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
384	[BUG]  [BUGGY]  return  peekedNumberLength  -  PEEKED_DOUBLE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  PEEKED_DOUBLE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  PEEKED_DOUBLE;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
385	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	60	None	replace
386	[BUG]  [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  NUMBER_CHAR_EXP_SIGN;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
387	[BUG]  [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  NUMBER_CHAR_EXP_DIGIT;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
388	[BUG]  [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumberLength  -  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumberLength  -  NUMBER_CHAR_SIGN;	  return    peekedNumberLength    -    i;    	non-compiled	[CE]  	21	None	replace
389	[BUG]  [BUGGY]  return  peekedLength  >>  PEEKED_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >>  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >>  PEEKED_LONG;	  return    peekedLength    <    =    PEEKED_LONG;    	non-compiled	[CE]  	44	None	replace
390	[BUG]  [BUGGY]  return  PEEKED_EOF  -  PEEKED_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_EOF  -  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_EOF  -  PEEKED_LONG;	  return    last    -    PEEKED_LONG;    	non-compiled	[CE]  	34	None	replace
391	[BUG]  [BUGGY]  return  PEEKED_EOF;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_EOF;	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
392	[BUG]  [BUGGY]  return  PEEKED_BOOLEAN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_BOOLEAN;	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
393	[BUG]  [BUGGY]  peekedNumberLength  = " ";  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  = " ";  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  = " ";	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
394	[BUG]  [BUGGY]  return  peekedLong  -  PEEKED_BOOLEAN  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  PEEKED_BOOLEAN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  PEEKED_BOOLEAN  +  1;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
395	[BUG]  [BUGGY]  return  i  -  PEEKED_BOOLEAN;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  PEEKED_BOOLEAN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  PEEKED_BOOLEAN;	  return    peekedLong    -    PEEKED_BOOLEAN;    	non-compiled	[CE]  	81	None	replace
396	[BUG]  [BUGGY]  return  peekedLength  ==  0;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  ==  0;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  ==  0;	  return    peekedLength    >    0;    	non-compiled	[CE]  	100	None	replace
397	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_NONE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_NONE;	  return    peekedLong    =    NUMBER;    	non-compiled	[CE]  	17	None	replace
398	[BUG]  [BUGGY]  return  peekedLength  =  Long.MAX_VALUE  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  Long.MAX_VALUE  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  Long.MAX_VALUE  +  1;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
399	[BUG]  [BUGGY]  return  peekedLength  -  Long.MAX_VALUE;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  Long.MAX_VALUE;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
400	[BUG]  [BUGGY]  pendLength  =  pos;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pendLength  =  pos;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pendLength  =  pos;	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
401	[BUG]  [BUGGY]  return  pos  =  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  =  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  =  PEEKED_DOUBLE_QUOTED;	  return    peekedLong    =    PEEKED_DOUBLE_QUOTED;    	non-compiled	[CE]  	104	None	replace
402	[BUG]  [BUGGY]  return  NUMBER_LONG;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_LONG;	  return    i;    	non-compiled	[CE]  	9	None	replace
403	[BUG]  [BUGGY]  peerLength  >  0)  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peerLength  >  0)  {  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peerLength  >  0)  {	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
404	[BUG]  [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  i;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Long.MIN_VALUE  ||  peekedNumberLength  =  i;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
405	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_DIGIT;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_DIGIT;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
406	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_EXP_DIGIT;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
407	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	throw  new  IllegalStateException( " ");	  return    0;    	non-compiled	[CE]  	54	None	replace
408	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  0;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  0;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  0;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
409	[BUG]  [BUGGY]  return  -1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  -1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  -1;	  return    0;    	non-compiled	[CE]  	54	None	replace
410	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  Long.MIN_VALUE;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
411	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
412	[BUG]  [BUGGY]  return  i  >  PEEKED_LONG;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  >  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  >  PEEKED_LONG;	  return    peekedLength    >    PEEKED_LONG;    	non-compiled	[CE]  	43	None	replace
413	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_NUMBER;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_NUMBER;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
414	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_CHAR_NUMBER;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_CHAR_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_CHAR_NUMBER;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
415	[BUG]  [BUGGY]  return  PEEKED_NUMERIC;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_NUMERIC;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_NUMERIC;	  return    peeked;    	non-compiled	[CE]  	78	None	replace
416	[BUG]  [BUGGY]  return  peekedLength  -  PEEKED_NUMBER;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  PEEKED_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  PEEKED_NUMBER;	  return    peekedLength    -    PEEKED_LONG;    	non-compiled	[CE]  	74	None	replace
417	[BUG]  [BUGGY]  return  i  -  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  NUMBER_CHAR_SIGN;	  return    peekedLong    -    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	24	None	replace
418	[BUG]  [BUGGY]  pieekedNumberLength  =  -peekedLong;  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pieekedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pieekedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
419	[BUG]  [BUGGY]  pokeedNumberLength  =  -peekedLong;  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pokeedNumberLength  =  -peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pokeedNumberLength  =  -peekedLong;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    -peekedLong;    }    	non-compiled	[CE]  	7	None	replace
420	[BUG]  [BUGGY]  return  peekedLong  +  i;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  +  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  +  i;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
421	[BUG]  [BUGGY]  peekedNumberLength  =  Long.MAX_VALUE;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  Long.MAX_VALUE;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
422	[BUG]  [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  NUMBER_CHAR_DIGIT;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
423	[BUG]  [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;	  peekedNumberLength    =    i;    	non-compiled	[CE]  	2	None	replace
424	[BUG]  [BUGGY]  return  peeked  =  0L;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  0L;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  0L;	  return    peeked    =    0;    	non-compiled	[CE]  	52	None	replace
425	[BUG]  [BUGGY]  return  peeked  =  PEEKED_NUMERIC;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  PEEKED_NUMERIC;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  PEEKED_NUMERIC;	  return    peeked    =    0;    	non-compiled	[CE]  	52	None	replace
426	[BUG]  [BUGGY]  last  =  NUMBER_LONG;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_LONG;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
427	[BUG]  [BUGGY]  last  =  NUMBER_NUMBER;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_NUMBER;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
428	[BUG]  [BUGGY]  last  =  PEEKED_NONE;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  PEEKED_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  PEEKED_NONE;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
429	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_SIGN  +  1;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
430	[BUG]  [BUGGY]  if(pos  >=  0)  {  return  peekedNumberLength;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  return  peekedNumberLength;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  return  peekedNumberLength;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
431	[BUG]  [BUGGY]  if(pos  <  0)  {  return  peekedNumberLength;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  peekedNumberLength;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  peekedNumberLength;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
432	[BUG]  [BUGGY]  parent  ==  if(pos  >  0)  {  return  peekedNumberLength;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  parent  ==  if(pos  >  0)  {  return  peekedNumberLength;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	parent  ==  if(pos  >  0)  {  return  peekedNumberLength;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
433	[BUG]  [BUGGY]  parent  ==  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  parent  ==  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	parent  ==  if(pos  >  0)  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
434	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength  +  1;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedNumberLength  +  1;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedNumberLength  +  1;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
435	[BUG]  [BUGGY]  return  pos  +(peekedLong.doubleValue());  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  +(peekedLong.doubleValue());  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  +(peekedLong.doubleValue());	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
436	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_EXP_SIGN  +  1;	  peekedNumber    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	38	None	replace
437	[BUG]  [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_SIGN  -  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  NUMBER_CHAR_EXP_SIGN  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  NUMBER_CHAR_EXP_SIGN  -  1;	  peekedNumber    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	38	None	replace
438	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  -  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  -  1;	  return    peekedLong    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	18	None	replace
439	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_EXP_SIGN  +  1;	  return    peekedLong    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	18	None	replace
440	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
441	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
442	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_NONE;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
443	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_DIGIT;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
444	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
445	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_LENGTH;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_LENGTH;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_LENGTH;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
446	[BUG]  [BUGGY]  return  peeked  =  PEEKED_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  PEEKED_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  PEEKED_QUOTED;	  return    peeked    =    PEEKED_DOUBLE;    	non-compiled	[CE]  	50	None	replace
447	[BUG]  [BUGGY]  return  peekedNumber.length  -  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumber.length  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumber.length  -  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
448	[BUG]  [BUGGY]  return  peekedNumber  -  1;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedNumber  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedNumber  -  1;	  return    peekedNumberLength    -    1;    	non-compiled	[CE]  	57	None	replace
449	[BUG]  [BUGGY]  pokeedNumberLength  =  i;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pokeedNumberLength  =  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pokeedNumberLength  =  i;	  if(peekedNumberLength    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	4	None	replace
450	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_BUFFERED  :  PEEKED_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_BUFFERED  :  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_BUFFERED  :  PEEKED_LONG;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
451	[BUG]  [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_BOOLEAN  :  PEEKED_LONG;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  <  =  Long.MIN_VALUE?  PEEKED_BOOLEAN  :  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  <  =  Long.MIN_VALUE?  PEEKED_BOOLEAN  :  PEEKED_LONG;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
452	[BUG]  [BUGGY]  return  peekedLength  =  PEEKED_EOF;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  =  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  =  PEEKED_EOF;	  return    peeked    =    PEEKED_EOF;    	non-compiled	[CE]  	31	None	replace
453	[BUG]  [BUGGY]  return  peeked  =  NUMBER_LONG;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_LONG;	  return    peeked    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	112	None	replace
454	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  ==  -1)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
455	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
456	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
457	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
458	[BUG]  [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  ==  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  ==  -1)  {  return  PEEKED_DOUBLE;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
459	[BUG]  [BUGGY]  return  peekedLength  -  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  PEEKED_DOUBLE_QUOTED;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
460	[BUG]  [BUGGY]  return  peekedLength  -  PEEKED_BEGIN_OBJECT;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  PEEKED_BEGIN_OBJECT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  PEEKED_BEGIN_OBJECT;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
461	[BUG]  [BUGGY]  return  peekedLength  -  PEEKED_BECIMAL;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  PEEKED_BECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  PEEKED_BECIMAL;	  return    peekedNumberLength    -    PEEKED_LONG;    	non-compiled	[CE]  	79	None	replace
462	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOTH;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
463	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOTH;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
464	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
465	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_BUFFERED;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
466	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_BOTH;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_BOTH;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_BOTH;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
467	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BOTH;  }  else  {  return  PEEKED_OBJECT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOTH;    }    	non-compiled	[CE]  	96	None	replace
468	[BUG]  [BUGGY]  peekedNumber  -=  NUMBER_CHAR_SIGN;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  -=  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  -=  NUMBER_CHAR_SIGN;	  peekedNumber    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	41	None	replace
469	[BUG]  [BUGGY]  return  i.doubleValue();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i.doubleValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i.doubleValue();	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
470	[BUG]  [BUGGY]  return  peekedLong.doubleValue()  -  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.doubleValue()  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.doubleValue()  -  1;	  return    peekedLong.doubleValue();    	non-compiled	[CE]  	82	None	replace
471	[BUG]  [BUGGY]  peekedNumberLength  =  i  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  =  i  +  1;	  return    peekedNumberLength    +    1;    	non-compiled	[CE]  	56	None	replace
472	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
473	[BUG]  [BUGGY]  if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
474	[BUG]  [BUGGY]  if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  return  PEEKED_BUFFERED;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
475	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  PEEKED_BOOLEAN;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >=    -1)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	88	None	replace
476	[BUG]  [BUGGY]  if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
477	[BUG]  [BUGGY]  if(pos  <  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
478	[BUG]  [BUGGY]  if(pos  >=  -1)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  PEEKED_NULL;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
479	[BUG]  [BUGGY]  if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  0;  }  else  {  peekedNumberLength  =  i;  return  NUMBER_CHAR_DECIMAL;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
480	[BUG]  [BUGGY]  if(pos  >=  0)  {  return  0;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  return  0;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  return  0;  }	  return    0;    	non-compiled	[CE]  	54	None	replace
481	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	92	None	replace
482	[BUG]  [BUGGY]  peekedLong  =  i  +  1;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  =  i  +  1;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
483	[BUG]  [BUGGY]  return  peekedLong  /  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  1;	  return    peekedLong    +    1;    	non-compiled	[CE]  	58	None	replace
484	[BUG]  [BUGGY]  return  peeked  =  NUMBER_CHAR_DIGIT  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_CHAR_DIGIT  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_CHAR_DIGIT  +  1;	  return    peeked    =    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	110	None	replace
485	[BUG]  [BUGGY]  return  peekedLong?  PEEKED_NUMBER  :  PEEKED_BUFFERED;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  PEEKED_NUMBER  :  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  PEEKED_NUMBER  :  PEEKED_BUFFERED;	  return    peeked    =    PEEKED_NUMBER;    	non-compiled	[CE]  	69	None	replace
486	[BUG]  [BUGGY]  last  =  NUMBER_CHAR_EXP_DIGIT  +  1;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  last  =  NUMBER_CHAR_EXP_DIGIT  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	last  =  NUMBER_CHAR_EXP_DIGIT  +  1;	  last    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	61	None	replace
487	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_DECIMAL;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_DECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_DECIMAL;	  return    peekedLong    =    NUMBER_CHAR_DECIMAL;    	non-compiled	[CE]  	29	None	replace
488	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_NONE;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_NONE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_NONE;	  return    peekedLong    =    NUMBER_CHAR_NONE;    	non-compiled	[CE]  	23	None	replace
489	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_DIGIT;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_DIGIT;	  return    peekedLong    =    NUMBER_CHAR_DIGIT;    	non-compiled	[CE]  	90	None	replace
490	[BUG]  [BUGGY]  return  peeked  =  NUMBER_CHAR_EXP_SIGN  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_CHAR_EXP_SIGN  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_CHAR_EXP_SIGN  -  1;	  return    peeked    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	111	None	replace
491	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_FRACTION_DIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_FRACTION_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_FRACTION_DIGIT;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
492	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DECIMAL;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DECIMAL;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
493	[BUG]  [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DIGIT;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  NUMBER_CHAR_EXP_SIGN  *  NUMBER_CHAR_DIGIT;	  pos    +=    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	39	None	replace
494	[BUG]  [BUGGY]  if(pos  <  =  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_EXP_SIGN;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  =  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_EXP_SIGN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  =  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_EXP_SIGN;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
495	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_LONG;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_LONG;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_LONG;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
496	[BUG]  [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  NUMBER_CHAR_DECIMAL;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
497	[BUG]  [BUGGY]  if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  return  PEEKED_LONG;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  return  PEEKED_LONG;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  i;  }  else  {  peekedNumberLength  =  pos;  return  PEEKED_LONG;  }	  return    i;    	non-compiled	[CE]  	9	None	replace
498	[BUG]  [BUGGY]  peekedLong  -  PEEKED_LONG;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLong  -  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLong  -  PEEKED_LONG;	  return    i    -    PEEKED_LONG;    	non-compiled	[CE]  	83	None	replace
499	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
500	[BUG]  [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
501	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOOLEAN;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOOLEAN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_BOOLEAN;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_BOOLEAN;    }    	non-compiled	[CE]  	97	None	replace
502	[BUG]  [BUGGY]  peekedLength  -=  i;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLength  -=  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLength  -=  i;	  return    peekedLength    -    1;    	non-compiled	[CE]  	99	None	replace
503	[BUG]  [BUGGY]  peekedLength  =  i  -  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLength  =  i  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLength  =  i  -  1;	  return    peekedLength    -    1;    	non-compiled	[CE]  	99	None	replace
504	[BUG]  [BUGGY]  return  peekedLength  +  1;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  +  1;	  return    peekedLength    -    1;    	non-compiled	[CE]  	99	None	replace
505	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	60	None	replace
506	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  +=  i;  return  PEEKED_NULL;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  +=  i;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  +=  i;  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	60	None	replace
507	[BUG]  [BUGGY]  peekedLength  -  i;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedLength  -  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedLength  -  i;	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
508	[BUG]  [BUGGY]  return  peekedLength  -  i.intValue();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  -  i.intValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  -  i.intValue();	  return    peekedLength    -    i;    	non-compiled	[CE]  	71	None	replace
509	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_EXP_DIGIT;	  return    peekedLong    =    NUMBER_CHAR_EXP_DIGIT;    	non-compiled	[CE]  	89	None	replace
510	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_CHAR_EXP_DIGIT;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
511	[BUG]  [BUGGY]  return  peekedLong  /  NUMBER_CHAR_DIGIT;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  NUMBER_CHAR_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  NUMBER_CHAR_DIGIT;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
512	[BUG]  [BUGGY]  return  peekedLong  /  PEEKED_BOTH;  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  /  PEEKED_BOTH;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  /  PEEKED_BOTH;	  return    peekedLong    /    PEEKED_LONG;    	non-compiled	[CE]  	36	None	replace
513	[BUG]  [BUGGY]  return  peekedLong  -  i.intValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  i.intValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  i.intValue();	  return    peekedLong    -    i;    	non-compiled	[CE]  	84	None	replace
514	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
515	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
516	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NUMBER;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NUMBER;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NUMBER;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NUMBER;    }    	non-compiled	[CE]  	47	None	replace
517	[BUG]  [BUGGY]  return  peekedLong?  PEEKED_BOTH  :  PEEKED_BUFFERED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  PEEKED_BOTH  :  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  PEEKED_BOTH  :  PEEKED_BUFFERED;	  return    peeked    =    PEEKED_BOTH;    	non-compiled	[CE]  	103	None	replace
518	[BUG]  [BUGGY]  return  peekedLong?  PEEKED_BOTH  :  PEEKED_EOF;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  PEEKED_BOTH  :  PEEKED_EOF;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  PEEKED_BOTH  :  PEEKED_EOF;	  return    peeked    =    PEEKED_BOTH;    	non-compiled	[CE]  	103	None	replace
519	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
520	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
521	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    	non-compiled	[CE]  	102	None	replace
522	[BUG]  [BUGGY]  if(pos  >=  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  0)  {  return  NUMBER_CHAR_DECIMAL;  }  else  {  return  NUMBER_CHAR_DIGIT;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
523	[BUG]  [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
524	[BUG]  [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  NUMBER_CHAR_DECIMAL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    NUMBER_CHAR_DECIMAL;    }    	non-compiled	[CE]  	93	None	replace
525	[BUG]  [BUGGY]  return  peekedLong?  NUMBER_CHAR_DECIMAL  :  NUMBER_CHAR_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  NUMBER_CHAR_DECIMAL  :  NUMBER_CHAR_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  NUMBER_CHAR_DECIMAL  :  NUMBER_CHAR_SIGN;	  return    peekedLong    :    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	85	None	replace
526	[BUG]  [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  peekedNumberLength  =  i  +  1;  return  PEEKED_NULL;  }	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
527	[BUG]  [BUGGY]  peakedNumberLength  =  i;  return  PEEKED_NULL;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peakedNumberLength  =  i;  return  PEEKED_NULL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peakedNumberLength  =  i;  return  PEEKED_NULL;	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
528	[BUG]  [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }	  if(pos    <    0)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	101	None	replace
529	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  0;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
530	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  return  PEEKED_NULL;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    return    PEEKED_NULL;    }    	non-compiled	[CE]  	59	None	replace
531	[BUG]  [BUGGY]  return  peekedLong  -  2;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  2;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  2;	  return    peekedLong    -    1;    	non-compiled	[CE]  	14	None	replace
532	[BUG]  [BUGGY]  return  peeked  -  PEEKED_LONG;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  -  PEEKED_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  -  PEEKED_LONG;	  return    last    -    PEEKED_LONG;    	non-compiled	[CE]  	34	None	replace
533	[BUG]  [BUGGY]  return  peekedLength  >  i  +  1;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  i  +  1;	  return    peekedLength    >    i;    	non-compiled	[CE]  	106	None	replace
534	[BUG]  [BUGGY]  return  peekedLong  :  PEEKED_BUFFERED;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  PEEKED_BUFFERED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  PEEKED_BUFFERED;	  return    peekedLong    =    PEEKED_NUMBER;    	non-compiled	[CE]  	25	None	replace
535	[BUG]  [BUGGY]  return  peeked  =  NUMBER_CHAR_SIGN  +  1;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  NUMBER_CHAR_SIGN  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  NUMBER_CHAR_SIGN  +  1;	  return    peeked    =    NUMBER_CHAR_SIGN;    	non-compiled	[CE]  	112	None	replace
536	[BUG]  [BUGGY]  return  peeked  =  PEEKED_BUCKET;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  PEEKED_BUCKET;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  PEEKED_BUCKET;	  return    pos    =    PEEKED_BUCKET;    	non-compiled	[CE]  	68	None	replace
537	[BUG]  [BUGGY]  return  peekedLong?  PEEKED_LONG  :  i;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong?  PEEKED_LONG  :  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong?  PEEKED_LONG  :  i;	  return    pos    =    PEEKED_LONG;    	non-compiled	[CE]  	45	None	replace
538	[BUG]  [BUGGY]  return  peekedLength  >  NUMBER_CHAR_DECIMAL?  NUMBER_CHAR_EXP_SIGN  :  i;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  NUMBER_CHAR_DECIMAL?  NUMBER_CHAR_EXP_SIGN  :  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  NUMBER_CHAR_DECIMAL?  NUMBER_CHAR_EXP_SIGN  :  i;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
539	[BUG]  [BUGGY]  return  peekedLength  >  NUMBER_CHAR_DECIMAL?  PEEKED_BEGIN_OBJECT  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  >  NUMBER_CHAR_DECIMAL?  PEEKED_BEGIN_OBJECT  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  >  NUMBER_CHAR_DECIMAL?  PEEKED_BEGIN_OBJECT  :  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
540	[BUG]  [BUGGY]  return  i  =  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  NUMBER_CHAR_EXP_SIGN;	  return    peekedLength    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	72	None	replace
541	[BUG]  [BUGGY]  return  peeked  =  Long.MAX_VALUE;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MAX_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
542	[BUG]  [BUGGY]  return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  ==  Long.MAX_VALUE;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  ==  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peeked  =  Long.MIN_VALUE  &&  peekedNumberLength  ==  Long.MAX_VALUE;	  return    peeked    =    Long.MIN_VALUE;    	non-compiled	[CE]  	22	None	replace
543	[BUG]  [BUGGY]  return  i  =  Long.MAX_VALUE;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  =  Long.MAX_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  =  Long.MAX_VALUE;	  return    peekedLength    =    Long.MAX_VALUE;    	non-compiled	[CE]  	70	None	replace
544	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	18	None	replace
545	[BUG]  [BUGGY]  peekedNumberLength  = "0 ";  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumberLength  = "0 ";  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumberLength  = "0 ";	  peekedNumberLength    =    pos;    	non-compiled	[CE]  	1	None	replace
546	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
547	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
548	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_DOUBLE_QUOTED;  }  else  {  return  PEEKED_NONE;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_NONE;    }    	non-compiled	[CE]  	48	None	replace
549	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER;	  return    peekedLong    =    NUMBER;    	non-compiled	[CE]  	17	None	replace
550	[BUG]  [BUGGY]  return  NUMBER_CHAR_LONG  -  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_LONG  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_LONG  -  1;	  return    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
551	[BUG]  [BUGGY]  return  NUMBER_CHAR_LONG  +  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_LONG  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_LONG  +  1;	  return    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
552	[BUG]  [BUGGY]  return  NUMBER_CHAR_LONG  +  i;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_LONG  +  i;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_LONG  +  i;	  return    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	12	None	replace
553	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_QUOTED;	  return    peekedLong    =    NUMBER_CHAR_QUOTED;    	non-compiled	[CE]  	27	None	replace
554	[BUG]  [BUGGY]  return  peekedLong  :  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  PEEKED_DOUBLE_QUOTED;	  return    peekedLong    =    NUMBER_CHAR_QUOTED;    	non-compiled	[CE]  	27	None	replace
555	[BUG]  [BUGGY]  return  NUMBER_CHAR_DECIMAL;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_DECIMAL;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_DECIMAL;	  return    pos;    	non-compiled	[CE]  	8	None	replace
556	[BUG]  [BUGGY]  return  NUMBER_CHAR_EXP_DIGIT;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  NUMBER_CHAR_EXP_DIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  NUMBER_CHAR_EXP_DIGIT;	  return    pos;    	non-compiled	[CE]  	8	None	replace
557	[BUG]  [BUGGY]  return  peekedLong  =  Integer.MIN_VALUE;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  Integer.MIN_VALUE;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  Integer.MIN_VALUE;	  return    peekedLong    =    Long.MIN_VALUE;    	non-compiled	[CE]  	19	None	replace
558	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NONE;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NONE;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NONE;  }	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
559	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NONE;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NONE;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NONE;  }  else  {  return  PEEKED_EOF;  }	  return    PEEKED_NONE;    	non-compiled	[CE]  	13	None	replace
560	[BUG]  [BUGGY]  return  PEEKED_BUFFERED  -  peekedLong;  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  PEEKED_BUFFERED  -  peekedLong;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  PEEKED_BUFFERED  -  peekedLong;	  return    peekedLong    -    PEEKED_BUFFERED;    	non-compiled	[CE]  	35	None	replace
561	[BUG]  [BUGGY]  pos  +=  Long.parseLong(peekedLong);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  pos  +=  Long.parseLong(peekedLong);  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	pos  +=  Long.parseLong(peekedLong);	  pos    +=    i;    	non-compiled	[CE]  	3	None	replace
562	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peekedLong;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peekedLong;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peekedLong;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
563	[BUG]  [BUGGY]  if(pos  >  0)  {  return  peeked;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  peeked;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  peeked;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    	non-compiled	[CE]  	95	None	replace
564	[BUG]  [BUGGY]  peekedNumber  =  i  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  =  i  +  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  =  i  +  1;	  peekedNumber    =    i;    	non-compiled	[CE]  	40	None	replace
565	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
566	[BUG]  [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  =  0)  {  return  peekedNumberLength;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
567	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
568	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NULL;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    return    peekedNumberLength;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	94	None	replace
569	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
570	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
571	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_SIGN;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
572	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  NUMBER_CHAR_SIGN;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
573	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  +=  i;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  +=  i;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  +=  i;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
574	[BUG]  [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  -pos;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  peekedNumberLength  =  -pos;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  peekedNumberLength  =  -pos;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >    0)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	63	None	replace
575	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_DOUBLE_QUOTED;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_DOUBLE_QUOTED;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_DOUBLE_QUOTED;	  return    peekedLong    =    NUMBER_DOUBLE_QUOTED;    	non-compiled	[CE]  	64	None	replace
576	[BUG]  [BUGGY]  peekedNumber  -=  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  peekedNumber  -=  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	peekedNumber  -=  NUMBER_CHAR_EXP_SIGN;	  peekedNumber    =    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	38	None	replace
577	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  NUMBER_CHAR_EXP_DIGIT;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
578	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  i  +  1;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
579	[BUG]  [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  0;  }  else  {  return  PEEKED_NULL;  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >=  -1)  {  peekedNumberLength  =  0;  }  else  {  return  PEEKED_NULL;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >=  -1)  {  peekedNumberLength  =  0;  }  else  {  return  PEEKED_NULL;  }	  if(pos    >=    -1)    {    peekedNumberLength    =    i;    }    else    {    return    PEEKED_NULL;    }    	non-compiled	[CE]  	62	None	replace
580	[BUG]  [BUGGY]  return  pos  -  pi;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  pos  -  pi;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  pos  -  pi;	  return    peekedLong    -    pos;    	non-compiled	[CE]  	33	None	replace
581	[BUG]  [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  PEEKED_BUFFERED;  }  else  {  return  PEEKED_EOF;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    return    PEEKED_EOF;    }    	non-compiled	[CE]  	86	None	replace
582	[BUG]  [BUGGY]  return  i.longValue();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i.longValue();  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i.longValue();	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
583	[BUG]  [BUGGY]  return  peekedLong.booleanValue()?  true  :  false;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong.booleanValue()?  true  :  false;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong.booleanValue()?  true  :  false;	  return    peekedLong.longValue();    	non-compiled	[CE]  	11	None	replace
584	[BUG]  [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  return  PEEKED_NUMBER;  }  else  {  return  PEEKED_BUFFERED;  }	  return    PEEKED_NUMBER;    	non-compiled	[CE]  	10	None	replace
585	[BUG]  [BUGGY]  if(pos  <  0)  {  return  peekedLength;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  <  0)  {  return  peekedLength;  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  <  0)  {  return  peekedLength;  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
586	[BUG]  [BUGGY]  if(pos  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  if(pos  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	if(pos  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(pos    >    0)    {    return    peekedLength;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	46	None	replace
587	[BUG]  [BUGGY]  return  peekedLong  -  NUMBER_CHAR_LIGIT;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  -  NUMBER_CHAR_LIGIT;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  -  NUMBER_CHAR_LIGIT;	  return    peekedLong    =    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	107	None	replace
588	[BUG]  [BUGGY]  return  peekedLong  :  NUMBER_CHAR_LONG;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  :  NUMBER_CHAR_LONG;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  :  NUMBER_CHAR_LONG;	  return    peekedLong    =    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	107	None	replace
589	[BUG]  [BUGGY]  return  peekedLong  =  NUMBER_CHAR_LONG  -  1;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLong  =  NUMBER_CHAR_LONG  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLong  =  NUMBER_CHAR_LONG  -  1;	  return    peekedLong    =    NUMBER_CHAR_LONG;    	non-compiled	[CE]  	107	None	replace
590	[BUG]  [BUGGY]  return  peekedLength  <  =  i  -  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  peekedLength  <  =  i  -  1;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  peekedLength  <  =  i  -  1;	  return    peekedLength    <    =    i;    	non-compiled	[CE]  	98	None	replace
591	[BUG]  [BUGGY]  return  i  -  NUMBER_CHAR_EXP_SIGN;  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      }  else  if  (last  ==  NUMBER_CHAR_EXP_E  ||  last  ==  NUMBER_CHAR_EXP_SIGN)  {  last  =  NUMBER_CHAR_EXP_DIGIT;  }  }  }  if  (last  ==  NUMBER_CHAR_DIGIT  &&  fitsInLong  &&  (value  !=  Long.MIN_VALUE  ||  negative))  {  peekedLong  =  negative  ?  value  :  -value;  pos  +=  i;      [BUGGY]  return  i  -  NUMBER_CHAR_EXP_SIGN;  [BUGGY]      }  else  if  (last  ==  NUMBER_CHAR_DIGIT  ||  last  ==  NUMBER_CHAR_FRACTION_DIGIT  ||  last  ==  NUMBER_CHAR_EXP_DIGIT)  {  peekedNumberLength  =  i;  return  peeked  =  PEEKED_NUMBER;  }  else  {  return  PEEKED_NONE;  }  }  [CLASS]  JsonReader  1  [METHOD]  peekNumber  [RETURN_TYPE]  int  [VARIABLES]  boolean  fitsInLong  lenient  negative  char  c  Reader  in  int[]  pathIndices  stack  String  keyword  keywordUpper  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  i  l  last  length  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson13/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2886751345948129	734	734	1	replace	return  i  -  NUMBER_CHAR_EXP_SIGN;	  return    peekedLong    -    NUMBER_CHAR_EXP_SIGN;    	non-compiled	[CE]  	37	None	replace
