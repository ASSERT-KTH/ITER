bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  return  result  /  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /  1;	  return    result    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  return  result  +  2;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  2;	  return    result    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
8	[BUG]  [BUGGY]  result  =  result  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  result  +  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  result  +  1;	  return    result    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  return  result  *  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  *  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  *  1;	  return    result    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  1)+(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  1)+(result  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  return  result  -(currentByte  +  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  +  3)+(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  +  3)+(result  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  result  -(currentByte  <  <  3)+(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  result  -(currentByte  <  <  3)+(result  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  *  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  3)+(currentByte  *  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  return  result  +(result  -  '0');  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(result  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  return  result  -(length  -  '0');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(length  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  return  result  /(length  -  '0');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /(length  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  return  result  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+  1;	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(currentByte  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  result  +=(length  -  '0');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  +=(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  +=(length  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  1)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  1)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  2)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  2)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  1)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  1)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  return  result  -(currentByte  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  +  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  +  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  return  result  -(result  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  return  result  -(result  +  1)/  2;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  +  1)/  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  1)/  2;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  return  result  -(result  +  1)/  4;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  +  1)/  4;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  1)/  4;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  return  result  -(result  +  1)/  3;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  +  1)/  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  1)/  3;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  +  1)/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  +  1)/  BYTE_MASK;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  return  result  -(length  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(length  +  1)/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(length  +  1)/  BYTE_MASK;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  1)/  BYTE_MASK  +  1;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/(length  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/(length  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(currentByte  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(result  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(result  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(end  -  '7');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(end  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(end  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(currentByte  *  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(length  -  '0')+(length  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(length  -  '0')+(length  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  return  result  -  3;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -  3;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  return  result  -  2;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -  2;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  return  result  <  <  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  1;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  return  result  -  1L;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -  1L;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -  1L;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =(result  <  <  1)+(currentByte  -  '0');	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  result  =(result  <  <  3)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =(result  <  <  3)+(Byte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =(result  <  <  3)+(Byte  -  '0');	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =(result  <  <  3)+(length  -  '0');	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =(result  <  <  1)+(length  -  '0');	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  2;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(result  -  '0')/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(result  -  '0')/  BYTE_MASK;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  4;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  4;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  4;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  3;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /(length  -  '0')/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /(length  -  '0')/  BYTE_MASK;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  7;  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  7;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  7;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  8;  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  8;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  8;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  return  result  /  3;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /  3;	  return    result    +    3;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  return  result  /  2;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /  2;	  return    result    +    3;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  return  result  *  3;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  *  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  *  3;	  return    result    +    3;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
74	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
75	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
77	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  return  result  -  '0';  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -  '0';  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -  '0';	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  return  result  /  '0';  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  /  '0';  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  /  '0';	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  '0'  +(currentByte  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0'  +(currentByte  -  '7');	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  return  result  +  '0'  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  '0'  +  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0'  +  1;	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  return  result  +  '0'  +  length;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  '0'  +  length;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0'  +  length;	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
84	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -  '0')+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
87	[BUG]  [BUGGY]  return  result  -(result  -  offset)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -  offset)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -  offset)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
88	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  3)+(currentByte  -  '0')+  1;	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
90	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
91	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
92	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  return  result  -(result  <  <  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  4)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  4)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
96	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  3)+('0'  +  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  3)+('0'  +  currentByte);	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
97	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
98	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  3)+(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  3)+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
99	[BUG]  [BUGGY]  return  result  <  <  3;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
100	[BUG]  [BUGGY]  return  result  +(length  -  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  1)/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  1)/  BYTE_MASK;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(result  -  '0')/  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(result  -  '0')/  2;	  return    result    +(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
102	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  '0'  +(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0'  +(currentByte  -  '0');	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  '0';  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')/  '0';  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  '0';	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
105	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  if(result  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  if(result  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	if(result  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  result  =  result;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  result  =  result;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);  result  =  result;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  System.arraycopy(buffer,  offset,  result,  buffer,  start,  length);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	System.arraycopy(buffer,  offset,  result,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
111	[BUG]  [BUGGY]  return  result  -(result  -  '0');  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -  '0');	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  return  result  +(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(result  -  '0')+  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(result  -  '0')+  1;	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  return  result  -(offset  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(offset  +  1)/  BYTE_MASK;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(offset  +  1)/  BYTE_MASK;	  return    result    -(result    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
115	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
116	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
117	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
119	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
120	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
121	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
122	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
123	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  'UTF-8');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  'UTF-8');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  'UTF-8');	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
124	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
125	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
126	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
127	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
128	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    buffer[start]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
129	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(currentByte  <  <  3)+(length  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  3)+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
130	[BUG]  [BUGGY]  return  result  -(result  <  <  4)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  4)+(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  4)+(result  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
131	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  1)+(result  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  1)+(result  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
132	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  <  <  3)+(long  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  <  <  3)+(long  -  '0');	  return    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
133	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(result);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(result);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
134	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(result);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
135	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(result);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(result);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
136	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(result);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(result);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
137	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
138	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(result);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsISOControl(result);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
139	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
140	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
141	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
142	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
143	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
144	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
145	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
146	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
147	[BUG]  [BUGGY]  return  result  +  '0'  +  result;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +  '0'  +  result;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0'  +  result;	  return    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	9	None	replace
148	[BUG]  [BUGGY]  return  result  -(result  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  +  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
149	[BUG]  [BUGGY]  return  result  -(result  -  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -  1)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -  1)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
150	[BUG]  [BUGGY]  return  result  -(result  -(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  -(result  -(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  -(currentByte  <  <  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
151	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(result  -  '0')/(length  -  '7');  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(result  -  '0')/(length  -  '7');	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
152	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(length  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  '0')+(length  -  '7',  currentByte);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(length  -  '7',  currentByte);	  return    result    +(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	11	None	replace
153	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
154	[BUG]  [BUGGY]  return  result  {  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  {  1;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  {  1;	  return    result    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
155	[BUG]  [BUGGY]  return  result  +(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  +(length  -  1)/  '0';  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  1)/  '0';	  return    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	10	None	replace
156	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
157	[BUG]  [BUGGY]  return  result  *  2;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  *  2;  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  *  2;	  return    result    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
158	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
159	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }    [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]    }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(result):    JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
