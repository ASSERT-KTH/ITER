bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result  -  1;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  -  1;  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -  1;	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
2	[BUG]  [BUGGY]  return  result  +  1;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +  1;  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  1;	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
3	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  3)+(currentByte  -  '0');	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  return  result  +  3;  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +  3;  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  3;	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
5	[BUG]  [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK;  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(result  +  1)/  BYTE_MASK;	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
6	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  -(currentByte  <  <  3)+(result  -  '0');  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  -(currentByte  <  <  3)+(result  -  '0');	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
7	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK;  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')/  BYTE_MASK;	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]    [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	  	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
9	[BUG]  [BUGGY]  return  result  +  '0';  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +  '0';  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +  '0';	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
10	[BUG]  [BUGGY]  return  result  +(length  -  '0');  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +(length  -  '0');  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0');	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  +(length  -  '0')+(length  -  '7');  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  +(length  -  '0')+(length  -  '7');	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
16	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer[start]);	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
17	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result, "UTF-8 ");	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
18	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	150	150	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	return  result;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
